# 0 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt//"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
# 26 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 1 3
# 10 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/_ansi.h" 1 3
# 10 "/home/mcoder/cache/gcc/arm-none-eabi/include/_ansi.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/newlib.h" 1 3
# 10 "/home/mcoder/cache/gcc/arm-none-eabi/include/newlib.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/_newlib_version.h" 1 3
# 11 "/home/mcoder/cache/gcc/arm-none-eabi/include/newlib.h" 2 3
# 11 "/home/mcoder/cache/gcc/arm-none-eabi/include/_ansi.h" 2 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/config.h" 1 3



# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/ieeefp.h" 1 3
# 5 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/config.h" 2 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/features.h" 1 3
# 6 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/config.h" 2 3
# 12 "/home/mcoder/cache/gcc/arm-none-eabi/include/_ansi.h" 2 3
# 11 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 1 3
# 13 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/_ansi.h" 1 3
# 14 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 2 3
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 145 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 3 4

# 145 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 214 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 3 4
typedef unsigned int size_t;
# 329 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 3 4
typedef unsigned int wchar_t;
# 15 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 2 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/cdefs.h" 1 3
# 45 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/cdefs.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 1 3
# 41 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef signed char __int8_t;

typedef unsigned char __uint8_t;
# 55 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef short int __int16_t;

typedef short unsigned int __uint16_t;
# 77 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef long int __int32_t;

typedef long unsigned int __uint32_t;
# 103 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef long long int __int64_t;

typedef long long unsigned int __uint64_t;
# 134 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef signed char __int_least8_t;

typedef unsigned char __uint_least8_t;
# 160 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef short int __int_least16_t;

typedef short unsigned int __uint_least16_t;
# 182 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef long int __int_least32_t;

typedef long unsigned int __uint_least32_t;
# 200 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef long long int __int_least64_t;

typedef long long unsigned int __uint_least64_t;
# 214 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_default_types.h" 3
typedef long long int __intmax_t;







typedef long long unsigned int __uintmax_t;







typedef int __intptr_t;

typedef unsigned int __uintptr_t;
# 46 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/cdefs.h" 2 3

# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 48 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/cdefs.h" 2 3
# 16 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 2 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 1 3
# 24 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 3
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 359 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 25 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 2 3


# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/_types.h" 1 3
# 28 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 2 3


typedef long __blkcnt_t;



typedef long __blksize_t;



typedef __uint64_t __fsblkcnt_t;



typedef __uint32_t __fsfilcnt_t;



typedef long _off_t;





typedef int __pid_t;



typedef short __dev_t;



typedef unsigned short __uid_t;


typedef unsigned short __gid_t;



typedef __uint32_t __id_t;







typedef unsigned short __ino_t;
# 90 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 3
typedef __uint32_t __mode_t;





__extension__ typedef long long _off64_t;





typedef _off_t __off_t;


typedef _off64_t __loff_t;


typedef long __key_t;







typedef long _fpos_t;
# 131 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 3
typedef unsigned int __size_t;
# 147 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 3
typedef signed int _ssize_t;
# 158 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_types.h" 3
typedef _ssize_t __ssize_t;



typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;




typedef void *_iconv_t;






typedef unsigned long __clock_t;






typedef __int_least64_t __time_t;





typedef unsigned long __clockid_t;


typedef long __daddr_t;



typedef unsigned long __timer_t;


typedef __uint8_t __sa_family_t;



typedef __uint32_t __socklen_t;


typedef int __nl_item;
typedef unsigned short __nlink_t;
typedef long __suseconds_t;
typedef unsigned long __useconds_t;







typedef __builtin_va_list __va_list;
# 17 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 2 3






typedef unsigned long __ULong;
# 35 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/lock.h" 1 3
# 33 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/lock.h" 3
struct __lock;
typedef struct __lock * _LOCK_T;






extern void __retarget_lock_init(_LOCK_T *lock);

extern void __retarget_lock_init_recursive(_LOCK_T *lock);

extern void __retarget_lock_close(_LOCK_T lock);

extern void __retarget_lock_close_recursive(_LOCK_T lock);

extern void __retarget_lock_acquire(_LOCK_T lock);

extern void __retarget_lock_acquire_recursive(_LOCK_T lock);

extern int __retarget_lock_try_acquire(_LOCK_T lock);

extern int __retarget_lock_try_acquire_recursive(_LOCK_T lock);


extern void __retarget_lock_release(_LOCK_T lock);

extern void __retarget_lock_release_recursive(_LOCK_T lock);
# 36 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 2 3
typedef _LOCK_T _flock_t;







struct _reent;

struct __locale_t;






struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};







struct _on_exit_args {
 void * _fnargs[32];
 void * _dso_handle[32];

 __ULong _fntypes;


 __ULong _is_cxa;
};
# 99 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
struct _atexit {
 struct _atexit *_next;
 int _ind;

 void (*_fns[32])(void);
        struct _on_exit_args _on_exit_args;
};
# 116 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 153 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;






  void * _cookie;

  int (*_read) (struct _reent *, void *,
        char *, int);
  int (*_write) (struct _reent *, void *,
         const char *,
         int);
  _fpos_t (*_seek) (struct _reent *, void *, _fpos_t, int);
  int (*_close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  _off_t _offset;


  struct _reent *_data;



  _flock_t _lock;

  _mbstate_t _mbstate;
  int _flags2;
};
# 270 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
typedef struct __sFILE __FILE;



extern __FILE __sf[3];

struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};

extern struct _glue __sglue;
# 306 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};
# 568 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
struct _reent
{
  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;
  char _emergency[25];




  struct __locale_t *_locale;





  void (*__cleanup) (struct _reent *);


  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;


  int _cvtlen;
  char *_cvtbuf;

  union
    {
      struct
        {



          char * _strtok_last;
          char _asctime_buf[26];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24];
          int _getdate_err;
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
   int _h_errno;
# 634 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
        } _reent;







    } _new;







  void (**_sig_func)(int);
};
# 782 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
extern struct _reent *_impure_ptr ;





extern struct _reent _impure_data ;
# 900 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/reent.h" 3
extern struct _atexit *__atexit;
extern struct _atexit __atexit0;

extern void (*__stdio_exit_handler) (void);

void _reclaim_reent (struct _reent *);

extern int _fwalk_sglue (struct _reent *, int (*)(struct _reent *, __FILE *),
    struct _glue *);
# 12 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3





# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 18 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3


# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_locale.h" 1 3
# 9 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_locale.h" 3
struct __locale_t;
typedef struct __locale_t *locale_t;
# 21 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3



# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/strings.h" 1 3
# 44 "/home/mcoder/cache/gcc/arm-none-eabi/include/strings.h" 3


int bcmp(const void *, const void *, size_t) __attribute__((__pure__));
void bcopy(const void *, void *, size_t);
void bzero(void *, size_t);


void explicit_bzero(void *, size_t);


int ffs(int) __attribute__((__const__));


int ffsl(long) __attribute__((__const__));
int ffsll(long long) __attribute__((__const__));
int fls(int) __attribute__((__const__));
int flsl(long) __attribute__((__const__));
int flsll(long long) __attribute__((__const__));


char *index(const char *, int) __attribute__((__pure__));
char *rindex(const char *, int) __attribute__((__pure__));

int strcasecmp(const char *, const char *) __attribute__((__pure__));
int strncasecmp(const char *, const char *, size_t) __attribute__((__pure__));


int strcasecmp_l (const char *, const char *, locale_t);
int strncasecmp_l (const char *, const char *, size_t, locale_t);


# 25 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3




void * memchr (const void *, int, size_t);
int memcmp (const void *, const void *, size_t);
void * memcpy (void *restrict, const void *restrict, size_t);
void * memmove (void *, const void *, size_t);
void * memset (void *, int, size_t);
char *strcat (char *restrict, const char *restrict);
char *strchr (const char *, int);
int strcmp (const char *, const char *);
int strcoll (const char *, const char *);
char *strcpy (char *restrict, const char *restrict);
size_t strcspn (const char *, const char *);
char *strerror (int);
size_t strlen (const char *);
char *strncat (char *restrict, const char *restrict, size_t);
int strncmp (const char *, const char *, size_t);
char *strncpy (char *restrict, const char *restrict, size_t);
char *strpbrk (const char *, const char *);
char *strrchr (const char *, int);
size_t strspn (const char *, const char *);
char *strstr (const char *, const char *);

char *strtok (char *restrict, const char *restrict);

size_t strxfrm (char *restrict, const char *restrict, size_t);


int strcoll_l (const char *, const char *, locale_t);
char *strerror_l (int, locale_t);
size_t strxfrm_l (char *restrict, const char *restrict, size_t, locale_t);


char *strtok_r (char *restrict, const char *restrict, char **restrict);


int timingsafe_bcmp (const void *, const void *, size_t);
int timingsafe_memcmp (const void *, const void *, size_t);


void * memccpy (void *restrict, const void *restrict, int, size_t);
# 76 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 3
char *stpcpy (char *restrict, const char *restrict);
char *stpncpy (char *restrict, const char *restrict, size_t);






char *strdup (const char *) __attribute__((__malloc__)) __attribute__((__warn_unused_result__));

char *_strdup_r (struct _reent *, const char *);

char *strndup (const char *, size_t) __attribute__((__malloc__)) __attribute__((__warn_unused_result__));

char *_strndup_r (struct _reent *, const char *, size_t);
# 100 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 3
int strerror_r (int, char *, size_t)

             __asm__ ("" "__xpg_strerror_r")

  ;







char * _strerror_r (struct _reent *, int, int, int *);


size_t strlcat (char *, const char *, size_t);
size_t strlcpy (char *, const char *, size_t);


size_t strnlen (const char *, size_t);


char *strsep (char **, const char *);


char *strnstr(const char *, const char *, size_t) __attribute__((__pure__));



char *strlwr (char *);
char *strupr (char *);



char *strsignal (int __signo);
# 175 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/string.h" 1 3
# 176 "/home/mcoder/cache/gcc/arm-none-eabi/include/string.h" 2 3


# 27 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 1 3
# 36 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 37 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 2 3



# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdarg.h" 1 3 4
# 40 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 41 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 2 3





typedef __gnuc_va_list va_list;
# 63 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3



typedef __FILE FILE;



typedef _fpos_t fpos_t;





typedef __off_t off_t;




typedef _ssize_t ssize_t;



# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/stdio.h" 1 3
# 86 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 2 3
# 187 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
char * ctermid (char *);




FILE * tmpfile (void);
char * tmpnam (char *);

char * tempnam (const char *, const char *) __attribute__((__malloc__)) __attribute__((__warn_unused_result__));

int fclose (FILE *);
int fflush (FILE *);
FILE * freopen (const char *restrict, const char *restrict, FILE *restrict);
void setbuf (FILE *restrict, char *restrict);
int setvbuf (FILE *restrict, char *restrict, int, size_t);
int fprintf (FILE *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int fscanf (FILE *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
int printf (const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 1, 2)));
int scanf (const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 1, 2)));
int sscanf (const char *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
int vfprintf (FILE *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int vprintf (const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 1, 0)));
int vsprintf (char *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int fgetc (FILE *);
char * fgets (char *restrict, int, FILE *restrict);
int fputc (int, FILE *);
int fputs (const char *restrict, FILE *restrict);
int getc (FILE *);
int getchar (void);
char * gets (char *);
int putc (int, FILE *);
int putchar (int);
int puts (const char *);
int ungetc (int, FILE *);
size_t fread (void *restrict, size_t _size, size_t _n, FILE *restrict);
size_t fwrite (const void *restrict , size_t _size, size_t _n, FILE *);



int fgetpos (FILE *restrict, fpos_t *restrict);

int fseek (FILE *, long, int);



int fsetpos (FILE *, const fpos_t *);

long ftell ( FILE *);
void rewind (FILE *);
void clearerr (FILE *);
int feof (FILE *);
int ferror (FILE *);
void perror (const char *);

FILE * fopen (const char *restrict _name, const char *restrict _type);
int sprintf (char *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int remove (const char *);
int rename (const char *, const char *);
# 263 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
int fseeko (FILE *, off_t, int);
off_t ftello (FILE *);







int snprintf (char *restrict, size_t, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int vsnprintf (char *restrict, size_t, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int vfscanf (FILE *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
int vscanf (const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 1, 0)));
int vsscanf (const char *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
# 290 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
int asiprintf (char **, const char *, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
char * asniprintf (char *, size_t *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
char * asnprintf (char *restrict, size_t *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));

int diprintf (int, const char *, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));

int fiprintf (FILE *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int fiscanf (FILE *, const char *, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
int iprintf (const char *, ...)
               __attribute__ ((__format__ (__printf__, 1, 2)));
int iscanf (const char *, ...)
               __attribute__ ((__format__ (__scanf__, 1, 2)));
int siprintf (char *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int siscanf (const char *, const char *, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
int sniprintf (char *, size_t, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int vasiprintf (char **, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
char * vasniprintf (char *, size_t *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
char * vasnprintf (char *, size_t *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int vdiprintf (int, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int vfiprintf (FILE *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int vfiscanf (FILE *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
int viprintf (const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 1, 0)));
int viscanf (const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 1, 0)));
int vsiprintf (char *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int vsiscanf (const char *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
int vsniprintf (char *, size_t, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
# 345 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
FILE * fdopen (int, const char *);

int fileno (FILE *);


int pclose (FILE *);
FILE * popen (const char *, const char *);



void setbuffer (FILE *, char *, int);
int setlinebuf (FILE *);



int getw (FILE *);
int putw (int, FILE *);


int getc_unlocked (FILE *);
int getchar_unlocked (void);
void flockfile (FILE *);
int ftrylockfile (FILE *);
void funlockfile (FILE *);
int putc_unlocked (int, FILE *);
int putchar_unlocked (int);
# 380 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
int dprintf (int, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));

FILE * fmemopen (void *restrict, size_t, const char *restrict);


FILE * open_memstream (char **, size_t *);
int vdprintf (int, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));



int renameat (int, const char *, int, const char *);
# 402 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
int _asiprintf_r (struct _reent *, char **, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
char * _asniprintf_r (struct _reent *, char *, size_t *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 4, 5)));
char * _asnprintf_r (struct _reent *, char *restrict, size_t *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 4, 5)));
int _asprintf_r (struct _reent *, char **restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _diprintf_r (struct _reent *, int, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _dprintf_r (struct _reent *, int, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _fclose_r (struct _reent *, FILE *);
int _fcloseall_r (struct _reent *);
FILE * _fdopen_r (struct _reent *, int, const char *);
int _fflush_r (struct _reent *, FILE *);
int _fgetc_r (struct _reent *, FILE *);
int _fgetc_unlocked_r (struct _reent *, FILE *);
char * _fgets_r (struct _reent *, char *restrict, int, FILE *restrict);
char * _fgets_unlocked_r (struct _reent *, char *restrict, int, FILE *restrict);




int _fgetpos_r (struct _reent *, FILE *, fpos_t *);
int _fsetpos_r (struct _reent *, FILE *, const fpos_t *);

int _fiprintf_r (struct _reent *, FILE *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _fiscanf_r (struct _reent *, FILE *, const char *, ...)
               __attribute__ ((__format__ (__scanf__, 3, 4)));
FILE * _fmemopen_r (struct _reent *, void *restrict, size_t, const char *restrict);
FILE * _fopen_r (struct _reent *, const char *restrict, const char *restrict);
FILE * _freopen_r (struct _reent *, const char *restrict, const char *restrict, FILE *restrict);
int _fprintf_r (struct _reent *, FILE *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _fpurge_r (struct _reent *, FILE *);
int _fputc_r (struct _reent *, int, FILE *);
int _fputc_unlocked_r (struct _reent *, int, FILE *);
int _fputs_r (struct _reent *, const char *restrict, FILE *restrict);
int _fputs_unlocked_r (struct _reent *, const char *restrict, FILE *restrict);
size_t _fread_r (struct _reent *, void *restrict, size_t _size, size_t _n, FILE *restrict);
size_t _fread_unlocked_r (struct _reent *, void *restrict, size_t _size, size_t _n, FILE *restrict);
int _fscanf_r (struct _reent *, FILE *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 3, 4)));
int _fseek_r (struct _reent *, FILE *, long, int);
int _fseeko_r (struct _reent *, FILE *, _off_t, int);
long _ftell_r (struct _reent *, FILE *);
_off_t _ftello_r (struct _reent *, FILE *);
void _rewind_r (struct _reent *, FILE *);
size_t _fwrite_r (struct _reent *, const void *restrict, size_t _size, size_t _n, FILE *restrict);
size_t _fwrite_unlocked_r (struct _reent *, const void *restrict, size_t _size, size_t _n, FILE *restrict);
int _getc_r (struct _reent *, FILE *);
int _getc_unlocked_r (struct _reent *, FILE *);
int _getchar_r (struct _reent *);
int _getchar_unlocked_r (struct _reent *);
char * _gets_r (struct _reent *, char *);
int _iprintf_r (struct _reent *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int _iscanf_r (struct _reent *, const char *, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
FILE * _open_memstream_r (struct _reent *, char **, size_t *);
void _perror_r (struct _reent *, const char *);
int _printf_r (struct _reent *, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 2, 3)));
int _putc_r (struct _reent *, int, FILE *);
int _putc_unlocked_r (struct _reent *, int, FILE *);
int _putchar_unlocked_r (struct _reent *, int);
int _putchar_r (struct _reent *, int);
int _puts_r (struct _reent *, const char *);
int _remove_r (struct _reent *, const char *);
int _rename_r (struct _reent *,
      const char *_old, const char *_new);
int _scanf_r (struct _reent *, const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 2, 3)));
int _siprintf_r (struct _reent *, char *, const char *, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _siscanf_r (struct _reent *, const char *, const char *, ...)
               __attribute__ ((__format__ (__scanf__, 3, 4)));
int _sniprintf_r (struct _reent *, char *, size_t, const char *, ...)
               __attribute__ ((__format__ (__printf__, 4, 5)));
int _snprintf_r (struct _reent *, char *restrict, size_t, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 4, 5)));
int _sprintf_r (struct _reent *, char *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__printf__, 3, 4)));
int _sscanf_r (struct _reent *, const char *restrict, const char *restrict, ...)
               __attribute__ ((__format__ (__scanf__, 3, 4)));
char * _tempnam_r (struct _reent *, const char *, const char *);
FILE * _tmpfile_r (struct _reent *);
char * _tmpnam_r (struct _reent *, char *);
int _ungetc_r (struct _reent *, int, FILE *);
int _vasiprintf_r (struct _reent *, char **, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
char * _vasniprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 4, 0)));
char * _vasnprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 4, 0)));
int _vasprintf_r (struct _reent *, char **, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vdiprintf_r (struct _reent *, int, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vdprintf_r (struct _reent *, int, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vfiprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vfiscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 3, 0)));
int _vfprintf_r (struct _reent *, FILE *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vfscanf_r (struct _reent *, FILE *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 3, 0)));
int _viprintf_r (struct _reent *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int _viscanf_r (struct _reent *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
int _vprintf_r (struct _reent *, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 2, 0)));
int _vscanf_r (struct _reent *, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 2, 0)));
int _vsiprintf_r (struct _reent *, char *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vsiscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 3, 0)));
int _vsniprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 4, 0)));
int _vsnprintf_r (struct _reent *, char *restrict, size_t, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 4, 0)));
int _vsprintf_r (struct _reent *, char *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__printf__, 3, 0)));
int _vsscanf_r (struct _reent *, const char *restrict, const char *restrict, __gnuc_va_list)
               __attribute__ ((__format__ (__scanf__, 3, 0)));



int fpurge (FILE *);
ssize_t __getdelim (char **, size_t *, int, FILE *);
ssize_t __getline (char **, size_t *, FILE *);


void clearerr_unlocked (FILE *);
int feof_unlocked (FILE *);
int ferror_unlocked (FILE *);
int fileno_unlocked (FILE *);
int fflush_unlocked (FILE *);
int fgetc_unlocked (FILE *);
int fputc_unlocked (int, FILE *);
size_t fread_unlocked (void *restrict, size_t _size, size_t _n, FILE *restrict);
size_t fwrite_unlocked (const void *restrict , size_t _size, size_t _n, FILE *);
# 583 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
int __srget_r (struct _reent *, FILE *);
int __swbuf_r (struct _reent *, int, FILE *);
# 607 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
FILE *funopen (const void *__cookie,
  int (*__readfn)(void *__cookie, char *__buf,
    int __n),
  int (*__writefn)(void *__cookie, const char *__buf,
     int __n),
  fpos_t (*__seekfn)(void *__cookie, fpos_t __off, int __whence),
  int (*__closefn)(void *__cookie));
FILE *_funopen_r (struct _reent *, const void *__cookie,
  int (*__readfn)(void *__cookie, char *__buf,
    int __n),
  int (*__writefn)(void *__cookie, const char *__buf,
     int __n),
  fpos_t (*__seekfn)(void *__cookie, fpos_t __off, int __whence),
  int (*__closefn)(void *__cookie));
# 691 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
static __inline__ int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {




 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf_r(_ptr, _c, _p));
}
# 745 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3
static __inline int
_getchar_unlocked(void)
{
 struct _reent *_ptr;

 _ptr = _impure_ptr;
 return ((--(((_ptr)->_stdin))->_r < 0 ? __srget_r(_ptr, ((_ptr)->_stdin)) : (int)(*(((_ptr)->_stdin))->_p++)));
}

static __inline int
_putchar_unlocked(int _c)
{
 struct _reent *_ptr;

 _ptr = _impure_ptr;
 return (__sputc_r(_ptr, _c, ((_ptr)->_stdout)));
}
# 801 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdio.h" 3

# 28 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdbool.h" 1 3 4
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 1
# 188 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 1
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
 
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wsign-conversion"
#pragma GCC diagnostic ignored "-Wconversion"
#pragma GCC diagnostic ignored "-Wunused-parameter"
# 82 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_compiler.h" 1
# 28 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_compiler.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h" 1 3 4
# 9 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h" 3 4
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 1 3 4
# 13 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 3 4
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_intsup.h" 1 3 4
# 35 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_intsup.h" 3 4
       
       
       
       
       
       
       
       
# 190 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_intsup.h" 3 4
       
       
       
       
       
       
       
       
# 14 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 2 3 4
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_stdint.h" 1 3 4
# 20 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_stdint.h" 3 4

# 20 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/_stdint.h" 3 4
typedef __int8_t int8_t ;



typedef __uint8_t uint8_t ;







typedef __int16_t int16_t ;



typedef __uint16_t uint16_t ;







typedef __int32_t int32_t ;



typedef __uint32_t uint32_t ;







typedef __int64_t int64_t ;



typedef __uint64_t uint64_t ;






typedef __intmax_t intmax_t;




typedef __uintmax_t uintmax_t;




typedef __intptr_t intptr_t;




typedef __uintptr_t uintptr_t;
# 15 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 2 3 4






typedef __int_least8_t int_least8_t;
typedef __uint_least8_t uint_least8_t;




typedef __int_least16_t int_least16_t;
typedef __uint_least16_t uint_least16_t;




typedef __int_least32_t int_least32_t;
typedef __uint_least32_t uint_least32_t;




typedef __int_least64_t int_least64_t;
typedef __uint_least64_t uint_least64_t;
# 51 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 3 4
  typedef int int_fast8_t;
  typedef unsigned int uint_fast8_t;
# 61 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 3 4
  typedef int int_fast16_t;
  typedef unsigned int uint_fast16_t;
# 71 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 3 4
  typedef int int_fast32_t;
  typedef unsigned int uint_fast32_t;
# 81 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdint.h" 3 4
  typedef long long int int_fast64_t;
  typedef long long unsigned int uint_fast64_t;
# 10 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h" 2 3 4
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_compiler.h" 2
# 54 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_compiler.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wsign-conversion"
#pragma GCC diagnostic ignored "-Wconversion"
#pragma GCC diagnostic ignored "-Wunused-parameter"
# 71 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpacked"
#pragma GCC diagnostic ignored "-Wattributes"
  struct __attribute__((packed)) T_UINT32 { uint32_t v; };
#pragma GCC diagnostic pop



#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpacked"
#pragma GCC diagnostic ignored "-Wattributes"
  struct __attribute__((packed, aligned(1))) T_UINT16_WRITE { uint16_t v; };
#pragma GCC diagnostic pop



#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpacked"
#pragma GCC diagnostic ignored "-Wattributes"
  struct __attribute__((packed, aligned(1))) T_UINT16_READ { uint16_t v; };
#pragma GCC diagnostic pop



#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpacked"
#pragma GCC diagnostic ignored "-Wattributes"
  struct __attribute__((packed, aligned(1))) T_UINT32_WRITE { uint32_t v; };
#pragma GCC diagnostic pop



#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpacked"
#pragma GCC diagnostic ignored "-Wattributes"
  struct __attribute__((packed, aligned(1))) T_UINT32_READ { uint32_t v; };
#pragma GCC diagnostic pop
# 131 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline __attribute__((__noreturn__)) void __cmsis_start(void)
{
  extern void _start(void) __attribute__((__noreturn__));

  typedef struct {
    uint32_t const* src;
    uint32_t* dest;
    uint32_t wlen;
  } __copy_table_t;

  typedef struct {
    uint32_t* dest;
    uint32_t wlen;
  } __zero_table_t;

  extern const __copy_table_t __copy_table_start__;
  extern const __copy_table_t __copy_table_end__;
  extern const __zero_table_t __zero_table_start__;
  extern const __zero_table_t __zero_table_end__;

  for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable) {
    for(uint32_t i=0u; i<pTable->wlen; ++i) {
      pTable->dest[i] = pTable->src[i];
    }
  }

  for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable) {
    for(uint32_t i=0u; i<pTable->wlen; ++i) {
      pTable->dest[i] = 0u;
    }
  }

  _start();
}
# 258 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __ISB(void)
{
  __asm volatile ("isb 0xF":::"memory");
}







__attribute__((always_inline)) static inline void __DSB(void)
{
  __asm volatile ("dsb 0xF":::"memory");
}







__attribute__((always_inline)) static inline void __DMB(void)
{
  __asm volatile ("dmb 0xF":::"memory");
}
# 292 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __REV(uint32_t value)
{

  return __builtin_bswap32(value);






}
# 311 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __REV16(uint32_t value)
{
  uint32_t result;

  __asm ("rev16 %0, %1" : "=r" (result) : "r" (value) );
  return result;
}
# 326 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline int16_t __REVSH(int16_t value)
{

  return (int16_t)__builtin_bswap16(value);






}
# 346 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __ROR(uint32_t op1, uint32_t op2)
{
  op2 %= 32U;
  if (op2 == 0U)
  {
    return op1;
  }
  return (op1 >> op2) | (op1 << (32U - op2));
}
# 373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __RBIT(uint32_t value)
{
  uint32_t result;




   __asm ("rbit %0, %1" : "=r" (result) : "r" (value) );
# 393 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
  return result;
}
# 403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint8_t __CLZ(uint32_t value)
{
# 414 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
}
# 432 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint8_t __LDREXB(volatile uint8_t *addr)
{
    uint32_t result;


   __asm volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );






   return ((uint8_t) result);
}
# 454 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint16_t __LDREXH(volatile uint16_t *addr)
{
    uint32_t result;


   __asm volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );






   return ((uint16_t) result);
}
# 476 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __asm volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
   return(result);
}
# 493 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
{
   uint32_t result;

   __asm volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
   return(result);
}
# 510 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
{
   uint32_t result;

   __asm volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
   return(result);
}
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __asm volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
   return(result);
}






__attribute__((always_inline)) static inline void __CLREX(void)
{
  __asm volatile ("clrex" ::: "memory");
}
# 593 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __RRX(uint32_t value)
{
  uint32_t result;

  __asm volatile ("rrx %0, %1" : "=r" (result) : "r" (value) );
  return(result);
}
# 608 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint8_t __LDRBT(volatile uint8_t *ptr)
{
    uint32_t result;


   __asm volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );






   return ((uint8_t) result);
}
# 630 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint16_t __LDRHT(volatile uint16_t *ptr)
{
    uint32_t result;


   __asm volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );






   return ((uint16_t) result);
}
# 652 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __LDRT(volatile uint32_t *ptr)
{
    uint32_t result;

   __asm volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
   return(result);
}
# 667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __STRBT(uint8_t value, volatile uint8_t *ptr)
{
   __asm volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
}
# 679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __STRHT(uint16_t value, volatile uint16_t *ptr)
{
   __asm volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
}
# 691 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __STRT(uint32_t value, volatile uint32_t *ptr)
{
   __asm volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
}
# 949 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __enable_irq(void)
{
  __asm volatile ("cpsie i" : : : "memory");
}







__attribute__((always_inline)) static inline void __disable_irq(void)
{
  __asm volatile ("cpsid i" : : : "memory");
}







__attribute__((always_inline)) static inline uint32_t __get_CONTROL(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, control" : "=r" (result) );
  return(result);
}
# 1001 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_CONTROL(uint32_t control)
{
  __asm volatile ("MSR control, %0" : : "r" (control) : "memory");
  __ISB();
}
# 1027 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __get_IPSR(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, ipsr" : "=r" (result) );
  return(result);
}







__attribute__((always_inline)) static inline uint32_t __get_APSR(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, apsr" : "=r" (result) );
  return(result);
}







__attribute__((always_inline)) static inline uint32_t __get_xPSR(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, xpsr" : "=r" (result) );
  return(result);
}







__attribute__((always_inline)) static inline uint32_t __get_PSP(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, psp" : "=r" (result) );
  return(result);
}
# 1099 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_PSP(uint32_t topOfProcStack)
{
  __asm volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
}
# 1123 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __get_MSP(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, msp" : "=r" (result) );
  return(result);
}
# 1153 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_MSP(uint32_t topOfMainStack)
{
  __asm volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
}
# 1204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, primask" : "=r" (result) );
  return(result);
}
# 1234 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_PRIMASK(uint32_t priMask)
{
  __asm volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
}
# 1261 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __enable_fault_irq(void)
{
  __asm volatile ("cpsie f" : : : "memory");
}







__attribute__((always_inline)) static inline void __disable_fault_irq(void)
{
  __asm volatile ("cpsid f" : : : "memory");
}







__attribute__((always_inline)) static inline uint32_t __get_BASEPRI(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, basepri" : "=r" (result) );
  return(result);
}
# 1313 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_BASEPRI(uint32_t basePri)
{
  __asm volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
}
# 1338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_BASEPRI_MAX(uint32_t basePri)
{
  __asm volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
}







__attribute__((always_inline)) static inline uint32_t __get_FAULTMASK(void)
{
  uint32_t result;

  __asm volatile ("MRS %0, faultmask" : "=r" (result) );
  return(result);
}
# 1379 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline void __set_FAULTMASK(uint32_t faultMask)
{
  __asm volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
}
# 1588 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __get_FPSCR(void)
{
# 1604 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
  return(0U);

}







__attribute__((always_inline)) static inline void __set_FPSCR(uint32_t fpscr)
{
# 1627 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
  (void)fpscr;

}
# 1643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __SADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("sadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("uadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHADD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhadd8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}


__attribute__((always_inline)) static inline uint32_t __SSUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("ssub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QSUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHSUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __USUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("usub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQSUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHSUB8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhsub8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}


__attribute__((always_inline)) static inline uint32_t __SADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("sadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("uadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHADD16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhadd16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SSUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("ssub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QSUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHSUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __USUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("usub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQSUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHSUB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhsub16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("sasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("uasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHASX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhasx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SSAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("ssax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __QSAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("qsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SHSAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("shsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __USAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("usax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UQSAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uqsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UHSAX(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uhsax %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __USAD8(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("usad8 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __USADA8(uint32_t op1, uint32_t op2, uint32_t op3)
{
  uint32_t result;

  __asm ("usada8 %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
  return(result);
}
# 1965 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline uint32_t __UXTB16(uint32_t op1)
{
  uint32_t result;

  __asm ("uxtb16 %0, %1" : "=r" (result) : "r" (op1));
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UXTAB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("uxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SXTB16(uint32_t op1)
{
  uint32_t result;

  __asm ("sxtb16 %0, %1" : "=r" (result) : "r" (op1));
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SXTB16_RORn(uint32_t op1, uint32_t rotate)
{
  uint32_t result;
  if (__builtin_constant_p(rotate) && ((rotate == 8U) || (rotate == 16U) || (rotate == 24U))) {
    __asm volatile ("sxtb16 %0, %1, ROR %2" : "=r" (result) : "r" (op1), "i" (rotate) );
  } else {
    result = __SXTB16(__ROR(op1, rotate)) ;
  }
  return result;
}

__attribute__((always_inline)) static inline uint32_t __SXTAB16(uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm ("sxtab16 %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SXTAB16_RORn(uint32_t op1, uint32_t op2, uint32_t rotate)
{
  uint32_t result;
  if (__builtin_constant_p(rotate) && ((rotate == 8U) || (rotate == 16U) || (rotate == 24U))) {
    __asm volatile ("sxtab16 %0, %1, %2, ROR %3" : "=r" (result) : "r" (op1) , "r" (op2) , "i" (rotate));
  } else {
    result = __SXTAB16(op1, __ROR(op2, rotate));
  }
  return result;
}


__attribute__((always_inline)) static inline uint32_t __SMUAD (uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("smuad %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMUADX (uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("smuadx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMLAD (uint32_t op1, uint32_t op2, uint32_t op3)
{
  uint32_t result;

  __asm volatile ("smlad %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMLADX (uint32_t op1, uint32_t op2, uint32_t op3)
{
  uint32_t result;

  __asm volatile ("smladx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
  return(result);
}

__attribute__((always_inline)) static inline uint64_t __SMLALD (uint32_t op1, uint32_t op2, uint64_t acc)
{
  union llreg_u{
    uint32_t w32[2];
    uint64_t w64;
  } llr;
  llr.w64 = acc;


  __asm volatile ("smlald %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (op2) , "0" (llr.w32[0]), "1" (llr.w32[1]) );




  return(llr.w64);
}

__attribute__((always_inline)) static inline uint64_t __SMLALDX (uint32_t op1, uint32_t op2, uint64_t acc)
{
  union llreg_u{
    uint32_t w32[2];
    uint64_t w64;
  } llr;
  llr.w64 = acc;


  __asm volatile ("smlaldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (op2) , "0" (llr.w32[0]), "1" (llr.w32[1]) );




  return(llr.w64);
}

__attribute__((always_inline)) static inline uint32_t __SMUSD (uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("smusd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMUSDX (uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("smusdx %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMLSD (uint32_t op1, uint32_t op2, uint32_t op3)
{
  uint32_t result;

  __asm volatile ("smlsd %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SMLSDX (uint32_t op1, uint32_t op2, uint32_t op3)
{
  uint32_t result;

  __asm volatile ("smlsdx %0, %1, %2, %3" : "=r" (result) : "r" (op1), "r" (op2), "r" (op3) );
  return(result);
}

__attribute__((always_inline)) static inline uint64_t __SMLSLD (uint32_t op1, uint32_t op2, uint64_t acc)
{
  union llreg_u{
    uint32_t w32[2];
    uint64_t w64;
  } llr;
  llr.w64 = acc;


  __asm volatile ("smlsld %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (op2) , "0" (llr.w32[0]), "1" (llr.w32[1]) );




  return(llr.w64);
}

__attribute__((always_inline)) static inline uint64_t __SMLSLDX (uint32_t op1, uint32_t op2, uint64_t acc)
{
  union llreg_u{
    uint32_t w32[2];
    uint64_t w64;
  } llr;
  llr.w64 = acc;


  __asm volatile ("smlsldx %0, %1, %2, %3" : "=r" (llr.w32[0]), "=r" (llr.w32[1]): "r" (op1), "r" (op2) , "0" (llr.w32[0]), "1" (llr.w32[1]) );




  return(llr.w64);
}

__attribute__((always_inline)) static inline uint32_t __SEL (uint32_t op1, uint32_t op2)
{
  uint32_t result;

  __asm volatile ("sel %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline int32_t __QADD( int32_t op1, int32_t op2)
{
  int32_t result;

  __asm volatile ("qadd %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}

__attribute__((always_inline)) static inline int32_t __QSUB( int32_t op1, int32_t op2)
{
  int32_t result;

  __asm volatile ("qsub %0, %1, %2" : "=r" (result) : "r" (op1), "r" (op2) );
  return(result);
}
# 2197 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_gcc.h"
__attribute__((always_inline)) static inline int32_t __SMMLA (int32_t op1, int32_t op2, int32_t op3)
{
 int32_t result;

 __asm ("smmla %0, %1, %2, %3" : "=r" (result): "r" (op1), "r" (op2), "r" (op3) );
 return(result);
}





#pragma GCC diagnostic pop
# 55 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_compiler.h" 2
# 83 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 2





# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 1 3






# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/ieeefp.h" 1 3
# 8 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 2 3



# 86 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3

# 86 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern double atan (double);
extern double cos (double);
extern double sin (double);
extern double tan (double);
extern double tanh (double);
extern double frexp (double, int *);
extern double modf (double, double *);
extern double ceil (double);
extern double fabs (double);
extern double floor (double);






extern double acos (double);
extern double asin (double);
extern double atan2 (double, double);
extern double cosh (double);
extern double sinh (double);
extern double exp (double);
extern double ldexp (double, int);
extern double log (double);
extern double log10 (double);
extern double pow (double, double);
extern double sqrt (double);
extern double fmod (double, double);




extern int finite (double);
extern int finitef (float);
extern int finitel (long double);
extern int isinff (float);
extern int isnanf (float);





extern int isinf (double);




extern int isnan (double);
# 160 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
    typedef float float_t;
    typedef double double_t;
# 223 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern int __isinff (float);
extern int __isinfd (double);
extern int __isnanf (float);
extern int __isnand (double);
extern int __fpclassifyf (float);
extern int __fpclassifyd (double);
extern int __signbitf (float);
extern int __signbitd (double);
# 319 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern double infinity (void);
extern double nan (const char *);
extern double copysign (double, double);
extern double logb (double);
extern int ilogb (double);

extern double asinh (double);
extern double cbrt (double);
extern double nextafter (double, double);
extern double rint (double);
extern double scalbn (double, int);

extern double exp2 (double);
extern double scalbln (double, long int);
extern double tgamma (double);
extern double nearbyint (double);
extern long int lrint (double);
extern long long int llrint (double);
extern double round (double);
extern long int lround (double);
extern long long int llround (double);
extern double trunc (double);
extern double remquo (double, double, int *);
extern double fdim (double, double);
extern double fmax (double, double);
extern double fmin (double, double);
extern double fma (double, double, double);


extern double log1p (double);
extern double expm1 (double);



extern double acosh (double);
extern double atanh (double);
extern double remainder (double, double);
extern double gamma (double);
extern double lgamma (double);
extern double erf (double);
extern double erfc (double);
extern double log2 (double);





extern double hypot (double, double);






extern float atanf (float);
extern float cosf (float);
extern float sinf (float);
extern float tanf (float);
extern float tanhf (float);
extern float frexpf (float, int *);
extern float modff (float, float *);
extern float ceilf (float);
extern float fabsf (float);
extern float floorf (float);


extern float acosf (float);
extern float asinf (float);
extern float atan2f (float, float);
extern float coshf (float);
extern float sinhf (float);
extern float expf (float);
extern float ldexpf (float, int);
extern float logf (float);
extern float log10f (float);
extern float powf (float, float);
extern float sqrtf (float);
extern float fmodf (float, float);




extern float exp2f (float);
extern float scalblnf (float, long int);
extern float tgammaf (float);
extern float nearbyintf (float);
extern long int lrintf (float);
extern long long int llrintf (float);
extern float roundf (float);
extern long int lroundf (float);
extern long long int llroundf (float);
extern float truncf (float);
extern float remquof (float, float, int *);
extern float fdimf (float, float);
extern float fmaxf (float, float);
extern float fminf (float, float);
extern float fmaf (float, float, float);

extern float infinityf (void);
extern float nanf (const char *);
extern float copysignf (float, float);
extern float logbf (float);
extern int ilogbf (float);

extern float asinhf (float);
extern float cbrtf (float);
extern float nextafterf (float, float);
extern float rintf (float);
extern float scalbnf (float, int);
extern float log1pf (float);
extern float expm1f (float);


extern float acoshf (float);
extern float atanhf (float);
extern float remainderf (float, float);
extern float gammaf (float);
extern float lgammaf (float);
extern float erff (float);
extern float erfcf (float);
extern float log2f (float);
extern float hypotf (float, float);
# 452 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern long double atanl (long double);
extern long double cosl (long double);
extern long double sinl (long double);
extern long double tanl (long double);
extern long double tanhl (long double);
extern long double frexpl (long double, int *);
extern long double modfl (long double, long double *);
extern long double ceill (long double);
extern long double fabsl (long double);
extern long double floorl (long double);
extern long double log1pl (long double);
extern long double expm1l (long double);




extern long double acosl (long double);
extern long double asinl (long double);
extern long double atan2l (long double, long double);
extern long double coshl (long double);
extern long double sinhl (long double);
extern long double expl (long double);
extern long double ldexpl (long double, int);
extern long double logl (long double);
extern long double log10l (long double);
extern long double powl (long double, long double);
extern long double sqrtl (long double);
extern long double fmodl (long double, long double);
extern long double hypotl (long double, long double);


extern long double copysignl (long double, long double);
extern long double nanl (const char *);
extern int ilogbl (long double);
extern long double asinhl (long double);
extern long double cbrtl (long double);
extern long double nextafterl (long double, long double);
extern float nexttowardf (float, long double);
extern double nexttoward (double, long double);
extern long double nexttowardl (long double, long double);
extern long double logbl (long double);
extern long double log2l (long double);
extern long double rintl (long double);
extern long double scalbnl (long double, int);
extern long double exp2l (long double);
extern long double scalblnl (long double, long);
extern long double tgammal (long double);
extern long double nearbyintl (long double);
extern long int lrintl (long double);
extern long long int llrintl (long double);
extern long double roundl (long double);
extern long lroundl (long double);
extern long long int llroundl (long double);
extern long double truncl (long double);
extern long double remquol (long double, long double, int *);
extern long double fdiml (long double, long double);
extern long double fmaxl (long double, long double);
extern long double fminl (long double, long double);
extern long double fmal (long double, long double, long double);

extern long double acoshl (long double);
extern long double atanhl (long double);
extern long double remainderl (long double, long double);
extern long double lgammal (long double);
extern long double erfl (long double);
extern long double erfcl (long double);
# 534 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern double drem (double, double);
extern float dremf (float, float);



extern double gamma_r (double, int *);
extern double lgamma_r (double, int *);
extern float gammaf_r (float, int *);
extern float lgammaf_r (float, int *);



extern double y0 (double);
extern double y1 (double);
extern double yn (int, double);
extern double j0 (double);
extern double j1 (double);
extern double jn (int, double);



extern float y0f (float);
extern float y1f (float);
extern float ynf (int, float);
extern float j0f (float);
extern float j1f (float);
extern float jnf (int, float);
# 596 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3
extern int *__signgam (void);
# 638 "/home/mcoder/cache/gcc/arm-none-eabi/include/math.h" 3

# 89 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 2
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/float.h" 1 3 4
# 90 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 2
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 1 3 4
# 34 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 3 4
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/syslimits.h" 1 3 4






# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 1 3 4
# 205 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 3 4
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/limits.h" 1 3 4





# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/sys/syslimits.h" 1 3 4
# 7 "/home/mcoder/cache/gcc/arm-none-eabi/include/limits.h" 2 3 4
# 206 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 2 3 4
# 8 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/syslimits.h" 2 3 4
# 35 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 2 3 4
# 91 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 2
# 250 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
 
# 250 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
#pragma GCC diagnostic pop
# 282 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
  typedef int8_t q7_t;




  typedef int16_t q15_t;




  typedef int32_t q31_t;




  typedef int64_t q63_t;





  typedef float float32_t;





  typedef double float64_t;
# 599 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h"
  typedef enum
  {
    ARM_MATH_SUCCESS = 0,
    ARM_MATH_ARGUMENT_ERROR = -1,
    ARM_MATH_LENGTH_ERROR = -2,
    ARM_MATH_SIZE_MISMATCH = -3,
    ARM_MATH_NANINF = -4,
    ARM_MATH_SINGULAR = -5,
    ARM_MATH_TEST_FAILURE = -6,
    ARM_MATH_DECOMPOSITION_FAILURE = -7
  } arm_status;
# 189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_memory.h" 1
# 76 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_memory.h"
__attribute__((always_inline)) static inline q31_t read_q15x2 (
  q15_t const * pQ15)
{
  q31_t val;


  memcpy (&val, pQ15, 4);




  return (val);
}
# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_memory.h"
__attribute__((always_inline)) static inline void write_q15x2_ia (
  q15_t ** pQ15,
  q31_t value)
{
  q31_t val = value;

  memcpy (*pQ15, &val, 4);





 *pQ15 += 2;
}







__attribute__((always_inline)) static inline void write_q15x2 (
  q15_t * pQ15,
  q31_t value)
{
  q31_t val = value;


  memcpy (pQ15, &val, 4);




}







__attribute__((always_inline)) static inline q31_t read_q7x4 (
  q7_t const * pQ7)
{
  q31_t val;


  memcpy (&val, pQ7, 4);



  return (val);
}
# 184 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_memory.h"
__attribute__((always_inline)) static inline void write_q7x4_ia (
  q7_t ** pQ7,
  q31_t value)
{
  q31_t val = value;

  memcpy (*pQ7, &val, 4);







  *pQ7 += 4;
}
# 190 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/none.h" 1
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/none.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_types.h" 1
# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/none.h" 2
# 136 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/none.h"
  __attribute__((always_inline)) static inline q31_t clip_q63_to_q31(
  q63_t x)
  {
    return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
      ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  }




  __attribute__((always_inline)) static inline q15_t clip_q63_to_q15(
  q63_t x)
  {
    return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
      ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
  }




  __attribute__((always_inline)) static inline q7_t clip_q31_to_q7(
  q31_t x)
  {
    return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
      ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
  }




  __attribute__((always_inline)) static inline q15_t clip_q31_to_q15(
  q31_t x)
  {
    return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
      ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
  }




  __attribute__((always_inline)) static inline q63_t mult32x64(
  q63_t x,
  q31_t y)
  {
    return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
            (((q63_t) (x >> 32) * y) ) );
  }
# 192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/utils.h" 1
# 51 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/utils.h"
  __attribute__((always_inline)) static inline uint32_t arm_recip_q31(
        q31_t in,
        q31_t * dst,
  const q31_t * pRecipTable)
  {
    q31_t out;
    uint32_t tempVal;
    uint32_t index, i;
    uint32_t signBits;

    if (in > 0)
    {
      signBits = ((uint32_t) (__CLZ( in) - 1));
    }
    else
    {
      signBits = ((uint32_t) (__CLZ(-in) - 1));
    }


    in = (in << signBits);


    index = (uint32_t)(in >> 24);
    index = (index & 0x0000003F);


    out = pRecipTable[index];



    for (i = 0U; i < 2U; i++)
    {
      tempVal = (uint32_t) (((q63_t) in * out) >> 31);
      tempVal = 0x7FFFFFFFu - tempVal;


      out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
    }


    *dst = out;


    return (signBits + 1U);
  }





  __attribute__((always_inline)) static inline uint32_t arm_recip_q15(
        q15_t in,
        q15_t * dst,
  const q15_t * pRecipTable)
  {
    q15_t out = 0;
    uint32_t tempVal = 0;
    uint32_t index = 0, i = 0;
    uint32_t signBits = 0;

    if (in > 0)
    {
      signBits = ((uint32_t)(__CLZ( in) - 17));
    }
    else
    {
      signBits = ((uint32_t)(__CLZ(-in) - 17));
    }


    in = (in << signBits);


    index = (uint32_t)(in >> 8);
    index = (index & 0x0000003F);


    out = pRecipTable[index];



    for (i = 0U; i < 2U; i++)
    {
      tempVal = (uint32_t) (((q31_t) in * out) >> 15);
      tempVal = 0x7FFFu - tempVal;

      out = (q15_t) (((q31_t) out * tempVal) >> 14);

    }


    *dst = out;


    return (signBits + 1);
  }
# 156 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/utils.h"
static inline void arm_norm_64_to_32u(uint64_t in, int32_t * normalized, int32_t *norm)
{
    int32_t n1;
    int32_t hi = (int32_t) (in >> 32);
    int32_t lo = (int32_t) ((in << 32) >> 32);

    n1 = __CLZ(hi) - 32;
    if (!n1)
    {



        n1 = __CLZ(lo);
        if (!n1)
        {



            *norm = -1;
            *normalized = (((uint32_t) lo) >> 1);
        } else
        {
            if (n1 == 32)
            {



                *norm = 0;
                *normalized = 0;
            } else
            {



                *norm = n1 - 1;
                *normalized = lo << *norm;
            }
        }
    } else
    {



        n1 = 1 - n1;
        *norm = -n1;



        *normalized = (((uint32_t) lo) >> n1) | (hi << (32 - n1));
    }
}

static inline q31_t arm_div_q63_to_q31(q63_t num, q31_t den)
{
    q31_t result;
    uint64_t absNum;
    int32_t normalized;
    int32_t norm;





    absNum = num > 0 ? num : -num;
    arm_norm_64_to_32u(absNum, &normalized, &norm);
    if (norm > 0)



        result = (q31_t) num / den;
    else



        result = (q31_t) (num / den);

    return result;
}
# 193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math_memory.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/none.h" 1
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/utils.h" 1
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h" 2
# 53 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_mult_q7(
  const q7_t * pSrcA,
  const q7_t * pSrcB,
        q7_t * pDst,
        uint32_t blockSize);
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_mult_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        q15_t * pDst,
        uint32_t blockSize);
# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_mult_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        q31_t * pDst,
        uint32_t blockSize);
# 95 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_mult_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        float32_t * pDst,
        uint32_t blockSize);
# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_mult_f64(
const float64_t * pSrcA,
const float64_t * pSrcB,
   float64_t * pDst,
   uint32_t blockSize);
# 125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_add_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        float32_t * pDst,
        uint32_t blockSize);
# 140 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
 void arm_add_f64(
 const float64_t * pSrcA,
 const float64_t * pSrcB,
    float64_t * pDst,
    uint32_t blockSize);
# 155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_add_q7(
  const q7_t * pSrcA,
  const q7_t * pSrcB,
        q7_t * pDst,
        uint32_t blockSize);
# 169 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_add_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        q15_t * pDst,
        uint32_t blockSize);
# 183 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_add_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        q31_t * pDst,
        uint32_t blockSize);
# 197 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_sub_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        float32_t * pDst,
        uint32_t blockSize);
# 212 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_sub_f64(
  const float64_t * pSrcA,
  const float64_t * pSrcB,
        float64_t * pDst,
        uint32_t blockSize);
# 227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_sub_q7(
  const q7_t * pSrcA,
  const q7_t * pSrcB,
        q7_t * pDst,
        uint32_t blockSize);
# 241 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_sub_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        q15_t * pDst,
        uint32_t blockSize);
# 255 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_sub_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        q31_t * pDst,
        uint32_t blockSize);
# 269 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_scale_f32(
  const float32_t * pSrc,
        float32_t scale,
        float32_t * pDst,
        uint32_t blockSize);
# 284 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_scale_f64(
  const float64_t * pSrc,
        float64_t scale,
        float64_t * pDst,
        uint32_t blockSize);
# 300 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_scale_q7(
  const q7_t * pSrc,
        q7_t scaleFract,
        int8_t shift,
        q7_t * pDst,
        uint32_t blockSize);
# 316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_scale_q15(
  const q15_t * pSrc,
        q15_t scaleFract,
        int8_t shift,
        q15_t * pDst,
        uint32_t blockSize);
# 332 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_scale_q31(
  const q31_t * pSrc,
        q31_t scaleFract,
        int8_t shift,
        q31_t * pDst,
        uint32_t blockSize);
# 346 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_abs_q7(
  const q7_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_abs_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 371 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_abs_f64(
const float64_t * pSrc,
   float64_t * pDst,
   uint32_t blockSize);
# 384 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_abs_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 396 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_abs_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 409 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_dot_prod_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        uint32_t blockSize,
        float32_t * result);
# 424 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_dot_prod_f64(
const float64_t * pSrcA,
const float64_t * pSrcB,
   uint32_t blockSize,
   float64_t * result);
# 439 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_dot_prod_q7(
  const q7_t * pSrcA,
  const q7_t * pSrcB,
        uint32_t blockSize,
        q31_t * result);
# 453 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_dot_prod_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        uint32_t blockSize,
        q63_t * result);
# 467 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_dot_prod_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        uint32_t blockSize,
        q63_t * result);
# 481 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_shift_q7(
  const q7_t * pSrc,
        int8_t shiftBits,
        q7_t * pDst,
        uint32_t blockSize);
# 495 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_shift_q15(
  const q15_t * pSrc,
        int8_t shiftBits,
        q15_t * pDst,
        uint32_t blockSize);
# 509 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_shift_q31(
  const q31_t * pSrc,
        int8_t shiftBits,
        q31_t * pDst,
        uint32_t blockSize);
# 523 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_offset_f64(
const float64_t * pSrc,
   float64_t offset,
   float64_t * pDst,
   uint32_t blockSize);
# 538 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_offset_f32(
  const float32_t * pSrc,
        float32_t offset,
        float32_t * pDst,
        uint32_t blockSize);
# 553 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_offset_q7(
  const q7_t * pSrc,
        q7_t offset,
        q7_t * pDst,
        uint32_t blockSize);
# 567 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_offset_q15(
  const q15_t * pSrc,
        q15_t offset,
        q15_t * pDst,
        uint32_t blockSize);
# 581 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_offset_q31(
  const q31_t * pSrc,
        q31_t offset,
        q31_t * pDst,
        uint32_t blockSize);
# 594 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_negate_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 607 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_negate_f64(
const float64_t * pSrc,
   float64_t * pDst,
   uint32_t blockSize);
# 620 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_negate_q7(
  const q7_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 632 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_negate_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 644 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_negate_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 657 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_and_u16(
    const uint16_t * pSrcA,
    const uint16_t * pSrcB,
          uint16_t * pDst,
          uint32_t blockSize);
# 671 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_and_u32(
    const uint32_t * pSrcA,
    const uint32_t * pSrcB,
          uint32_t * pDst,
          uint32_t blockSize);
# 685 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_and_u8(
    const uint8_t * pSrcA,
    const uint8_t * pSrcB,
          uint8_t * pDst,
          uint32_t blockSize);
# 699 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_or_u16(
    const uint16_t * pSrcA,
    const uint16_t * pSrcB,
          uint16_t * pDst,
          uint32_t blockSize);
# 713 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_or_u32(
    const uint32_t * pSrcA,
    const uint32_t * pSrcB,
          uint32_t * pDst,
          uint32_t blockSize);
# 727 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_or_u8(
    const uint8_t * pSrcA,
    const uint8_t * pSrcB,
          uint8_t * pDst,
          uint32_t blockSize);
# 740 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_not_u16(
    const uint16_t * pSrc,
          uint16_t * pDst,
          uint32_t blockSize);
# 752 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_not_u32(
    const uint32_t * pSrc,
          uint32_t * pDst,
          uint32_t blockSize);
# 764 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_not_u8(
    const uint8_t * pSrc,
          uint8_t * pDst,
          uint32_t blockSize);
# 777 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_xor_u16(
    const uint16_t * pSrcA,
    const uint16_t * pSrcB,
          uint16_t * pDst,
          uint32_t blockSize);
# 791 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_xor_u32(
    const uint32_t * pSrcA,
    const uint32_t * pSrcB,
          uint32_t * pDst,
          uint32_t blockSize);
# 805 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
  void arm_xor_u8(
    const uint8_t * pSrcA,
    const uint8_t * pSrcB,
          uint8_t * pDst,
    uint32_t blockSize);
# 821 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_clip_f32(const float32_t * pSrc,
  float32_t * pDst,
  float32_t low,
  float32_t high,
  uint32_t numSamples);
# 837 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_clip_q31(const q31_t * pSrc,
  q31_t * pDst,
  q31_t low,
  q31_t high,
  uint32_t numSamples);
# 853 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_clip_q15(const q15_t * pSrc,
  q15_t * pDst,
  q15_t low,
  q15_t high,
  uint32_t numSamples);
# 869 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h"
void arm_clip_q7(const q7_t * pSrc,
  q7_t * pDst,
  q7_t low,
  q7_t high,
  uint32_t numSamples);
# 195 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h" 1
# 53 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  typedef struct
  {
          uint32_t nValues;
          float32_t x1;
          float32_t xSpacing;
          float32_t *pYData;
  } arm_linear_interp_instance_f32;




  typedef struct
  {
          uint16_t numRows;
          uint16_t numCols;
          float32_t *pData;
  } arm_bilinear_interp_instance_f32;




  typedef struct
  {
          uint16_t numRows;
          uint16_t numCols;
          q31_t *pData;
  } arm_bilinear_interp_instance_q31;




  typedef struct
  {
          uint16_t numRows;
          uint16_t numCols;
          q15_t *pData;
  } arm_bilinear_interp_instance_q15;




  typedef struct
  {
          uint16_t numRows;
          uint16_t numCols;
          q7_t *pData;
  } arm_bilinear_interp_instance_q7;





  typedef enum
  {
    ARM_SPLINE_NATURAL = 0,
    ARM_SPLINE_PARABOLIC_RUNOUT = 1
  } arm_spline_type;




  typedef struct
  {
    arm_spline_type type;
    const float32_t * x;
    const float32_t * y;
    uint32_t n_x;
    float32_t * coeffs;
  } arm_spline_instance_f32;
# 143 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  void arm_spline_f32(
        arm_spline_instance_f32 * S,
  const float32_t * xq,
        float32_t * pDst,
        uint32_t blockSize);
# 159 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  void arm_spline_init_f32(
          arm_spline_instance_f32 * S,
          arm_spline_type type,
    const float32_t * x,
    const float32_t * y,
          uint32_t n,
          float32_t * coeffs,
          float32_t * tempBuffer);
# 187 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  float32_t arm_linear_interp_f32(
  arm_linear_interp_instance_f32 * S,
  float32_t x);
# 204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  q31_t arm_linear_interp_q31(
  const q31_t * pYData,
  q31_t x,
  uint32_t nValues);
# 222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  q15_t arm_linear_interp_q15(
  const q15_t * pYData,
  q31_t x,
  uint32_t nValues);
# 239 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
q7_t arm_linear_interp_q7(
  const q7_t * pYData,
  q31_t x,
  uint32_t nValues);
# 268 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  float32_t arm_bilinear_interp_f32(
  const arm_bilinear_interp_instance_f32 * S,
  float32_t X,
  float32_t Y);
# 280 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  q31_t arm_bilinear_interp_q31(
  arm_bilinear_interp_instance_q31 * S,
  q31_t X,
  q31_t Y);
# 293 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  q15_t arm_bilinear_interp_q15(
  arm_bilinear_interp_instance_q15 * S,
  q31_t X,
  q31_t Y);
# 305 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/interpolation_functions.h"
  q7_t arm_bilinear_interp_q7(
  arm_bilinear_interp_instance_q7 * S,
  q31_t X,
  q31_t Y);
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/bayes_functions.h" 1
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/bayes_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h" 1
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/basic_math_functions.h" 1
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h" 1
# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  float32_t arm_sin_f32(
  float32_t x);







  q31_t arm_sin_q31(
  q31_t x);







  q15_t arm_sin_q15(
  q15_t x);
# 116 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  float32_t arm_cos_f32(
  float32_t x);







  q31_t arm_cos_q31(
  q31_t x);







  q15_t arm_cos_q15(
  q15_t x);
# 149 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vlog_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 163 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vlog_f64(
  const float64_t * pSrc,
  float64_t * pDst,
  uint32_t blockSize);
# 177 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vlog_q31(const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 188 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vlog_q15(const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vexp_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 215 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  void arm_vexp_f64(
  const float64_t * pSrc,
  float64_t * pDst,
  uint32_t blockSize);
# 256 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
__attribute__((always_inline)) static inline arm_status arm_sqrt_f32(
  const float32_t in,
  float32_t * pOut)
  {
    if (in >= 0.0f)
    {
# 277 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
      *pOut = sqrtf(in);


      return (ARM_MATH_SUCCESS);
    }
    else
    {
      *pOut = 0.0f;
      return (ARM_MATH_ARGUMENT_ERROR);
    }
  }
# 298 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
arm_status arm_sqrt_q31(
  q31_t in,
  q31_t * pOut);
# 311 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
arm_status arm_sqrt_q15(
  q15_t in,
  q15_t * pOut);
# 333 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
arm_status arm_divide_q15(q15_t numerator,
  q15_t denominator,
  q15_t *quotient,
  int16_t *shift);
# 350 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
arm_status arm_divide_q31(q31_t numerator,
  q31_t denominator,
  q31_t *quotient,
  int16_t *shift);
# 364 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  arm_status arm_atan2_f32(float32_t y,float32_t x,float32_t *result);
# 374 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  arm_status arm_atan2_q31(q31_t y,q31_t x,q31_t *result);
# 383 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h"
  arm_status arm_atan2_q15(q15_t y,q15_t x,q15_t *result);
# 38 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h" 2
# 74 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float32_t arm_logsumexp_f32(const float32_t *in, uint32_t blockSize);
# 90 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float32_t arm_logsumexp_dot_prod_f32(const float32_t * pSrcA,
  const float32_t * pSrcB,
  uint32_t blockSize,
  float32_t *pTmpBuffer);
# 105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float32_t arm_entropy_f32(const float32_t * pSrcA,uint32_t blockSize);
# 118 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float64_t arm_entropy_f64(const float64_t * pSrcA, uint32_t blockSize);
# 130 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float32_t arm_kullback_leibler_f32(const float32_t * pSrcA
  ,const float32_t * pSrcB
  ,uint32_t blockSize);
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
float64_t arm_kullback_leibler_f64(const float64_t * pSrcA,
                const float64_t * pSrcB,
                uint32_t blockSize);
# 155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_power_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q63_t * pResult);
# 167 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_power_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 179 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_power_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 191 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_power_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q63_t * pResult);
# 203 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_power_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 215 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_mean_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * pResult);
# 227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_mean_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 239 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_mean_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 251 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_mean_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_mean_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 275 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_var_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 287 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_var_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 299 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_var_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 311 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_var_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 323 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_rms_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 335 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_rms_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 347 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_rms_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 359 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_std_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 371 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_std_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 383 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_std_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 395 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_std_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 409 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * result,
        uint32_t * index);
# 422 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmin_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * result,
        uint32_t * index);







  void arm_absmin_no_idx_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * result);
# 447 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult,
        uint32_t * pIndex);
# 460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmin_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult,
        uint32_t * pIndex);







  void arm_absmin_no_idx_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 485 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult,
        uint32_t * pIndex);
# 498 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmin_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult,
        uint32_t * pIndex);







  void arm_absmin_no_idx_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 523 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult,
        uint32_t * pIndex);
# 536 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmin_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult,
        uint32_t * pIndex);







  void arm_absmin_no_idx_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 561 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult,
        uint32_t * pIndex);
# 574 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmin_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult,
        uint32_t * pIndex);







  void arm_absmin_no_idx_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 599 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * pResult,
        uint32_t * pIndex);
# 612 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmax_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * pResult,
        uint32_t * pIndex);







  void arm_absmax_no_idx_q7(
  const q7_t * pSrc,
        uint32_t blockSize,
        q7_t * pResult);
# 637 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult,
        uint32_t * pIndex);
# 650 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmax_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult,
        uint32_t * pIndex);







  void arm_absmax_no_idx_q15(
  const q15_t * pSrc,
        uint32_t blockSize,
        q15_t * pResult);
# 674 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult,
        uint32_t * pIndex);
# 687 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmax_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult,
        uint32_t * pIndex);







  void arm_absmax_no_idx_q31(
  const q31_t * pSrc,
        uint32_t blockSize,
        q31_t * pResult);
# 711 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult,
        uint32_t * pIndex);
# 724 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmax_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult,
        uint32_t * pIndex);







  void arm_absmax_no_idx_f32(
  const float32_t * pSrc,
        uint32_t blockSize,
        float32_t * pResult);
# 748 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult,
        uint32_t * pIndex);
# 761 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_absmax_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult,
        uint32_t * pIndex);







  void arm_absmax_no_idx_f64(
  const float64_t * pSrc,
        uint32_t blockSize,
        float64_t * pResult);
# 785 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_no_idx_f32(
      const float32_t *pSrc,
      uint32_t blockSize,
      float32_t *pResult);
# 797 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_no_idx_f32(
      const float32_t *pSrc,
      uint32_t blockSize,
      float32_t *pResult);
# 809 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_no_idx_f64(
      const float64_t *pSrc,
      uint32_t blockSize,
      float64_t *pResult);
# 821 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_no_idx_q31(
      const q31_t *pSrc,
      uint32_t blockSize,
      q31_t *pResult);
# 833 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_no_idx_q15(
      const q15_t *pSrc,
      uint32_t blockSize,
      q15_t *pResult);
# 845 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_max_no_idx_q7(
      const q7_t *pSrc,
      uint32_t blockSize,
      q7_t *pResult);
# 857 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_no_idx_f64(
      const float64_t *pSrc,
      uint32_t blockSize,
      float64_t *pResult);
# 869 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_no_idx_q31(
      const q31_t *pSrc,
      uint32_t blockSize,
      q31_t *pResult);
# 881 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_no_idx_q15(
      const q15_t *pSrc,
      uint32_t blockSize,
      q15_t *pResult);
# 893 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
  void arm_min_no_idx_q7(
      const q7_t *pSrc,
      uint32_t blockSize,
      q7_t *pResult);
# 907 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
void arm_mse_q7(
  const q7_t * pSrcA,
  const q7_t * pSrcB,
        uint32_t blockSize,
        q7_t * pResult);
# 922 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
void arm_mse_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        uint32_t blockSize,
        q15_t * pResult);
# 937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
void arm_mse_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        uint32_t blockSize,
        q31_t * pResult);
# 952 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
void arm_mse_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        uint32_t blockSize,
        float32_t * pResult);
# 967 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h"
void arm_mse_f64(
  const float64_t * pSrcA,
  const float64_t * pSrcB,
        uint32_t blockSize,
        float64_t * pResult);
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/bayes_functions.h" 2
# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/bayes_functions.h"
typedef struct
{
  uint32_t vectorDimension;
  uint32_t numberOfClasses;
  const float32_t *theta;
  const float32_t *sigma;
  const float32_t *classPriors;
  float32_t epsilon;
} arm_gaussian_naive_bayes_instance_f32;
# 79 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/bayes_functions.h"
uint32_t arm_gaussian_naive_bayes_predict_f32(const arm_gaussian_naive_bayes_instance_f32 *S,
   const float32_t * in,
   float32_t *pOutputProbabilities,
   float32_t *pBufferB);
# 197 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h" 1
# 115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    float32_t *pData;
  } arm_matrix_instance_f32;




  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    float64_t *pData;
  } arm_matrix_instance_f64;




  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    q7_t *pData;
  } arm_matrix_instance_q7;




  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    q15_t *pData;
  } arm_matrix_instance_q15;




  typedef struct
  {
    uint16_t numRows;
    uint16_t numCols;
    q31_t *pData;
  } arm_matrix_instance_q31;
# 170 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_add_f32(
  const arm_matrix_instance_f32 * pSrcA,
  const arm_matrix_instance_f32 * pSrcB,
        arm_matrix_instance_f32 * pDst);
# 183 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_add_q15(
  const arm_matrix_instance_q15 * pSrcA,
  const arm_matrix_instance_q15 * pSrcB,
        arm_matrix_instance_q15 * pDst);
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_add_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst);
# 209 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_mult_f32(
  const arm_matrix_instance_f32 * pSrcA,
  const arm_matrix_instance_f32 * pSrcB,
        arm_matrix_instance_f32 * pDst);
# 222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_mult_q15(
  const arm_matrix_instance_q15 * pSrcA,
  const arm_matrix_instance_q15 * pSrcB,
        arm_matrix_instance_q15 * pDst,
        q15_t * pScratch);
# 236 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_mult_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst);
# 248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_trans_f32(
  const arm_matrix_instance_f32 * pSrc,
        arm_matrix_instance_f32 * pDst);
# 259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_trans_f64(
  const arm_matrix_instance_f64 * pSrc,
        arm_matrix_instance_f64 * pDst);
# 270 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_trans_f32(
  const arm_matrix_instance_f32 * pSrc,
  arm_matrix_instance_f32 * pDst);
# 282 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_trans_q15(
  const arm_matrix_instance_q15 * pSrc,
        arm_matrix_instance_q15 * pDst);
# 293 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_trans_q15(
  const arm_matrix_instance_q15 * pSrc,
  arm_matrix_instance_q15 * pDst);
# 304 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_trans_q7(
  const arm_matrix_instance_q7 * pSrc,
        arm_matrix_instance_q7 * pDst);
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_trans_q31(
  const arm_matrix_instance_q31 * pSrc,
        arm_matrix_instance_q31 * pDst);
# 326 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_cmplx_trans_q31(
  const arm_matrix_instance_q31 * pSrc,
  arm_matrix_instance_q31 * pDst);
# 338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_f32(
  const arm_matrix_instance_f32 * pSrcA,
  const arm_matrix_instance_f32 * pSrcB,
        arm_matrix_instance_f32 * pDst);
# 351 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_f64(
  const arm_matrix_instance_f64 * pSrcA,
  const arm_matrix_instance_f64 * pSrcB,
        arm_matrix_instance_f64 * pDst);







void arm_mat_vec_mult_f32(
  const arm_matrix_instance_f32 *pSrcMat,
  const float32_t *pVec,
  float32_t *pDst);
# 376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_q7(
  const arm_matrix_instance_q7 * pSrcA,
  const arm_matrix_instance_q7 * pSrcB,
        arm_matrix_instance_q7 * pDst,
        q7_t * pState);







void arm_mat_vec_mult_q7(
  const arm_matrix_instance_q7 *pSrcMat,
  const q7_t *pVec,
  q7_t *pDst);
# 402 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_q15(
  const arm_matrix_instance_q15 * pSrcA,
  const arm_matrix_instance_q15 * pSrcB,
        arm_matrix_instance_q15 * pDst,
        q15_t * pState);







void arm_mat_vec_mult_q15(
  const arm_matrix_instance_q15 *pSrcMat,
  const q15_t *pVec,
  q15_t *pDst);
# 428 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_fast_q15(
  const arm_matrix_instance_q15 * pSrcA,
  const arm_matrix_instance_q15 * pSrcB,
        arm_matrix_instance_q15 * pDst,
        q15_t * pState);
# 442 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst);
# 456 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_opt_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst,
        q31_t *pState);







void arm_mat_vec_mult_q31(
  const arm_matrix_instance_q31 *pSrcMat,
  const q31_t *pVec,
  q31_t *pDst);
# 481 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_mult_fast_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst);
# 494 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_sub_f32(
  const arm_matrix_instance_f32 * pSrcA,
  const arm_matrix_instance_f32 * pSrcB,
        arm_matrix_instance_f32 * pDst);
# 507 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_sub_f64(
  const arm_matrix_instance_f64 * pSrcA,
  const arm_matrix_instance_f64 * pSrcB,
        arm_matrix_instance_f64 * pDst);
# 520 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_sub_q15(
  const arm_matrix_instance_q15 * pSrcA,
  const arm_matrix_instance_q15 * pSrcB,
        arm_matrix_instance_q15 * pDst);
# 533 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_sub_q31(
  const arm_matrix_instance_q31 * pSrcA,
  const arm_matrix_instance_q31 * pSrcB,
        arm_matrix_instance_q31 * pDst);
# 546 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_scale_f32(
  const arm_matrix_instance_f32 * pSrc,
        float32_t scale,
        arm_matrix_instance_f32 * pDst);
# 560 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_scale_q15(
  const arm_matrix_instance_q15 * pSrc,
        q15_t scaleFract,
        int32_t shift,
        arm_matrix_instance_q15 * pDst);
# 575 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
arm_status arm_mat_scale_q31(
  const arm_matrix_instance_q31 * pSrc,
        q31_t scaleFract,
        int32_t shift,
        arm_matrix_instance_q31 * pDst);
# 588 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
void arm_mat_init_q31(
        arm_matrix_instance_q31 * S,
        uint16_t nRows,
        uint16_t nColumns,
        q31_t * pData);
# 601 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
void arm_mat_init_q15(
        arm_matrix_instance_q15 * S,
        uint16_t nRows,
        uint16_t nColumns,
        q15_t * pData);
# 614 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
void arm_mat_init_f32(
        arm_matrix_instance_f32 * S,
        uint16_t nRows,
        uint16_t nColumns,
        float32_t * pData);
# 629 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_inverse_f32(
  const arm_matrix_instance_f32 * src,
  arm_matrix_instance_f32 * dst);
# 641 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_inverse_f64(
  const arm_matrix_instance_f64 * src,
  arm_matrix_instance_f64 * dst);
# 654 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_cholesky_f64(
  const arm_matrix_instance_f64 * src,
  arm_matrix_instance_f64 * dst);
# 667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_cholesky_f32(
  const arm_matrix_instance_f32 * src,
  arm_matrix_instance_f32 * dst);
# 678 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_solve_upper_triangular_f32(
  const arm_matrix_instance_f32 * ut,
  const arm_matrix_instance_f32 * a,
  arm_matrix_instance_f32 * dst);
# 690 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_solve_lower_triangular_f32(
  const arm_matrix_instance_f32 * lt,
  const arm_matrix_instance_f32 * a,
  arm_matrix_instance_f32 * dst);
# 703 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_solve_upper_triangular_f64(
  const arm_matrix_instance_f64 * ut,
  const arm_matrix_instance_f64 * a,
  arm_matrix_instance_f64 * dst);
# 715 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_solve_lower_triangular_f64(
  const arm_matrix_instance_f64 * lt,
  const arm_matrix_instance_f64 * a,
  arm_matrix_instance_f64 * dst);
# 731 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_ldlt_f32(
  const arm_matrix_instance_f32 * src,
  arm_matrix_instance_f32 * l,
  arm_matrix_instance_f32 * d,
  uint16_t * pp);
# 747 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/matrix_functions.h"
  arm_status arm_mat_ldlt_f64(
  const arm_matrix_instance_f64 * src,
  arm_matrix_instance_f64 * l,
  arm_matrix_instance_f64 * d,
  uint16_t * pp);
# 198 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h" 1
# 58 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_conj_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t numSamples);







  void arm_cmplx_conj_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t numSamples);
# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_conj_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t numSamples);
# 93 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_squared_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t numSamples);
# 105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_squared_f64(
  const float64_t * pSrc,
        float64_t * pDst,
        uint32_t numSamples);
# 117 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_squared_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t numSamples);
# 129 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_squared_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t numSamples);
# 141 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t numSamples);
# 153 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_f64(
  const float64_t * pSrc,
        float64_t * pDst,
        uint32_t numSamples);
# 165 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t numSamples);
# 177 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mag_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t numSamples);







  void arm_cmplx_mag_fast_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t numSamples);
# 202 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_dot_prod_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        uint32_t numSamples,
        q31_t * realResult,
        q31_t * imagResult);
# 218 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_dot_prod_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        uint32_t numSamples,
        q63_t * realResult,
        q63_t * imagResult);
# 234 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_dot_prod_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        uint32_t numSamples,
        float32_t * realResult,
        float32_t * imagResult);
# 249 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_real_q15(
  const q15_t * pSrcCmplx,
  const q15_t * pSrcReal,
        q15_t * pCmplxDst,
        uint32_t numSamples);
# 263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_real_q31(
  const q31_t * pSrcCmplx,
  const q31_t * pSrcReal,
        q31_t * pCmplxDst,
        uint32_t numSamples);
# 277 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_real_f32(
  const float32_t * pSrcCmplx,
  const float32_t * pSrcReal,
        float32_t * pCmplxDst,
        uint32_t numSamples);
# 290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_cmplx_q15(
  const q15_t * pSrcA,
  const q15_t * pSrcB,
        q15_t * pDst,
        uint32_t numSamples);
# 304 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_cmplx_q31(
  const q31_t * pSrcA,
  const q31_t * pSrcB,
        q31_t * pDst,
        uint32_t numSamples);
# 318 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
  void arm_cmplx_mult_cmplx_f32(
  const float32_t * pSrcA,
  const float32_t * pSrcB,
        float32_t * pDst,
        uint32_t numSamples);
# 333 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h"
void arm_cmplx_mult_cmplx_f64(
const float64_t * pSrcA,
const float64_t * pSrcB,
   float64_t * pDst,
   uint32_t numSamples);
# 199 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/statistics_functions.h" 1
# 200 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h" 1
# 70 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  void arm_sin_cos_f32(
        float32_t theta,
        float32_t * pSinVal,
        float32_t * pCosVal);
# 82 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  void arm_sin_cos_q31(
        q31_t theta,
        q31_t * pSinVal,
        q31_t * pCosVal);
# 157 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  typedef struct
  {
          q15_t A0;




          q31_t A1;

          q15_t state[3];
          q15_t Kp;
          q15_t Ki;
          q15_t Kd;
  } arm_pid_instance_q15;




  typedef struct
  {
          q31_t A0;
          q31_t A1;
          q31_t A2;
          q31_t state[3];
          q31_t Kp;
          q31_t Ki;
          q31_t Kd;
  } arm_pid_instance_q31;




  typedef struct
  {
          float32_t A0;
          float32_t A1;
          float32_t A2;
          float32_t state[3];
          float32_t Kp;
          float32_t Ki;
          float32_t Kd;
  } arm_pid_instance_f32;
# 207 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  void arm_pid_init_f32(
        arm_pid_instance_f32 * S,
        int32_t resetStateFlag);






  void arm_pid_reset_f32(
        arm_pid_instance_f32 * S);







  void arm_pid_init_q31(
        arm_pid_instance_q31 * S,
        int32_t resetStateFlag);







  void arm_pid_reset_q31(
        arm_pid_instance_q31 * S);







  void arm_pid_init_q15(
        arm_pid_instance_q15 * S,
        int32_t resetStateFlag);






  void arm_pid_reset_q15(
        arm_pid_instance_q15 * S);
# 269 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  __attribute__((always_inline)) static inline float32_t arm_pid_f32(
  arm_pid_instance_f32 * S,
  float32_t in)
  {
    float32_t out;


    out = (S->A0 * in) +
      (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);


    S->state[1] = S->state[0];
    S->state[0] = in;
    S->state[2] = out;


    return (out);

  }
# 302 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline q31_t arm_pid_q31(
  arm_pid_instance_q31 * S,
  q31_t in)
  {
    q63_t acc;
    q31_t out;


    acc = (q63_t) S->A0 * in;


    acc += (q63_t) S->A1 * S->state[0];


    acc += (q63_t) S->A2 * S->state[1];


    out = (q31_t) (acc >> 31U);


    out += S->state[2];


    S->state[1] = S->state[0];
    S->state[0] = in;
    S->state[2] = out;


    return (out);
  }
# 348 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline q15_t arm_pid_q15(
  arm_pid_instance_q15 * S,
  q15_t in)
  {
    q63_t acc;
    q15_t out;





    acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);


    acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)read_q15x2 (S->state), (uint64_t)acc);
# 373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
    acc += (q31_t) S->state[2] << 15;


    out = (q15_t) (__extension__ ({ int32_t __RES, __ARG1 = ((q31_t)(acc >> 15)); __asm volatile ("ssat %0, %1, %2" : "=r" (__RES) : "I" (16), "r" (__ARG1) : "cc" ); __RES; }));


    S->state[1] = S->state[0];
    S->state[0] = in;
    S->state[2] = out;


    return (out);
  }
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  __attribute__((always_inline)) static inline void arm_park_f32(
  float32_t Ialpha,
  float32_t Ibeta,
  float32_t * pId,
  float32_t * pIq,
  float32_t sinVal,
  float32_t cosVal)
  {

    *pId = Ialpha * cosVal + Ibeta * sinVal;


    *pIq = -Ialpha * sinVal + Ibeta * cosVal;
  }
# 468 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline void arm_park_q31(
  q31_t Ialpha,
  q31_t Ibeta,
  q31_t * pId,
  q31_t * pIq,
  q31_t sinVal,
  q31_t cosVal)
  {
    q31_t product1, product2;
    q31_t product3, product4;


    product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);


    product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);



    product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);


    product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);


    *pId = __QADD(product1, product2);


    *pIq = __QSUB(product4, product3);
  }
# 540 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  __attribute__((always_inline)) static inline void arm_inv_park_f32(
  float32_t Id,
  float32_t Iq,
  float32_t * pIalpha,
  float32_t * pIbeta,
  float32_t sinVal,
  float32_t cosVal)
  {

    *pIalpha = Id * cosVal - Iq * sinVal;


    *pIbeta = Id * sinVal + Iq * cosVal;
  }
# 571 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline void arm_inv_park_q31(
  q31_t Id,
  q31_t Iq,
  q31_t * pIalpha,
  q31_t * pIbeta,
  q31_t sinVal,
  q31_t cosVal)
  {
    q31_t product1, product2;
    q31_t product3, product4;


    product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);


    product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);



    product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);


    product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);


    *pIalpha = __QSUB(product1, product2);


    *pIbeta = __QADD(product4, product3);
  }
# 646 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  __attribute__((always_inline)) static inline void arm_clarke_f32(
  float32_t Ia,
  float32_t Ib,
  float32_t * pIalpha,
  float32_t * pIbeta)
  {

    *pIalpha = Ia;


    *pIbeta = (0.57735026919f * Ia + 1.15470053838f * Ib);
  }
# 673 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline void arm_clarke_q31(
  q31_t Ia,
  q31_t Ib,
  q31_t * pIalpha,
  q31_t * pIbeta)
  {
    q31_t product1, product2;


    *pIalpha = Ia;


    product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);


    product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);


    *pIbeta = __QADD(product1, product2);
  }
# 732 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
  __attribute__((always_inline)) static inline void arm_inv_clarke_f32(
  float32_t Ialpha,
  float32_t Ibeta,
  float32_t * pIa,
  float32_t * pIb)
  {

    *pIa = Ialpha;


    *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
  }
# 759 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/controller_functions.h"
__attribute__((always_inline)) static inline void arm_inv_clarke_q31(
  q31_t Ialpha,
  q31_t Ibeta,
  q31_t * pIa,
  q31_t * pIb)
  {
    q31_t product1, product2;


    *pIa = Ialpha;


    product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);


    product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);


    *pIb = __QSUB(product2, product1);
  }
# 201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h" 1
# 52 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_float_to_q31(
  const float32_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 64 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_float_to_q15(
  const float32_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 76 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_float_to_q7(
  const float32_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 88 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q31_to_float(
  const q31_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q31_to_q15(
  const q31_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 112 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q31_to_q7(
  const q31_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q15_to_float(
  const q15_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 136 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q15_to_q31(
  const q15_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 148 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q15_to_q7(
  const q15_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 160 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q7_to_float(
  const q7_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 172 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q7_to_q31(
  const q7_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 184 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_q7_to_q15(
  const q7_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  typedef enum
  {
    ARM_SORT_BITONIC = 0,

    ARM_SORT_BUBBLE = 1,

    ARM_SORT_HEAP = 2,

    ARM_SORT_INSERTION = 3,

    ARM_SORT_QUICK = 4,

    ARM_SORT_SELECTION = 5

  } arm_sort_alg;




  typedef enum
  {
    ARM_SORT_DESCENDING = 0,

    ARM_SORT_ASCENDING = 1

  } arm_sort_dir;




  typedef struct
  {
    arm_sort_alg alg;
    arm_sort_dir dir;
  } arm_sort_instance_f32;







  void arm_sort_f32(
    const arm_sort_instance_f32 * S,
          float32_t * pSrc,
          float32_t * pDst,
          uint32_t blockSize);






  void arm_sort_init_f32(
    arm_sort_instance_f32 * S,
    arm_sort_alg alg,
    arm_sort_dir dir);




  typedef struct
  {
    arm_sort_dir dir;
    float32_t * buffer;
  } arm_merge_sort_instance_f32;







  void arm_merge_sort_f32(
    const arm_merge_sort_instance_f32 * S,
          float32_t *pSrc,
          float32_t *pDst,
          uint32_t blockSize);






  void arm_merge_sort_init_f32(
    arm_merge_sort_instance_f32 * S,
    arm_sort_dir dir,
    float32_t * buffer);
# 293 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_copy_f32(
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 306 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_copy_f64(
  const float64_t * pSrc,
        float64_t * pDst,
        uint32_t blockSize);
# 319 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_copy_q7(
  const q7_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 331 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_copy_q15(
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 343 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_copy_q31(
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 355 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_fill_f32(
        float32_t value,
        float32_t * pDst,
        uint32_t blockSize);
# 367 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_fill_f64(
        float64_t value,
        float64_t * pDst,
        uint32_t blockSize);
# 379 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_fill_q7(
        q7_t value,
        q7_t * pDst,
        uint32_t blockSize);
# 391 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_fill_q15(
        q15_t value,
        q15_t * pDst,
        uint32_t blockSize);
# 403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
  void arm_fill_q31(
        q31_t value,
        q31_t * pDst,
        uint32_t blockSize);
# 424 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
float32_t arm_weighted_sum_f32(const float32_t *in
  , const float32_t *weigths
  , uint32_t blockSize);
# 441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h"
void arm_barycenter_f32(const float32_t *in
  , const float32_t *weights
  , float32_t *out
  , uint32_t nbVectors
  , uint32_t vecDim);
# 202 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h" 1
# 70 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_euclidean_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float64_t arm_euclidean_distance_f64(const float64_t *pA,const float64_t *pB, uint32_t blockSize);
# 91 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_braycurtis_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 106 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_canberra_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 117 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_chebyshev_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 128 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float64_t arm_chebyshev_distance_f64(const float64_t *pA,const float64_t *pB, uint32_t blockSize);
# 139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_cityblock_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 149 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float64_t arm_cityblock_distance_f64(const float64_t *pA,const float64_t *pB, uint32_t blockSize);
# 162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_correlation_distance_f32(float32_t *pA,float32_t *pB, uint32_t blockSize);
# 174 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_cosine_distance_f32(const float32_t *pA,const float32_t *pB, uint32_t blockSize);
# 186 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float64_t arm_cosine_distance_f64(const float64_t *pA,const float64_t *pB, uint32_t blockSize);
# 208 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_jensenshannon_distance_f32(const float32_t *pA,const float32_t *pB,uint32_t blockSize);
# 223 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_minkowski_distance_f32(const float32_t *pA,const float32_t *pB, int32_t order, uint32_t blockSize);
# 237 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_dice_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 249 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_hamming_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 261 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_jaccard_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 273 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_kulsinski_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 285 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_rogerstanimoto_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 297 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_russellrao_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 309 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_sokalmichener_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 321 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_sokalsneath_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 333 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/distance_functions.h"
float32_t arm_yule_distance(const uint32_t *pA, const uint32_t *pB, uint32_t numberOfBools);
# 203 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h" 1
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_defines.h" 1
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_defines.h"
typedef enum
{
    ARM_ML_KERNEL_LINEAR = 0,

    ARM_ML_KERNEL_POLYNOMIAL = 1,

    ARM_ML_KERNEL_RBF = 2,

    ARM_ML_KERNEL_SIGMOID = 3

} arm_ml_kernel_type;
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h" 2
# 65 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
static inline float32_t arm_exponent_f32(float32_t x, int32_t nb)
{
    float32_t r = x;
    nb --;
    while(nb > 0)
    {
        r = r * x;
        nb--;
    }
    return(r);
}
# 84 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
typedef struct
{
  uint32_t nbOfSupportVectors;
  uint32_t vectorDimension;
  float32_t intercept;
  const float32_t *dualCoefficients;
  const float32_t *supportVectors;
  const int32_t *classes;
} arm_svm_linear_instance_f32;





typedef struct
{
  uint32_t nbOfSupportVectors;
  uint32_t vectorDimension;
  float32_t intercept;
  const float32_t *dualCoefficients;
  const float32_t *supportVectors;
  const int32_t *classes;
  int32_t degree;
  float32_t coef0;
  float32_t gamma;
} arm_svm_polynomial_instance_f32;




typedef struct
{
  uint32_t nbOfSupportVectors;
  uint32_t vectorDimension;
  float32_t intercept;
  const float32_t *dualCoefficients;
  const float32_t *supportVectors;
  const int32_t *classes;
  float32_t gamma;
} arm_svm_rbf_instance_f32;




typedef struct
{
  uint32_t nbOfSupportVectors;
  uint32_t vectorDimension;
  float32_t intercept;
  const float32_t *dualCoefficients;
  const float32_t *supportVectors;
  const int32_t *classes;
  float32_t coef0;
  float32_t gamma;
} arm_svm_sigmoid_instance_f32;
# 154 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_linear_init_f32(arm_svm_linear_instance_f32 *S,
  uint32_t nbOfSupportVectors,
  uint32_t vectorDimension,
  float32_t intercept,
  const float32_t *dualCoefficients,
  const float32_t *supportVectors,
  const int32_t *classes);
# 171 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_linear_predict_f32(const arm_svm_linear_instance_f32 *S,
   const float32_t * in,
   int32_t * pResult);
# 193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_polynomial_init_f32(arm_svm_polynomial_instance_f32 *S,
  uint32_t nbOfSupportVectors,
  uint32_t vectorDimension,
  float32_t intercept,
  const float32_t *dualCoefficients,
  const float32_t *supportVectors,
  const int32_t *classes,
  int32_t degree,
  float32_t coef0,
  float32_t gamma
  );
# 213 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_polynomial_predict_f32(const arm_svm_polynomial_instance_f32 *S,
   const float32_t * in,
   int32_t * pResult);
# 232 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_rbf_init_f32(arm_svm_rbf_instance_f32 *S,
  uint32_t nbOfSupportVectors,
  uint32_t vectorDimension,
  float32_t intercept,
  const float32_t *dualCoefficients,
  const float32_t *supportVectors,
  const int32_t *classes,
  float32_t gamma
  );
# 250 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_rbf_predict_f32(const arm_svm_rbf_instance_f32 *S,
   const float32_t * in,
   int32_t * pResult);
# 269 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_sigmoid_init_f32(arm_svm_sigmoid_instance_f32 *S,
  uint32_t nbOfSupportVectors,
  uint32_t vectorDimension,
  float32_t intercept,
  const float32_t *dualCoefficients,
  const float32_t *supportVectors,
  const int32_t *classes,
  float32_t coef0,
  float32_t gamma
  );
# 288 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/svm_functions.h"
void arm_svm_sigmoid_predict_f32(const arm_svm_sigmoid_instance_f32 *S,
   const float32_t * in,
   int32_t * pResult);
# 204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/fast_math_functions.h" 1
# 205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h" 1
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/complex_math_functions.h" 1
# 38 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h" 2
# 53 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const q15_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
  } arm_cfft_radix2_instance_q15;


  arm_status arm_cfft_radix2_init_q15(
        arm_cfft_radix2_instance_q15 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);


  void arm_cfft_radix2_q15(
  const arm_cfft_radix2_instance_q15 * S,
        q15_t * pSrc);





  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const q15_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
  } arm_cfft_radix4_instance_q15;


  arm_status arm_cfft_radix4_init_q15(
        arm_cfft_radix4_instance_q15 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);


  void arm_cfft_radix4_q15(
  const arm_cfft_radix4_instance_q15 * S,
        q15_t * pSrc);




  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const q31_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
  } arm_cfft_radix2_instance_q31;


  arm_status arm_cfft_radix2_init_q31(
        arm_cfft_radix2_instance_q31 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);


  void arm_cfft_radix2_q31(
  const arm_cfft_radix2_instance_q31 * S,
        q31_t * pSrc);




  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const q31_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
  } arm_cfft_radix4_instance_q31;


  void arm_cfft_radix4_q31(
  const arm_cfft_radix4_instance_q31 * S,
        q31_t * pSrc);


  arm_status arm_cfft_radix4_init_q31(
        arm_cfft_radix4_instance_q31 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);




  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const float32_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
          float32_t onebyfftLen;
  } arm_cfft_radix2_instance_f32;



  arm_status arm_cfft_radix2_init_f32(
        arm_cfft_radix2_instance_f32 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);


  void arm_cfft_radix2_f32(
  const arm_cfft_radix2_instance_f32 * S,
        float32_t * pSrc);




  typedef struct
  {
          uint16_t fftLen;
          uint8_t ifftFlag;
          uint8_t bitReverseFlag;
    const float32_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t twidCoefModifier;
          uint16_t bitRevFactor;
          float32_t onebyfftLen;
  } arm_cfft_radix4_instance_f32;




  arm_status arm_cfft_radix4_init_f32(
        arm_cfft_radix4_instance_f32 * S,
        uint16_t fftLen,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);


  void arm_cfft_radix4_f32(
  const arm_cfft_radix4_instance_f32 * S,
        float32_t * pSrc);




  typedef struct
  {
          uint16_t fftLen;
    const q15_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t bitRevLength;
# 229 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  } arm_cfft_instance_q15;

arm_status arm_cfft_init_q15(
  arm_cfft_instance_q15 * S,
  uint16_t fftLen);

void arm_cfft_q15(
    const arm_cfft_instance_q15 * S,
          q15_t * p1,
          uint8_t ifftFlag,
          uint8_t bitReverseFlag);




  typedef struct
  {
          uint16_t fftLen;
    const q31_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t bitRevLength;
# 258 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  } arm_cfft_instance_q31;

arm_status arm_cfft_init_q31(
  arm_cfft_instance_q31 * S,
  uint16_t fftLen);

void arm_cfft_q31(
    const arm_cfft_instance_q31 * S,
          q31_t * p1,
          uint8_t ifftFlag,
          uint8_t bitReverseFlag);




  typedef struct
  {
          uint16_t fftLen;
    const float32_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t bitRevLength;
# 287 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  } arm_cfft_instance_f32;



  arm_status arm_cfft_init_f32(
  arm_cfft_instance_f32 * S,
  uint16_t fftLen);

  void arm_cfft_f32(
  const arm_cfft_instance_f32 * S,
        float32_t * p1,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);





  typedef struct
  {
          uint16_t fftLen;
    const float64_t *pTwiddle;
    const uint16_t *pBitRevTable;
          uint16_t bitRevLength;
  } arm_cfft_instance_f64;

  arm_status arm_cfft_init_f64(
  arm_cfft_instance_f64 * S,
  uint16_t fftLen);

  void arm_cfft_f64(
  const arm_cfft_instance_f64 * S,
        float64_t * p1,
        uint8_t ifftFlag,
        uint8_t bitReverseFlag);




  typedef struct
  {
          uint32_t fftLenReal;
          uint8_t ifftFlagR;
          uint8_t bitReverseFlagR;
          uint32_t twidCoefRModifier;
    const q15_t *pTwiddleAReal;
    const q15_t *pTwiddleBReal;



    const arm_cfft_instance_q15 *pCfft;

  } arm_rfft_instance_q15;

  arm_status arm_rfft_init_q15(
        arm_rfft_instance_q15 * S,
        uint32_t fftLenReal,
        uint32_t ifftFlagR,
        uint32_t bitReverseFlag);

  void arm_rfft_q15(
  const arm_rfft_instance_q15 * S,
        q15_t * pSrc,
        q15_t * pDst);




  typedef struct
  {
          uint32_t fftLenReal;
          uint8_t ifftFlagR;
          uint8_t bitReverseFlagR;
          uint32_t twidCoefRModifier;
    const q31_t *pTwiddleAReal;
    const q31_t *pTwiddleBReal;



    const arm_cfft_instance_q31 *pCfft;

  } arm_rfft_instance_q31;

  arm_status arm_rfft_init_q31(
        arm_rfft_instance_q31 * S,
        uint32_t fftLenReal,
        uint32_t ifftFlagR,
        uint32_t bitReverseFlag);

  void arm_rfft_q31(
  const arm_rfft_instance_q31 * S,
        q31_t * pSrc,
        q31_t * pDst);




  typedef struct
  {
          uint32_t fftLenReal;
          uint16_t fftLenBy2;
          uint8_t ifftFlagR;
          uint8_t bitReverseFlagR;
          uint32_t twidCoefRModifier;
    const float32_t *pTwiddleAReal;
    const float32_t *pTwiddleBReal;
          arm_cfft_radix4_instance_f32 *pCfft;
  } arm_rfft_instance_f32;

  arm_status arm_rfft_init_f32(
        arm_rfft_instance_f32 * S,
        arm_cfft_radix4_instance_f32 * S_CFFT,
        uint32_t fftLenReal,
        uint32_t ifftFlagR,
        uint32_t bitReverseFlag);

  void arm_rfft_f32(
  const arm_rfft_instance_f32 * S,
        float32_t * pSrc,
        float32_t * pDst);




typedef struct
  {
          arm_cfft_instance_f64 Sint;
          uint16_t fftLenRFFT;
    const float64_t * pTwiddleRFFT;
  } arm_rfft_fast_instance_f64 ;

arm_status arm_rfft_fast_init_f64 (
         arm_rfft_fast_instance_f64 * S,
         uint16_t fftLen);


void arm_rfft_fast_f64(
    arm_rfft_fast_instance_f64 * S,
    float64_t * p, float64_t * pOut,
    uint8_t ifftFlag);





typedef struct
  {
          arm_cfft_instance_f32 Sint;
          uint16_t fftLenRFFT;
    const float32_t * pTwiddleRFFT;
  } arm_rfft_fast_instance_f32 ;

arm_status arm_rfft_fast_init_f32 (
         arm_rfft_fast_instance_f32 * S,
         uint16_t fftLen);


  void arm_rfft_fast_f32(
        const arm_rfft_fast_instance_f32 * S,
        float32_t * p, float32_t * pOut,
        uint8_t ifftFlag);




  typedef struct
  {
          uint16_t N;
          uint16_t Nby2;
          float32_t normalize;
    const float32_t *pTwiddle;
    const float32_t *pCosFactor;
          arm_rfft_instance_f32 *pRfft;
          arm_cfft_radix4_instance_f32 *pCfft;
  } arm_dct4_instance_f32;
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  arm_status arm_dct4_init_f32(
        arm_dct4_instance_f32 * S,
        arm_rfft_instance_f32 * S_RFFT,
        arm_cfft_radix4_instance_f32 * S_CFFT,
        uint16_t N,
        uint16_t Nby2,
        float32_t normalize);
# 489 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  void arm_dct4_f32(
  const arm_dct4_instance_f32 * S,
        float32_t * pState,
        float32_t * pInlineBuffer);





  typedef struct
  {
          uint16_t N;
          uint16_t Nby2;
          q31_t normalize;
    const q31_t *pTwiddle;
    const q31_t *pCosFactor;
          arm_rfft_instance_q31 *pRfft;
          arm_cfft_radix4_instance_q31 *pCfft;
  } arm_dct4_instance_q31;
# 520 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  arm_status arm_dct4_init_q31(
        arm_dct4_instance_q31 * S,
        arm_rfft_instance_q31 * S_RFFT,
        arm_cfft_radix4_instance_q31 * S_CFFT,
        uint16_t N,
        uint16_t Nby2,
        q31_t normalize);
# 535 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  void arm_dct4_q31(
  const arm_dct4_instance_q31 * S,
        q31_t * pState,
        q31_t * pInlineBuffer);





  typedef struct
  {
          uint16_t N;
          uint16_t Nby2;
          q15_t normalize;
    const q15_t *pTwiddle;
    const q15_t *pCosFactor;
          arm_rfft_instance_q15 *pRfft;
          arm_cfft_radix4_instance_q15 *pCfft;
  } arm_dct4_instance_q15;
# 566 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  arm_status arm_dct4_init_q15(
        arm_dct4_instance_q15 * S,
        arm_rfft_instance_q15 * S_RFFT,
        arm_cfft_radix4_instance_q15 * S_CFFT,
        uint16_t N,
        uint16_t Nby2,
        q15_t normalize);
# 581 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  void arm_dct4_q15(
  const arm_dct4_instance_q15 * S,
        q15_t * pState,
        q15_t * pInlineBuffer);




typedef struct
  {
     const float32_t *dctCoefs;
     const float32_t *filterCoefs;
     const float32_t *windowCoefs;
     const uint32_t *filterPos;
     const uint32_t *filterLengths;
     uint32_t fftLen;
     uint32_t nbMelFilters;
     uint32_t nbDctOutputs;





     arm_rfft_fast_instance_f32 rfft;

  } arm_mfcc_instance_f32 ;

arm_status arm_mfcc_init_f32(
  arm_mfcc_instance_f32 * S,
  uint32_t fftLen,
  uint32_t nbMelFilters,
  uint32_t nbDctOutputs,
  const float32_t *dctCoefs,
  const uint32_t *filterPos,
  const uint32_t *filterLengths,
  const float32_t *filterCoefs,
  const float32_t *windowCoefs
  );
# 629 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  void arm_mfcc_f32(
  const arm_mfcc_instance_f32 * S,
  float32_t *pSrc,
  float32_t *pDst,
  float32_t *pTmp
  );

typedef struct
  {
     const q31_t *dctCoefs;
     const q31_t *filterCoefs;
     const q31_t *windowCoefs;
     const uint32_t *filterPos;
     const uint32_t *filterLengths;
     uint32_t fftLen;
     uint32_t nbMelFilters;
     uint32_t nbDctOutputs;





     arm_rfft_instance_q31 rfft;

  } arm_mfcc_instance_q31 ;

arm_status arm_mfcc_init_q31(
  arm_mfcc_instance_q31 * S,
  uint32_t fftLen,
  uint32_t nbMelFilters,
  uint32_t nbDctOutputs,
  const q31_t *dctCoefs,
  const uint32_t *filterPos,
  const uint32_t *filterLengths,
  const q31_t *filterCoefs,
  const q31_t *windowCoefs
  );
# 676 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  arm_status arm_mfcc_q31(
  const arm_mfcc_instance_q31 * S,
  q31_t *pSrc,
  q31_t *pDst,
  q31_t *pTmp
  );

typedef struct
  {
     const q15_t *dctCoefs;
     const q15_t *filterCoefs;
     const q15_t *windowCoefs;
     const uint32_t *filterPos;
     const uint32_t *filterLengths;
     uint32_t fftLen;
     uint32_t nbMelFilters;
     uint32_t nbDctOutputs;





     arm_rfft_instance_q15 rfft;

  } arm_mfcc_instance_q15 ;

arm_status arm_mfcc_init_q15(
  arm_mfcc_instance_q15 * S,
  uint32_t fftLen,
  uint32_t nbMelFilters,
  uint32_t nbDctOutputs,
  const q15_t *dctCoefs,
  const uint32_t *filterPos,
  const uint32_t *filterLengths,
  const q15_t *filterCoefs,
  const q15_t *windowCoefs
  );
# 723 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/transform_functions.h"
  arm_status arm_mfcc_q15(
  const arm_mfcc_instance_q15 * S,
  q15_t *pSrc,
  q15_t *pDst,
  q31_t *pTmp
  );
# 206 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h" 1
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/support_functions.h" 1
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h" 2
# 56 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  typedef struct
  {
          uint16_t numTaps;
          q7_t *pState;
    const q7_t *pCoeffs;
  } arm_fir_instance_q7;




  typedef struct
  {
          uint16_t numTaps;
          q15_t *pState;
    const q15_t *pCoeffs;
  } arm_fir_instance_q15;




  typedef struct
  {
          uint16_t numTaps;
          q31_t *pState;
    const q31_t *pCoeffs;
  } arm_fir_instance_q31;




  typedef struct
  {
          uint16_t numTaps;
          float32_t *pState;
    const float32_t *pCoeffs;
  } arm_fir_instance_f32;




  typedef struct
  {
          uint16_t numTaps;
          float64_t *pState;
    const float64_t *pCoeffs;
  } arm_fir_instance_f64;
# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_q7(
  const arm_fir_instance_q7 * S,
  const q7_t * pSrc,
        q7_t * pDst,
        uint32_t blockSize);
# 127 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_init_q7(
        arm_fir_instance_q7 * S,
        uint16_t numTaps,
  const q7_t * pCoeffs,
        q7_t * pState,
        uint32_t blockSize);
# 141 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_q15(
  const arm_fir_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 154 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_fast_q15(
  const arm_fir_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_init_q15(
        arm_fir_instance_q15 * S,
        uint16_t numTaps,
  const q15_t * pCoeffs,
        q15_t * pState,
        uint32_t blockSize);
# 189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_q31(
  const arm_fir_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 202 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_fast_q31(
  const arm_fir_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 219 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_init_q31(
        arm_fir_instance_q31 * S,
        uint16_t numTaps,
  const q31_t * pCoeffs,
        q31_t * pState,
        uint32_t blockSize);
# 233 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_f32(
  const arm_fir_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 246 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_f64(
  const arm_fir_instance_f64 * S,
  const float64_t * pSrc,
        float64_t * pDst,
        uint32_t blockSize);
# 260 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_init_f32(
        arm_fir_instance_f32 * S,
        uint16_t numTaps,
  const float32_t * pCoeffs,
        float32_t * pState,
        uint32_t blockSize);
# 275 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_init_f64(
        arm_fir_instance_f64 * S,
        uint16_t numTaps,
  const float64_t * pCoeffs,
        float64_t * pState,
        uint32_t blockSize);




  typedef struct
  {
          int8_t numStages;
          q15_t *pState;
    const q15_t *pCoeffs;
          int8_t postShift;
  } arm_biquad_casd_df1_inst_q15;




  typedef struct
  {
          uint32_t numStages;
          q31_t *pState;
    const q31_t *pCoeffs;
          uint8_t postShift;
  } arm_biquad_casd_df1_inst_q31;




  typedef struct
  {
          uint32_t numStages;
          float32_t *pState;
    const float32_t *pCoeffs;
  } arm_biquad_casd_df1_inst_f32;
# 331 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_q15(
  const arm_biquad_casd_df1_inst_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 345 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_init_q15(
        arm_biquad_casd_df1_inst_q15 * S,
        uint8_t numStages,
  const q15_t * pCoeffs,
        q15_t * pState,
        int8_t postShift);
# 359 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_fast_q15(
  const arm_biquad_casd_df1_inst_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 372 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_q31(
  const arm_biquad_casd_df1_inst_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 385 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_fast_q31(
  const arm_biquad_casd_df1_inst_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 399 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_init_q31(
        arm_biquad_casd_df1_inst_q31 * S,
        uint8_t numStages,
  const q31_t * pCoeffs,
        q31_t * pState,
        int8_t postShift);
# 413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_f32(
  const arm_biquad_casd_df1_inst_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 436 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df1_init_f32(
        arm_biquad_casd_df1_inst_f32 * S,
        uint8_t numStages,
  const float32_t * pCoeffs,
        float32_t * pState);
# 451 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_f32(
  const float32_t * pSrcA,
        uint32_t srcALen,
  const float32_t * pSrcB,
        uint32_t srcBLen,
        float32_t * pDst);
# 469 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 487 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst);
# 503 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_fast_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst);
# 521 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_fast_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 539 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst);
# 555 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_fast_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst);
# 573 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_opt_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_conv_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst);
# 610 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_f32(
  const float32_t * pSrcA,
        uint32_t srcALen,
  const float32_t * pSrcB,
        uint32_t srcBLen,
        float32_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);
# 633 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 656 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);
# 677 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_fast_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);
# 700 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_fast_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 723 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);
# 744 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_fast_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);
# 767 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_opt_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 790 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_conv_partial_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst,
        uint32_t firstIndex,
        uint32_t numPoints);





  typedef struct
  {
          uint8_t M;
          uint16_t numTaps;
    const q15_t *pCoeffs;
          q15_t *pState;
  } arm_fir_decimate_instance_q15;




  typedef struct
  {
          uint8_t M;
          uint16_t numTaps;
    const q31_t *pCoeffs;
          q31_t *pState;
  } arm_fir_decimate_instance_q31;




typedef struct
  {
          uint8_t M;
          uint16_t numTaps;
    const float32_t *pCoeffs;
          float32_t *pState;
  } arm_fir_decimate_instance_f32;
# 841 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_fir_decimate_f32(
  const arm_fir_decimate_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 860 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
arm_status arm_fir_decimate_init_f32(
        arm_fir_decimate_instance_f32 * S,
        uint16_t numTaps,
        uint8_t M,
  const float32_t * pCoeffs,
        float32_t * pState,
        uint32_t blockSize);
# 876 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_decimate_q15(
  const arm_fir_decimate_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 890 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_decimate_fast_q15(
  const arm_fir_decimate_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 908 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_decimate_init_q15(
        arm_fir_decimate_instance_q15 * S,
        uint16_t numTaps,
        uint8_t M,
  const q15_t * pCoeffs,
        q15_t * pState,
        uint32_t blockSize);
# 924 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_decimate_q31(
  const arm_fir_decimate_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_decimate_fast_q31(
  const arm_fir_decimate_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 955 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_decimate_init_q31(
        arm_fir_decimate_instance_q31 * S,
        uint16_t numTaps,
        uint8_t M,
  const q31_t * pCoeffs,
        q31_t * pState,
        uint32_t blockSize);





  typedef struct
  {
        uint8_t L;
        uint16_t phaseLength;
  const q15_t *pCoeffs;
        q15_t *pState;
  } arm_fir_interpolate_instance_q15;




  typedef struct
  {
        uint8_t L;
        uint16_t phaseLength;
  const q31_t *pCoeffs;
        q31_t *pState;
  } arm_fir_interpolate_instance_q31;




  typedef struct
  {
        uint8_t L;
        uint16_t phaseLength;
  const float32_t *pCoeffs;
        float32_t *pState;
  } arm_fir_interpolate_instance_f32;
# 1005 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_interpolate_q15(
  const arm_fir_interpolate_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 1023 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_interpolate_init_q15(
        arm_fir_interpolate_instance_q15 * S,
        uint8_t L,
        uint16_t numTaps,
  const q15_t * pCoeffs,
        q15_t * pState,
        uint32_t blockSize);
# 1039 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_interpolate_q31(
  const arm_fir_interpolate_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 1057 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_interpolate_init_q31(
        arm_fir_interpolate_instance_q31 * S,
        uint8_t L,
        uint16_t numTaps,
  const q31_t * pCoeffs,
        q31_t * pState,
        uint32_t blockSize);
# 1073 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_interpolate_f32(
  const arm_fir_interpolate_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 1091 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  arm_status arm_fir_interpolate_init_f32(
        arm_fir_interpolate_instance_f32 * S,
        uint8_t L,
        uint16_t numTaps,
  const float32_t * pCoeffs,
        float32_t * pState,
        uint32_t blockSize);





  typedef struct
  {
          uint8_t numStages;
          q63_t *pState;
    const q31_t *pCoeffs;
          uint8_t postShift;
  } arm_biquad_cas_df1_32x64_ins_q31;
# 1118 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cas_df1_32x64_q31(
  const arm_biquad_cas_df1_32x64_ins_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 1132 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cas_df1_32x64_init_q31(
        arm_biquad_cas_df1_32x64_ins_q31 * S,
        uint8_t numStages,
  const q31_t * pCoeffs,
        q63_t * pState,
        uint8_t postShift);





  typedef struct
  {
          uint8_t numStages;
          float32_t *pState;
    const float32_t *pCoeffs;
  } arm_biquad_cascade_df2T_instance_f32;




  typedef struct
  {
          uint8_t numStages;
          float32_t *pState;
    const float32_t *pCoeffs;
  } arm_biquad_cascade_stereo_df2T_instance_f32;




  typedef struct
  {
          uint8_t numStages;
          float64_t *pState;
    const float64_t *pCoeffs;
  } arm_biquad_cascade_df2T_instance_f64;
# 1178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df2T_f32(
  const arm_biquad_cascade_df2T_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 1192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_stereo_df2T_f32(
  const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 1206 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df2T_f64(
  const arm_biquad_cascade_df2T_instance_f64 * S,
  const float64_t * pSrc,
        float64_t * pDst,
        uint32_t blockSize);
# 1233 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df2T_init_f32(
        arm_biquad_cascade_df2T_instance_f32 * S,
        uint8_t numStages,
  const float32_t * pCoeffs,
        float32_t * pState);
# 1247 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_stereo_df2T_init_f32(
        arm_biquad_cascade_stereo_df2T_instance_f32 * S,
        uint8_t numStages,
  const float32_t * pCoeffs,
        float32_t * pState);
# 1261 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_biquad_cascade_df2T_init_f64(
        arm_biquad_cascade_df2T_instance_f64 * S,
        uint8_t numStages,
        const float64_t * pCoeffs,
        float64_t * pState);





  typedef struct
  {
          uint16_t numStages;
          q15_t *pState;
    const q15_t *pCoeffs;
  } arm_fir_lattice_instance_q15;




  typedef struct
  {
          uint16_t numStages;
          q31_t *pState;
    const q31_t *pCoeffs;
  } arm_fir_lattice_instance_q31;




  typedef struct
  {
          uint16_t numStages;
          float32_t *pState;
    const float32_t *pCoeffs;
  } arm_fir_lattice_instance_f32;
# 1306 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_init_q15(
        arm_fir_lattice_instance_q15 * S,
        uint16_t numStages,
  const q15_t * pCoeffs,
        q15_t * pState);
# 1320 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_q15(
  const arm_fir_lattice_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 1334 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_init_q31(
        arm_fir_lattice_instance_q31 * S,
        uint16_t numStages,
  const q31_t * pCoeffs,
        q31_t * pState);
# 1348 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_q31(
  const arm_fir_lattice_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 1362 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_init_f32(
        arm_fir_lattice_instance_f32 * S,
        uint16_t numStages,
  const float32_t * pCoeffs,
        float32_t * pState);
# 1376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_lattice_f32(
  const arm_fir_lattice_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);





  typedef struct
  {
          uint16_t numStages;
          q15_t *pState;
          q15_t *pkCoeffs;
          q15_t *pvCoeffs;
  } arm_iir_lattice_instance_q15;




  typedef struct
  {
          uint16_t numStages;
          q31_t *pState;
          q31_t *pkCoeffs;
          q31_t *pvCoeffs;
  } arm_iir_lattice_instance_q31;




  typedef struct
  {
          uint16_t numStages;
          float32_t *pState;
          float32_t *pkCoeffs;
          float32_t *pvCoeffs;
  } arm_iir_lattice_instance_f32;
# 1424 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_f32(
  const arm_iir_lattice_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        uint32_t blockSize);
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_init_f32(
        arm_iir_lattice_instance_f32 * S,
        uint16_t numStages,
        float32_t * pkCoeffs,
        float32_t * pvCoeffs,
        float32_t * pState,
        uint32_t blockSize);
# 1456 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_q31(
  const arm_iir_lattice_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        uint32_t blockSize);
# 1472 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_init_q31(
        arm_iir_lattice_instance_q31 * S,
        uint16_t numStages,
        q31_t * pkCoeffs,
        q31_t * pvCoeffs,
        q31_t * pState,
        uint32_t blockSize);
# 1488 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_q15(
  const arm_iir_lattice_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        uint32_t blockSize);
# 1504 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_iir_lattice_init_q15(
        arm_iir_lattice_instance_q15 * S,
        uint16_t numStages,
        q15_t * pkCoeffs,
        q15_t * pvCoeffs,
        q15_t * pState,
        uint32_t blockSize);





  typedef struct
  {
          uint16_t numTaps;
          float32_t *pState;
          float32_t *pCoeffs;
          float32_t mu;
  } arm_lms_instance_f32;
# 1534 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_f32(
  const arm_lms_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pRef,
        float32_t * pOut,
        float32_t * pErr,
        uint32_t blockSize);
# 1552 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_init_f32(
        arm_lms_instance_f32 * S,
        uint16_t numTaps,
        float32_t * pCoeffs,
        float32_t * pState,
        float32_t mu,
        uint32_t blockSize);





  typedef struct
  {
          uint16_t numTaps;
          q15_t *pState;
          q15_t *pCoeffs;
          q15_t mu;
          uint32_t postShift;
  } arm_lms_instance_q15;
# 1584 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_init_q15(
        arm_lms_instance_q15 * S,
        uint16_t numTaps,
        q15_t * pCoeffs,
        q15_t * pState,
        q15_t mu,
        uint32_t blockSize,
        uint32_t postShift);
# 1603 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_q15(
  const arm_lms_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pRef,
        q15_t * pOut,
        q15_t * pErr,
        uint32_t blockSize);





  typedef struct
  {
          uint16_t numTaps;
          q31_t *pState;
          q31_t *pCoeffs;
          q31_t mu;
          uint32_t postShift;
  } arm_lms_instance_q31;
# 1634 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_q31(
  const arm_lms_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pRef,
        q31_t * pOut,
        q31_t * pErr,
        uint32_t blockSize);
# 1653 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_init_q31(
        arm_lms_instance_q31 * S,
        uint16_t numTaps,
        q31_t * pCoeffs,
        q31_t * pState,
        q31_t mu,
        uint32_t blockSize,
        uint32_t postShift);





  typedef struct
  {
          uint16_t numTaps;
          float32_t *pState;
          float32_t *pCoeffs;
          float32_t mu;
          float32_t energy;
          float32_t x0;
  } arm_lms_norm_instance_f32;
# 1686 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_f32(
        arm_lms_norm_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pRef,
        float32_t * pOut,
        float32_t * pErr,
        uint32_t blockSize);
# 1704 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_init_f32(
        arm_lms_norm_instance_f32 * S,
        uint16_t numTaps,
        float32_t * pCoeffs,
        float32_t * pState,
        float32_t mu,
        uint32_t blockSize);





  typedef struct
  {
          uint16_t numTaps;
          q31_t *pState;
          q31_t *pCoeffs;
          q31_t mu;
          uint8_t postShift;
    const q31_t *recipTable;
          q31_t energy;
          q31_t x0;
  } arm_lms_norm_instance_q31;
# 1738 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_q31(
        arm_lms_norm_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pRef,
        q31_t * pOut,
        q31_t * pErr,
        uint32_t blockSize);
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_init_q31(
        arm_lms_norm_instance_q31 * S,
        uint16_t numTaps,
        q31_t * pCoeffs,
        q31_t * pState,
        q31_t mu,
        uint32_t blockSize,
        uint8_t postShift);





  typedef struct
  {
          uint16_t numTaps;
          q15_t *pState;
          q15_t *pCoeffs;
          q15_t mu;
          uint8_t postShift;
    const q15_t *recipTable;
          q15_t energy;
          q15_t x0;
  } arm_lms_norm_instance_q15;
# 1792 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_q15(
        arm_lms_norm_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pRef,
        q15_t * pOut,
        q15_t * pErr,
        uint32_t blockSize);
# 1811 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_lms_norm_init_q15(
        arm_lms_norm_instance_q15 * S,
        uint16_t numTaps,
        q15_t * pCoeffs,
        q15_t * pState,
        q15_t mu,
        uint32_t blockSize,
        uint8_t postShift);
# 1829 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_f32(
  const float32_t * pSrcA,
        uint32_t srcALen,
  const float32_t * pSrcB,
        uint32_t srcBLen,
        float32_t * pDst);
# 1845 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_f64(
  const float64_t * pSrcA,
        uint32_t srcALen,
  const float64_t * pSrcB,
        uint32_t srcBLen,
        float64_t * pDst);
# 1862 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_correlate_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        q15_t * pScratch);
# 1879 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst);
# 1896 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_correlate_fast_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst);
# 1913 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_correlate_fast_opt_q15(
  const q15_t * pSrcA,
        uint32_t srcALen,
  const q15_t * pSrcB,
        uint32_t srcBLen,
        q15_t * pDst,
        q15_t * pScratch);
# 1930 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst);
# 1946 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_correlate_fast_q31(
  const q31_t * pSrcA,
        uint32_t srcALen,
  const q31_t * pSrcB,
        uint32_t srcBLen,
        q31_t * pDst);
# 1964 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_opt_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst,
        q15_t * pScratch1,
        q15_t * pScratch2);
# 1982 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_correlate_q7(
  const q7_t * pSrcA,
        uint32_t srcALen,
  const q7_t * pSrcB,
        uint32_t srcBLen,
        q7_t * pDst);





  typedef struct
  {
          uint16_t numTaps;
          uint16_t stateIndex;
          float32_t *pState;
    const float32_t *pCoeffs;
          uint16_t maxDelay;
          int32_t *pTapDelay;
  } arm_fir_sparse_instance_f32;




  typedef struct
  {
          uint16_t numTaps;
          uint16_t stateIndex;
          q31_t *pState;
    const q31_t *pCoeffs;
          uint16_t maxDelay;
          int32_t *pTapDelay;
  } arm_fir_sparse_instance_q31;




  typedef struct
  {
          uint16_t numTaps;
          uint16_t stateIndex;
          q15_t *pState;
    const q15_t *pCoeffs;
          uint16_t maxDelay;
          int32_t *pTapDelay;
  } arm_fir_sparse_instance_q15;




  typedef struct
  {
          uint16_t numTaps;
          uint16_t stateIndex;
          q7_t *pState;
    const q7_t *pCoeffs;
          uint16_t maxDelay;
          int32_t *pTapDelay;
  } arm_fir_sparse_instance_q7;
# 2051 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_f32(
        arm_fir_sparse_instance_f32 * S,
  const float32_t * pSrc,
        float32_t * pDst,
        float32_t * pScratchIn,
        uint32_t blockSize);
# 2069 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_init_f32(
        arm_fir_sparse_instance_f32 * S,
        uint16_t numTaps,
  const float32_t * pCoeffs,
        float32_t * pState,
        int32_t * pTapDelay,
        uint16_t maxDelay,
        uint32_t blockSize);
# 2087 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_q31(
        arm_fir_sparse_instance_q31 * S,
  const q31_t * pSrc,
        q31_t * pDst,
        q31_t * pScratchIn,
        uint32_t blockSize);
# 2105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_init_q31(
        arm_fir_sparse_instance_q31 * S,
        uint16_t numTaps,
  const q31_t * pCoeffs,
        q31_t * pState,
        int32_t * pTapDelay,
        uint16_t maxDelay,
        uint32_t blockSize);
# 2124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_q15(
        arm_fir_sparse_instance_q15 * S,
  const q15_t * pSrc,
        q15_t * pDst,
        q15_t * pScratchIn,
        q31_t * pScratchOut,
        uint32_t blockSize);
# 2143 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_init_q15(
        arm_fir_sparse_instance_q15 * S,
        uint16_t numTaps,
  const q15_t * pCoeffs,
        q15_t * pState,
        int32_t * pTapDelay,
        uint16_t maxDelay,
        uint32_t blockSize);
# 2162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_q7(
        arm_fir_sparse_instance_q7 * S,
  const q7_t * pSrc,
        q7_t * pDst,
        q7_t * pScratchIn,
        q31_t * pScratchOut,
        uint32_t blockSize);
# 2181 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  void arm_fir_sparse_init_q7(
        arm_fir_sparse_instance_q7 * S,
        uint16_t numTaps,
  const q7_t * pCoeffs,
        q7_t * pState,
        int32_t * pTapDelay,
        uint16_t maxDelay,
        uint32_t blockSize);
# 2198 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
  __attribute__((always_inline)) static inline void arm_circularWrite_f32(
  int32_t * circBuffer,
  int32_t L,
  uint16_t * writeOffset,
  int32_t bufferInc,
  const int32_t * src,
  int32_t srcInc,
  uint32_t blockSize)
  {
    uint32_t i = 0U;
    int32_t wOffset;



    wOffset = *writeOffset;


    i = blockSize;

    while (i > 0U)
    {

      circBuffer[wOffset] = *src;


      src += srcInc;


      wOffset += bufferInc;
      if (wOffset >= L)
        wOffset -= L;


      i--;
    }


    *writeOffset = (uint16_t)wOffset;
  }






  __attribute__((always_inline)) static inline void arm_circularRead_f32(
  int32_t * circBuffer,
  int32_t L,
  int32_t * readOffset,
  int32_t bufferInc,
  int32_t * dst,
  int32_t * dst_base,
  int32_t dst_length,
  int32_t dstInc,
  uint32_t blockSize)
  {
    uint32_t i = 0U;
    int32_t rOffset;
    int32_t* dst_end;



    rOffset = *readOffset;
    dst_end = dst_base + dst_length;


    i = blockSize;

    while (i > 0U)
    {

      *dst = circBuffer[rOffset];


      dst += dstInc;

      if (dst == dst_end)
      {
        dst = dst_base;
      }


      rOffset += bufferInc;

      if (rOffset >= L)
      {
        rOffset -= L;
      }


      i--;
    }


    *readOffset = rOffset;
  }





  __attribute__((always_inline)) static inline void arm_circularWrite_q15(
  q15_t * circBuffer,
  int32_t L,
  uint16_t * writeOffset,
  int32_t bufferInc,
  const q15_t * src,
  int32_t srcInc,
  uint32_t blockSize)
  {
    uint32_t i = 0U;
    int32_t wOffset;



    wOffset = *writeOffset;


    i = blockSize;

    while (i > 0U)
    {

      circBuffer[wOffset] = *src;


      src += srcInc;


      wOffset += bufferInc;
      if (wOffset >= L)
        wOffset -= L;


      i--;
    }


    *writeOffset = (uint16_t)wOffset;
  }





  __attribute__((always_inline)) static inline void arm_circularRead_q15(
  q15_t * circBuffer,
  int32_t L,
  int32_t * readOffset,
  int32_t bufferInc,
  q15_t * dst,
  q15_t * dst_base,
  int32_t dst_length,
  int32_t dstInc,
  uint32_t blockSize)
  {
    uint32_t i = 0;
    int32_t rOffset;
    q15_t* dst_end;



    rOffset = *readOffset;

    dst_end = dst_base + dst_length;


    i = blockSize;

    while (i > 0U)
    {

      *dst = circBuffer[rOffset];


      dst += dstInc;

      if (dst == dst_end)
      {
        dst = dst_base;
      }


      rOffset += bufferInc;

      if (rOffset >= L)
      {
        rOffset -= L;
      }


      i--;
    }


    *readOffset = rOffset;
  }





  __attribute__((always_inline)) static inline void arm_circularWrite_q7(
  q7_t * circBuffer,
  int32_t L,
  uint16_t * writeOffset,
  int32_t bufferInc,
  const q7_t * src,
  int32_t srcInc,
  uint32_t blockSize)
  {
    uint32_t i = 0U;
    int32_t wOffset;



    wOffset = *writeOffset;


    i = blockSize;

    while (i > 0U)
    {

      circBuffer[wOffset] = *src;


      src += srcInc;


      wOffset += bufferInc;
      if (wOffset >= L)
        wOffset -= L;


      i--;
    }


    *writeOffset = (uint16_t)wOffset;
  }





  __attribute__((always_inline)) static inline void arm_circularRead_q7(
  q7_t * circBuffer,
  int32_t L,
  int32_t * readOffset,
  int32_t bufferInc,
  q7_t * dst,
  q7_t * dst_base,
  int32_t dst_length,
  int32_t dstInc,
  uint32_t blockSize)
  {
    uint32_t i = 0;
    int32_t rOffset;
    q7_t* dst_end;



    rOffset = *readOffset;

    dst_end = dst_base + dst_length;


    i = blockSize;

    while (i > 0U)
    {

      *dst = circBuffer[rOffset];


      dst += dstInc;

      if (dst == dst_end)
      {
        dst = dst_base;
      }


      rOffset += bufferInc;

      if (rOffset >= L)
      {
        rOffset -= L;
      }


      i--;
    }


    *readOffset = rOffset;
  }
# 2506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_levinson_durbin_f32(const float32_t *phi,
  float32_t *a,
  float32_t *err,
  int nbCoefs);
# 2520 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/filtering_functions.h"
void arm_levinson_durbin_q31(const q31_t *phi,
  q31_t *a,
  q31_t *err,
  int nbCoefs);
# 207 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h" 1
# 60 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_norm_f32(const float32_t *pInputQuaternions,
    float32_t *pNorms,
    uint32_t nbQuaternions);
# 73 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_inverse_f32(const float32_t *pInputQuaternions,
    float32_t *pInverseQuaternions,
    uint32_t nbQuaternions);
# 84 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_conjugate_f32(const float32_t *inputQuaternions,
    float32_t *pConjugateQuaternions,
    uint32_t nbQuaternions);
# 95 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_normalize_f32(const float32_t *inputQuaternions,
    float32_t *pNormalizedQuaternions,
    uint32_t nbQuaternions);
# 107 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_product_single_f32(const float32_t *qa,
    const float32_t *qb,
    float32_t *r);
# 119 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion_product_f32(const float32_t *qa,
    const float32_t *qb,
    float32_t *r,
    uint32_t nbQuaternions);
# 140 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_quaternion2rotation_f32(const float32_t *pInputQuaternions,
    float32_t *pOutputRotations,
    uint32_t nbQuaternions);
# 151 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/dsp/quaternion_math_functions.h"
void arm_rotation2quaternion_f32(const float32_t *pInputRotations,
    float32_t *pOutputQuaternions,
    uint32_t nbQuaternions);
# 208 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/arm_math.h" 2
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 1 3 4
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h" 2
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 1 3
# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3

# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3
void __assert (const char *, int, const char *)
     __attribute__ ((__noreturn__));
void __assert_func (const char *, int, const char *, const char *)
     __attribute__ ((__noreturn__));
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h" 2


# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpconfig.h" 1
# 89 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpconfig.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/ports/mimxrt/omv_mpconfigport.h" 1
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/ports/mimxrt/omv_mpconfigport.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/boards/LUCIDCODE_INSPEC/mpconfigboard.h" 1
# 16 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/boards/LUCIDCODE_INSPEC/mpconfigboard.h"

# 16 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/boards/LUCIDCODE_INSPEC/mpconfigboard.h"
extern void mimxrt_hal_bootloader(void);
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 1
# 12 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h"
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 1 3
# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3

# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3
void __assert (const char *, int, const char *)
     __attribute__ ((__noreturn__));
void __assert_func (const char *, int, const char *, const char *)
     __attribute__ ((__noreturn__));
# 13 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 2



# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 1 3
# 10 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/ieeefp.h" 1 3
# 11 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 2 3





# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 17 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 2 3



# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/machine/stdlib.h" 1 3
# 21 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 2 3

# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/alloca.h" 1 3
# 23 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 2 3
# 33 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3


typedef struct
{
  int quot;
  int rem;
} div_t;

typedef struct
{
  long quot;
  long rem;
} ldiv_t;


typedef struct
{
  long long int quot;
  long long int rem;
} lldiv_t;




typedef int (*__compar_fn_t) (const void *, const void *);







int __locale_mb_cur_max (void);



void abort (void) __attribute__ ((__noreturn__));
int abs (int);

__uint32_t arc4random (void);
__uint32_t arc4random_uniform (__uint32_t);
void arc4random_buf (void *, size_t);

int atexit (void (*__func)(void));
double atof (const char *__nptr);

float atoff (const char *__nptr);

int atoi (const char *__nptr);
int _atoi_r (struct _reent *, const char *__nptr);
long atol (const char *__nptr);
long _atol_r (struct _reent *, const char *__nptr);
void * bsearch (const void *__key,
         const void *__base,
         size_t __nmemb,
         size_t __size,
         __compar_fn_t _compar);
void *calloc(size_t, size_t) __attribute__((__malloc__)) __attribute__((__warn_unused_result__))
      __attribute__((__alloc_size__(1, 2))) ;
div_t div (int __numer, int __denom);
void exit (int __status) __attribute__ ((__noreturn__));
void free (void *) ;
char * getenv (const char *__string);
char * _getenv_r (struct _reent *, const char *__string);



char * _findenv (const char *, int *);
char * _findenv_r (struct _reent *, const char *, int *);

extern char *suboptarg;
int getsubopt (char **, char * const *, char **);

long labs (long);
ldiv_t ldiv (long __numer, long __denom);
void *malloc(size_t) __attribute__((__malloc__)) __attribute__((__warn_unused_result__)) __attribute__((__alloc_size__(1))) ;
int mblen (const char *, size_t);
int _mblen_r (struct _reent *, const char *, size_t, _mbstate_t *);
int mbtowc (wchar_t *restrict, const char *restrict, size_t);
int _mbtowc_r (struct _reent *, wchar_t *restrict, const char *restrict, size_t, _mbstate_t *);
int wctomb (char *, wchar_t);
int _wctomb_r (struct _reent *, char *, wchar_t, _mbstate_t *);
size_t mbstowcs (wchar_t *restrict, const char *restrict, size_t);
size_t _mbstowcs_r (struct _reent *, wchar_t *restrict, const char *restrict, size_t, _mbstate_t *);
size_t wcstombs (char *restrict, const wchar_t *restrict, size_t);
size_t _wcstombs_r (struct _reent *, char *restrict, const wchar_t *restrict, size_t, _mbstate_t *);


char * mkdtemp (char *);






int mkstemp (char *);


int mkstemps (char *, int);


char * mktemp (char *) __attribute__ ((__deprecated__("the use of `mktemp' is dangerous; use `mkstemp' instead")));


char * _mkdtemp_r (struct _reent *, char *);
int _mkostemp_r (struct _reent *, char *, int);
int _mkostemps_r (struct _reent *, char *, int, int);
int _mkstemp_r (struct _reent *, char *);
int _mkstemps_r (struct _reent *, char *, int);
char * _mktemp_r (struct _reent *, char *) __attribute__ ((__deprecated__("the use of `mktemp' is dangerous; use `mkstemp' instead")));
void qsort (void *__base, size_t __nmemb, size_t __size, __compar_fn_t _compar);
int rand (void);
void *realloc(void *, size_t) __attribute__((__warn_unused_result__)) __attribute__((__alloc_size__(2))) ;

void *reallocarray(void *, size_t, size_t) __attribute__((__warn_unused_result__)) __attribute__((__alloc_size__(2, 3)));
void *reallocf(void *, size_t) __attribute__((__warn_unused_result__)) __attribute__((__alloc_size__(2)));


char * realpath (const char *restrict path, char *restrict resolved_path);


int rpmatch (const char *response);




void srand (unsigned __seed);
double strtod (const char *restrict __n, char **restrict __end_PTR);
double _strtod_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR);

float strtof (const char *restrict __n, char **restrict __end_PTR);







long strtol (const char *restrict __n, char **restrict __end_PTR, int __base);
long _strtol_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR, int __base);
unsigned long strtoul (const char *restrict __n, char **restrict __end_PTR, int __base);
unsigned long _strtoul_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR, int __base);
# 191 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3
int system (const char *__string);


long a64l (const char *__input);
char * l64a (long __input);
char * _l64a_r (struct _reent *,long __input);


int on_exit (void (*__func)(int, void *),void *__arg);


void _Exit (int __status) __attribute__ ((__noreturn__));


int putenv (char *__string);

int _putenv_r (struct _reent *, char *__string);
void * _reallocf_r (struct _reent *, void *, size_t);

int setenv (const char *__string, const char *__value, int __overwrite);

int _setenv_r (struct _reent *, const char *__string, const char *__value, int __overwrite);
# 224 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3
char * __itoa (int, char *, int);
char * __utoa (unsigned, char *, int);

char * itoa (int, char *, int);
char * utoa (unsigned, char *, int);


int rand_r (unsigned *__seed);



double drand48 (void);
double _drand48_r (struct _reent *);
double erand48 (unsigned short [3]);
double _erand48_r (struct _reent *, unsigned short [3]);
long jrand48 (unsigned short [3]);
long _jrand48_r (struct _reent *, unsigned short [3]);
void lcong48 (unsigned short [7]);
void _lcong48_r (struct _reent *, unsigned short [7]);
long lrand48 (void);
long _lrand48_r (struct _reent *);
long mrand48 (void);
long _mrand48_r (struct _reent *);
long nrand48 (unsigned short [3]);
long _nrand48_r (struct _reent *, unsigned short [3]);
unsigned short *
       seed48 (unsigned short [3]);
unsigned short *
       _seed48_r (struct _reent *, unsigned short [3]);
void srand48 (long);
void _srand48_r (struct _reent *, long);


char * initstate (unsigned, char *, size_t);
long random (void);
char * setstate (char *);
void srandom (unsigned);


long long atoll (const char *__nptr);

long long _atoll_r (struct _reent *, const char *__nptr);

long long llabs (long long);
lldiv_t lldiv (long long __numer, long long __denom);
long long strtoll (const char *restrict __n, char **restrict __end_PTR, int __base);

long long _strtoll_r (struct _reent *, const char *restrict __n, char **restrict __end_PTR, int __base);

unsigned long long strtoull (const char *restrict __n, char **restrict __end_PTR, int __base);

unsigned long long _strtoull_r (struct _reent *, const char *restrict __n, char **restrict __end_PTR, int __base);



void cfree (void *);


int unsetenv (const char *__string);

int _unsetenv_r (struct _reent *, const char *__string);



int posix_memalign (void **, size_t, size_t) __attribute__((__nonnull__ (1)))
     __attribute__((__warn_unused_result__));


char * _dtoa_r (struct _reent *, double, int, int, int *, int*, char**);

void * _malloc_r (struct _reent *, size_t) ;
void * _calloc_r (struct _reent *, size_t, size_t) ;
void _free_r (struct _reent *, void *) ;
void * _realloc_r (struct _reent *, void *, size_t) ;
void _mstats_r (struct _reent *, char *);

int _system_r (struct _reent *, const char *);

void __eprintf (const char *, const char *, unsigned int, const char *);
# 312 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3
void qsort_r (void *__base, size_t __nmemb, size_t __size, void *__thunk, int (*_compar)(void *, const void *, const void *))
             __asm__ ("" "__bsd_qsort_r");
# 322 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3
extern long double _strtold_r (struct _reent *, const char *restrict, char **restrict);

extern long double strtold (const char *restrict, char **restrict);
# 339 "/home/mcoder/cache/gcc/arm-none-eabi/include/stdlib.h" 3

# 17 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 2


# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 20 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 2


# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_device_registers.h" 1
# 26 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_device_registers.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h" 1
# 84 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"

# 84 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef enum IRQn {

  NotAvail_IRQn = -128,


  NonMaskableInt_IRQn = -14,
  HardFault_IRQn = -13,
  MemoryManagement_IRQn = -12,
  BusFault_IRQn = -11,
  UsageFault_IRQn = -10,
  SVCall_IRQn = -5,
  DebugMonitor_IRQn = -4,
  PendSV_IRQn = -2,
  SysTick_IRQn = -1,


  DMA0_DMA16_IRQn = 0,
  DMA1_DMA17_IRQn = 1,
  DMA2_DMA18_IRQn = 2,
  DMA3_DMA19_IRQn = 3,
  DMA4_DMA20_IRQn = 4,
  DMA5_DMA21_IRQn = 5,
  DMA6_DMA22_IRQn = 6,
  DMA7_DMA23_IRQn = 7,
  DMA8_DMA24_IRQn = 8,
  DMA9_DMA25_IRQn = 9,
  DMA10_DMA26_IRQn = 10,
  DMA11_DMA27_IRQn = 11,
  DMA12_DMA28_IRQn = 12,
  DMA13_DMA29_IRQn = 13,
  DMA14_DMA30_IRQn = 14,
  DMA15_DMA31_IRQn = 15,
  DMA_ERROR_IRQn = 16,
  CTI0_ERROR_IRQn = 17,
  CTI1_ERROR_IRQn = 18,
  CORE_IRQn = 19,
  LPUART1_IRQn = 20,
  LPUART2_IRQn = 21,
  LPUART3_IRQn = 22,
  LPUART4_IRQn = 23,
  LPUART5_IRQn = 24,
  LPUART6_IRQn = 25,
  LPUART7_IRQn = 26,
  LPUART8_IRQn = 27,
  LPI2C1_IRQn = 28,
  LPI2C2_IRQn = 29,
  LPI2C3_IRQn = 30,
  LPI2C4_IRQn = 31,
  LPSPI1_IRQn = 32,
  LPSPI2_IRQn = 33,
  LPSPI3_IRQn = 34,
  LPSPI4_IRQn = 35,
  CAN1_IRQn = 36,
  CAN2_IRQn = 37,
  FLEXRAM_IRQn = 38,
  KPP_IRQn = 39,
  TSC_DIG_IRQn = 40,
  GPR_IRQ_IRQn = 41,
  LCDIF_IRQn = 42,
  CSI_IRQn = 43,
  PXP_IRQn = 44,
  WDOG2_IRQn = 45,
  SNVS_HP_WRAPPER_IRQn = 46,
  SNVS_HP_WRAPPER_TZ_IRQn = 47,
  SNVS_LP_WRAPPER_IRQn = 48,
  CSU_IRQn = 49,
  DCP_IRQn = 50,
  DCP_VMI_IRQn = 51,
  Reserved68_IRQn = 52,
  TRNG_IRQn = 53,
  SJC_IRQn = 54,
  BEE_IRQn = 55,
  SAI1_IRQn = 56,
  SAI2_IRQn = 57,
  SAI3_RX_IRQn = 58,
  SAI3_TX_IRQn = 59,
  SPDIF_IRQn = 60,
  PMU_EVENT_IRQn = 61,
  Reserved78_IRQn = 62,
  TEMP_LOW_HIGH_IRQn = 63,
  TEMP_PANIC_IRQn = 64,
  USB_PHY1_IRQn = 65,
  USB_PHY2_IRQn = 66,
  ADC1_IRQn = 67,
  ADC2_IRQn = 68,
  DCDC_IRQn = 69,
  Reserved86_IRQn = 70,
  GPIO10_Combined_0_31_IRQn = 71,
  GPIO1_INT0_IRQn = 72,
  GPIO1_INT1_IRQn = 73,
  GPIO1_INT2_IRQn = 74,
  GPIO1_INT3_IRQn = 75,
  GPIO1_INT4_IRQn = 76,
  GPIO1_INT5_IRQn = 77,
  GPIO1_INT6_IRQn = 78,
  GPIO1_INT7_IRQn = 79,
  GPIO1_Combined_0_15_IRQn = 80,
  GPIO1_Combined_16_31_IRQn = 81,
  GPIO2_Combined_0_15_IRQn = 82,
  GPIO2_Combined_16_31_IRQn = 83,
  GPIO3_Combined_0_15_IRQn = 84,
  GPIO3_Combined_16_31_IRQn = 85,
  GPIO4_Combined_0_15_IRQn = 86,
  GPIO4_Combined_16_31_IRQn = 87,
  GPIO5_Combined_0_15_IRQn = 88,
  GPIO5_Combined_16_31_IRQn = 89,
  FLEXIO1_IRQn = 90,
  FLEXIO2_IRQn = 91,
  WDOG1_IRQn = 92,
  RTWDOG_IRQn = 93,
  EWM_IRQn = 94,
  CCM_1_IRQn = 95,
  CCM_2_IRQn = 96,
  GPC_IRQn = 97,
  SRC_IRQn = 98,
  Reserved115_IRQn = 99,
  GPT1_IRQn = 100,
  GPT2_IRQn = 101,
  PWM1_0_IRQn = 102,
  PWM1_1_IRQn = 103,
  PWM1_2_IRQn = 104,
  PWM1_3_IRQn = 105,
  PWM1_FAULT_IRQn = 106,
  FLEXSPI2_IRQn = 107,
  FLEXSPI_IRQn = 108,
  SEMC_IRQn = 109,
  USDHC1_IRQn = 110,
  USDHC2_IRQn = 111,
  USB_OTG2_IRQn = 112,
  USB_OTG1_IRQn = 113,
  ENET_IRQn = 114,
  ENET_1588_Timer_IRQn = 115,
  XBAR1_IRQ_0_1_IRQn = 116,
  XBAR1_IRQ_2_3_IRQn = 117,
  ADC_ETC_IRQ0_IRQn = 118,
  ADC_ETC_IRQ1_IRQn = 119,
  ADC_ETC_IRQ2_IRQn = 120,
  ADC_ETC_ERROR_IRQ_IRQn = 121,
  PIT_IRQn = 122,
  ACMP1_IRQn = 123,
  ACMP2_IRQn = 124,
  ACMP3_IRQn = 125,
  ACMP4_IRQn = 126,
  Reserved143_IRQn = 127,
  Reserved144_IRQn = 128,
  ENC1_IRQn = 129,
  ENC2_IRQn = 130,
  ENC3_IRQn = 131,
  ENC4_IRQn = 132,
  TMR1_IRQn = 133,
  TMR2_IRQn = 134,
  TMR3_IRQn = 135,
  TMR4_IRQn = 136,
  PWM2_0_IRQn = 137,
  PWM2_1_IRQn = 138,
  PWM2_2_IRQn = 139,
  PWM2_3_IRQn = 140,
  PWM2_FAULT_IRQn = 141,
  PWM3_0_IRQn = 142,
  PWM3_1_IRQn = 143,
  PWM3_2_IRQn = 144,
  PWM3_3_IRQn = 145,
  PWM3_FAULT_IRQn = 146,
  PWM4_0_IRQn = 147,
  PWM4_1_IRQn = 148,
  PWM4_2_IRQn = 149,
  PWM4_3_IRQn = 150,
  PWM4_FAULT_IRQn = 151,
  ENET2_IRQn = 152,
  ENET2_1588_Timer_IRQn = 153,
  CAN3_IRQn = 154,
  Reserved171_IRQn = 155,
  FLEXIO3_IRQn = 156,
  GPIO6_7_8_9_IRQn = 157
} IRQn_Type;
# 282 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h" 1
# 63 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_version.h" 1
# 64 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h" 2
# 279 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef union
{
  struct
  {
    uint32_t _reserved0:16;
    uint32_t GE:4;
    uint32_t _reserved1:7;
    uint32_t Q:1;
    uint32_t V:1;
    uint32_t C:1;
    uint32_t Z:1;
    uint32_t N:1;
  } b;
  uint32_t w;
} APSR_Type;
# 318 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef union
{
  struct
  {
    uint32_t ISR:9;
    uint32_t _reserved0:23;
  } b;
  uint32_t w;
} IPSR_Type;
# 336 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef union
{
  struct
  {
    uint32_t ISR:9;
    uint32_t _reserved0:1;
    uint32_t ICI_IT_1:6;
    uint32_t GE:4;
    uint32_t _reserved1:4;
    uint32_t T:1;
    uint32_t ICI_IT_2:2;
    uint32_t Q:1;
    uint32_t V:1;
    uint32_t C:1;
    uint32_t Z:1;
    uint32_t N:1;
  } b;
  uint32_t w;
} xPSR_Type;
# 391 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef union
{
  struct
  {
    uint32_t nPRIV:1;
    uint32_t SPSEL:1;
    uint32_t FPCA:1;
    uint32_t _reserved0:29;
  } b;
  uint32_t w;
} CONTROL_Type;
# 426 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile uint32_t ISER[8U];
        uint32_t RESERVED0[24U];
  volatile uint32_t ICER[8U];
        uint32_t RESERVED1[24U];
  volatile uint32_t ISPR[8U];
        uint32_t RESERVED2[24U];
  volatile uint32_t ICPR[8U];
        uint32_t RESERVED3[24U];
  volatile uint32_t IABR[8U];
        uint32_t RESERVED4[56U];
  volatile uint8_t IP[240U];
        uint32_t RESERVED5[644U];
  volatile uint32_t STIR;
} NVIC_Type;
# 460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile const uint32_t CPUID;
  volatile uint32_t ICSR;
  volatile uint32_t VTOR;
  volatile uint32_t AIRCR;
  volatile uint32_t SCR;
  volatile uint32_t CCR;
  volatile uint8_t SHPR[12U];
  volatile uint32_t SHCSR;
  volatile uint32_t CFSR;
  volatile uint32_t HFSR;
  volatile uint32_t DFSR;
  volatile uint32_t MMFAR;
  volatile uint32_t BFAR;
  volatile uint32_t AFSR;
  volatile const uint32_t ID_PFR[2U];
  volatile const uint32_t ID_DFR;
  volatile const uint32_t ID_AFR;
  volatile const uint32_t ID_MFR[4U];
  volatile const uint32_t ID_ISAR[5U];
        uint32_t RESERVED0[1U];
  volatile const uint32_t CLIDR;
  volatile const uint32_t CTR;
  volatile const uint32_t CCSIDR;
  volatile uint32_t CSSELR;
  volatile uint32_t CPACR;
        uint32_t RESERVED3[93U];
  volatile uint32_t STIR;
        uint32_t RESERVED4[15U];
  volatile const uint32_t MVFR0;
  volatile const uint32_t MVFR1;
  volatile const uint32_t MVFR2;
        uint32_t RESERVED5[1U];
  volatile uint32_t ICIALLU;
        uint32_t RESERVED6[1U];
  volatile uint32_t ICIMVAU;
  volatile uint32_t DCIMVAC;
  volatile uint32_t DCISW;
  volatile uint32_t DCCMVAU;
  volatile uint32_t DCCMVAC;
  volatile uint32_t DCCSW;
  volatile uint32_t DCCIMVAC;
  volatile uint32_t DCCISW;
  volatile uint32_t BPIALL;
        uint32_t RESERVED7[5U];
  volatile uint32_t ITCMCR;
  volatile uint32_t DTCMCR;
  volatile uint32_t AHBPCR;
  volatile uint32_t CACR;
  volatile uint32_t AHBSCR;
        uint32_t RESERVED8[1U];
  volatile uint32_t ABFSR;
} SCB_Type;
# 930 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
        uint32_t RESERVED0[1U];
  volatile const uint32_t ICTR;
  volatile uint32_t ACTLR;
} SCnSCB_Type;
# 988 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile uint32_t CTRL;
  volatile uint32_t LOAD;
  volatile uint32_t VAL;
  volatile const uint32_t CALIB;
} SysTick_Type;
# 1040 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile union
  {
    volatile uint8_t u8;
    volatile uint16_t u16;
    volatile uint32_t u32;
  } PORT [32U];
        uint32_t RESERVED0[864U];
  volatile uint32_t TER;
        uint32_t RESERVED1[15U];
  volatile uint32_t TPR;
        uint32_t RESERVED2[15U];
  volatile uint32_t TCR;
        uint32_t RESERVED3[32U];
        uint32_t RESERVED4[43U];
  volatile uint32_t LAR;
  volatile const uint32_t LSR;
        uint32_t RESERVED5[6U];
  volatile const uint32_t PID4;
  volatile const uint32_t PID5;
  volatile const uint32_t PID6;
  volatile const uint32_t PID7;
  volatile const uint32_t PID0;
  volatile const uint32_t PID1;
  volatile const uint32_t PID2;
  volatile const uint32_t PID3;
  volatile const uint32_t CID0;
  volatile const uint32_t CID1;
  volatile const uint32_t CID2;
  volatile const uint32_t CID3;
} ITM_Type;
# 1128 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile uint32_t CTRL;
  volatile uint32_t CYCCNT;
  volatile uint32_t CPICNT;
  volatile uint32_t EXCCNT;
  volatile uint32_t SLEEPCNT;
  volatile uint32_t LSUCNT;
  volatile uint32_t FOLDCNT;
  volatile const uint32_t PCSR;
  volatile uint32_t COMP0;
  volatile uint32_t MASK0;
  volatile uint32_t FUNCTION0;
        uint32_t RESERVED0[1U];
  volatile uint32_t COMP1;
  volatile uint32_t MASK1;
  volatile uint32_t FUNCTION1;
        uint32_t RESERVED1[1U];
  volatile uint32_t COMP2;
  volatile uint32_t MASK2;
  volatile uint32_t FUNCTION2;
        uint32_t RESERVED2[1U];
  volatile uint32_t COMP3;
  volatile uint32_t MASK3;
  volatile uint32_t FUNCTION3;
        uint32_t RESERVED3[981U];
  volatile uint32_t LAR;
  volatile const uint32_t LSR;
} DWT_Type;
# 1278 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile const uint32_t SSPSR;
  volatile uint32_t CSPSR;
        uint32_t RESERVED0[2U];
  volatile uint32_t ACPR;
        uint32_t RESERVED1[55U];
  volatile uint32_t SPPR;
        uint32_t RESERVED2[131U];
  volatile const uint32_t FFSR;
  volatile uint32_t FFCR;
  volatile const uint32_t FSCR;
        uint32_t RESERVED3[759U];
  volatile const uint32_t TRIGGER;
  volatile const uint32_t FIFO0;
  volatile const uint32_t ITATBCTR2;
        uint32_t RESERVED4[1U];
  volatile const uint32_t ITATBCTR0;
  volatile const uint32_t FIFO1;
  volatile uint32_t ITCTRL;
        uint32_t RESERVED5[39U];
  volatile uint32_t CLAIMSET;
  volatile uint32_t CLAIMCLR;
        uint32_t RESERVED7[8U];
  volatile const uint32_t DEVID;
  volatile const uint32_t DEVTYPE;
} TPI_Type;
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile const uint32_t TYPE;
  volatile uint32_t CTRL;
  volatile uint32_t RNR;
  volatile uint32_t RBAR;
  volatile uint32_t RASR;
  volatile uint32_t RBAR_A1;
  volatile uint32_t RASR_A1;
  volatile uint32_t RBAR_A2;
  volatile uint32_t RASR_A2;
  volatile uint32_t RBAR_A3;
  volatile uint32_t RASR_A3;
} MPU_Type;
# 1536 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
        uint32_t RESERVED0[1U];
  volatile uint32_t FPCCR;
  volatile uint32_t FPCAR;
  volatile uint32_t FPDSCR;
  volatile const uint32_t MVFR0;
  volatile const uint32_t MVFR1;
  volatile const uint32_t MVFR2;
} FPU_Type;
# 1648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
typedef struct
{
  volatile uint32_t DHCSR;
  volatile uint32_t DCRSR;
  volatile uint32_t DCRDR;
  volatile uint32_t DEMCR;
} CoreDebug_Type;
# 1880 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);

  reg_value = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR;
  reg_value &= ~((uint32_t)((0xFFFFUL << 16U) | (7UL << 8U)));
  reg_value = (reg_value |
                ((uint32_t)0x5FAUL << 16U) |
                (PriorityGroupTmp << 8U) );
  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR = reg_value;
}







static inline uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR & (7UL << 8U)) >> 8U));
}
# 1911 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __asm volatile("":::"memory");
    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    __asm volatile("":::"memory");
  }
}
# 1930 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    return((uint32_t)(((((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
  }
  else
  {
    return(0U);
  }
}
# 1949 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    __DSB();
    __ISB();
  }
}
# 1968 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    return((uint32_t)(((((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
  }
  else
  {
    return(0U);
  }
}
# 1987 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  }
}
# 2002 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  }
}
# 2019 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t __NVIC_GetActive(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    return((uint32_t)(((((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
  }
  else
  {
    return(0U);
  }
}
# 2041 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    ((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IP[((uint32_t)IRQn)] = (uint8_t)((priority << (8U - 4)) & (uint32_t)0xFFUL);
  }
  else
  {
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - 4)) & (uint32_t)0xFFUL);
  }
}
# 2063 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
{

  if ((int32_t)(IRQn) >= 0)
  {
    return(((uint32_t)((NVIC_Type *) ((0xE000E000UL) + 0x0100UL) )->IP[((uint32_t)IRQn)] >> (8U - 4)));
  }
  else
  {
    return(((uint32_t)((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - 4)));
  }
}
# 2088 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(4)) ? (uint32_t)(4) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(4)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(4));

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority & (uint32_t)((1UL << (SubPriorityBits )) - 1UL)))
         );
}
# 2115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* const pPreemptPriority, uint32_t* const pSubPriority)
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(4)) ? (uint32_t)(4) : (uint32_t)(7UL - PriorityGroupTmp);
  SubPriorityBits = ((PriorityGroupTmp + (uint32_t)(4)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(4));

  *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL);
  *pSubPriority = (Priority ) & (uint32_t)((1UL << (SubPriorityBits )) - 1UL);
}
# 2138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
{
  uint32_t *vectors = (uint32_t *)((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->VTOR;
  vectors[(int32_t)IRQn + 16] = vector;
  __DSB();
}
# 2154 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t __NVIC_GetVector(IRQn_Type IRQn)
{
  uint32_t *vectors = (uint32_t *)((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->VTOR;
  return vectors[(int32_t)IRQn + 16];
}






__attribute__((__noreturn__)) static inline void __NVIC_SystemReset(void)
{
  __DSB();

  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR = (uint32_t)((0x5FAUL << 16U) |
                           (((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->AIRCR & (7UL << 8U)) |
                            (1UL << 2U) );
  __DSB();

  for(;;)
  {
    __asm volatile ("nop");
  }
}
# 2187 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mpu_armv7.h" 1
# 183 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mpu_armv7.h"
typedef struct {
  uint32_t RBAR;
  uint32_t RASR;
} ARM_MPU_Region_t;




static inline void ARM_MPU_Enable(uint32_t MPU_Control)
{
  __DMB();
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->CTRL = MPU_Control | (1UL );

  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHCSR |= (1UL << 16U);

  __DSB();
  __ISB();
}



static inline void ARM_MPU_Disable(void)
{
  __DMB();

  ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->SHCSR &= ~(1UL << 16U);

  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->CTRL &= ~(1UL );
  __DSB();
  __ISB();
}




static inline void ARM_MPU_ClrRegion(uint32_t rnr)
{
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RNR = rnr;
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RASR = 0U;
}





static inline void ARM_MPU_SetRegion(uint32_t rbar, uint32_t rasr)
{
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RBAR = rbar;
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RASR = rasr;
}






static inline void ARM_MPU_SetRegionEx(uint32_t rnr, uint32_t rbar, uint32_t rasr)
{
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RNR = rnr;
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RBAR = rbar;
  ((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RASR = rasr;
}






static inline void ARM_MPU_OrderedMemcpy(volatile uint32_t* dst, const uint32_t* 
# 251 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mpu_armv7.h" 3
                                                                                  restrict 
# 251 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mpu_armv7.h"
                                                                                             src, uint32_t len)
{
  uint32_t i;
  for (i = 0U; i < len; ++i)
  {
    dst[i] = src[i];
  }
}





static inline void ARM_MPU_Load(ARM_MPU_Region_t const* table, uint32_t cnt)
{
  const uint32_t rowWordSize = sizeof(ARM_MPU_Region_t)/4U;
  while (cnt > 4U) {
    ARM_MPU_OrderedMemcpy(&(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RBAR), &(table->RBAR), 4U*rowWordSize);
    table += 4U;
    cnt -= 4U;
  }
  ARM_MPU_OrderedMemcpy(&(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->RBAR), &(table->RBAR), cnt*rowWordSize);
}
# 2188 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h" 2
# 2208 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t SCB_GetFPUType(void)
{
  uint32_t mvfr0;

  mvfr0 = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->MVFR0;
  if ((mvfr0 & ((0xFUL << 4U) | (0xFUL << 8U))) == 0x220U)
  {
    return 2U;
  }
  else if ((mvfr0 & ((0xFUL << 4U) | (0xFUL << 8U))) == 0x020U)
  {
    return 1U;
  }
  else
  {
    return 0U;
  }
}
# 2234 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h" 1
# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h"
__attribute__((always_inline)) static inline void SCB_EnableICache (void)
{

    if (((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR & (1UL << 17U)) return;

    __DSB();
    __ISB();
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->ICIALLU = 0UL;
    __DSB();
    __ISB();
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR |= (uint32_t)(1UL << 17U);
    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_DisableICache (void)
{

    __DSB();
    __ISB();
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR &= ~(uint32_t)(1UL << 17U);
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->ICIALLU = 0UL;
    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_InvalidateICache (void)
{

    __DSB();
    __ISB();
    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->ICIALLU = 0UL;
    __DSB();
    __ISB();

}
# 115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h"
__attribute__((always_inline)) static inline void SCB_InvalidateICache_by_Addr (volatile void *addr, int32_t isize)
{

    if ( isize > 0 ) {
       int32_t op_size = isize + (((uint32_t)addr) & (32U - 1U));
      uint32_t op_addr = (uint32_t)addr ;

      __DSB();

      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->ICIMVAU = op_addr;
        op_addr += 32U;
        op_size -= 32U;
      } while ( op_size > 0 );

      __DSB();
      __ISB();
    }

}






__attribute__((always_inline)) static inline void SCB_EnableDCache (void)
{

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR & (1UL << 16U)) return;

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CSSELR = 0U;
    __DSB();

    ccsidr = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCSIDR;


    sets = (uint32_t)((((ccsidr) & (0x7FFFUL << 13U) ) >> 13U ));
    do {
      ways = (uint32_t)((((ccsidr) & (0x3FFUL << 3U)) >> 3U));
      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCISW = (((sets << 5U) & (0x1FFUL << 5U)) |
                      ((ways << 30U) & (3UL << 30U)) );



      } while (ways-- != 0U);
    } while(sets-- != 0U);
    __DSB();

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR |= (uint32_t)(1UL << 16U);

    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_DisableDCache (void)
{

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CSSELR = 0U;
    __DSB();

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCR &= ~(uint32_t)(1UL << 16U);
    __DSB();

    ccsidr = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCSIDR;


    sets = (uint32_t)((((ccsidr) & (0x7FFFUL << 13U) ) >> 13U ));
    do {
      ways = (uint32_t)((((ccsidr) & (0x3FFUL << 3U)) >> 3U));
      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCCISW = (((sets << 5U) & (0x1FFUL << 5U)) |
                       ((ways << 30U) & (3UL << 30U)) );



      } while (ways-- != 0U);
    } while(sets-- != 0U);

    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_InvalidateDCache (void)
{

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CSSELR = 0U;
    __DSB();

    ccsidr = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCSIDR;


    sets = (uint32_t)((((ccsidr) & (0x7FFFUL << 13U) ) >> 13U ));
    do {
      ways = (uint32_t)((((ccsidr) & (0x3FFUL << 3U)) >> 3U));
      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCISW = (((sets << 5U) & (0x1FFUL << 5U)) |
                      ((ways << 30U) & (3UL << 30U)) );



      } while (ways-- != 0U);
    } while(sets-- != 0U);

    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_CleanDCache (void)
{

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CSSELR = 0U;
    __DSB();

    ccsidr = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCSIDR;


    sets = (uint32_t)((((ccsidr) & (0x7FFFUL << 13U) ) >> 13U ));
    do {
      ways = (uint32_t)((((ccsidr) & (0x3FFUL << 3U)) >> 3U));
      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCCSW = (((sets << 5U) & (0x1FFUL << 5U)) |
                      ((ways << 30U) & (3UL << 30U)) );



      } while (ways-- != 0U);
    } while(sets-- != 0U);

    __DSB();
    __ISB();

}






__attribute__((always_inline)) static inline void SCB_CleanInvalidateDCache (void)
{

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CSSELR = 0U;
    __DSB();

    ccsidr = ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CCSIDR;


    sets = (uint32_t)((((ccsidr) & (0x7FFFUL << 13U) ) >> 13U ));
    do {
      ways = (uint32_t)((((ccsidr) & (0x3FFUL << 3U)) >> 3U));
      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCCISW = (((sets << 5U) & (0x1FFUL << 5U)) |
                       ((ways << 30U) & (3UL << 30U)) );



      } while (ways-- != 0U);
    } while(sets-- != 0U);

    __DSB();
    __ISB();

}
# 328 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h"
__attribute__((always_inline)) static inline void SCB_InvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
{

    if ( dsize > 0 ) {
       int32_t op_size = dsize + (((uint32_t)addr) & (32U - 1U));
      uint32_t op_addr = (uint32_t)addr ;

      __DSB();

      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCIMVAC = op_addr;
        op_addr += 32U;
        op_size -= 32U;
      } while ( op_size > 0 );

      __DSB();
      __ISB();
    }

}
# 358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h"
__attribute__((always_inline)) static inline void SCB_CleanDCache_by_Addr (volatile void *addr, int32_t dsize)
{

    if ( dsize > 0 ) {
       int32_t op_size = dsize + (((uint32_t)addr) & (32U - 1U));
      uint32_t op_addr = (uint32_t)addr ;

      __DSB();

      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCCMVAC = op_addr;
        op_addr += 32U;
        op_size -= 32U;
      } while ( op_size > 0 );

      __DSB();
      __ISB();
    }

}
# 388 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cachel1_armv7.h"
__attribute__((always_inline)) static inline void SCB_CleanInvalidateDCache_by_Addr (volatile void *addr, int32_t dsize)
{

    if ( dsize > 0 ) {
       int32_t op_size = dsize + (((uint32_t)addr) & (32U - 1U));
      uint32_t op_addr = (uint32_t)addr ;

      __DSB();

      do {
        ((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->DCCIMVAC = op_addr;
        op_addr += 32U;
        op_size -= 32U;
      } while ( op_size > 0 );

      __DSB();
      __ISB();
    }

}
# 2235 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h" 2
# 2259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > (0xFFFFFFUL ))
  {
    return (1UL);
  }

  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->LOAD = (uint32_t)(ticks - 1UL);
  __NVIC_SetPriority (SysTick_IRQn, (1UL << 4) - 1UL);
  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->VAL = 0UL;
  ((SysTick_Type *) ((0xE000E000UL) + 0x0010UL) )->CTRL = (1UL << 2U) |
                   (1UL << 1U) |
                   (1UL );
  return (0UL);
}
# 2289 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
extern volatile int32_t ITM_RxBuffer;
# 2301 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline uint32_t ITM_SendChar (uint32_t ch)
{
  if (((((ITM_Type *) (0xE0000000UL) )->TCR & (1UL )) != 0UL) &&
      ((((ITM_Type *) (0xE0000000UL) )->TER & 1UL ) != 0UL) )
  {
    while (((ITM_Type *) (0xE0000000UL) )->PORT[0U].u32 == 0UL)
    {
      __asm volatile ("nop");
    }
    ((ITM_Type *) (0xE0000000UL) )->PORT[0U].u8 = (uint8_t)ch;
  }
  return (ch);
}
# 2322 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline int32_t ITM_ReceiveChar (void)
{
  int32_t ch = -1;

  if (ITM_RxBuffer != ((int32_t)0x5AA55AA5U))
  {
    ch = ITM_RxBuffer;
    ITM_RxBuffer = ((int32_t)0x5AA55AA5U);
  }

  return (ch);
}
# 2342 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/core_cm7.h"
static inline int32_t ITM_CheckChar (void)
{

  if (ITM_RxBuffer == ((int32_t)0x5AA55AA5U))
  {
    return (0);
  }
  else
  {
    return (1);
  }
}
# 283 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/system_MIMXRT1062.h" 1
# 99 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/system_MIMXRT1062.h"
extern uint32_t SystemCoreClock;
# 108 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/system_MIMXRT1062.h"
void SystemInit (void);
# 117 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/system_MIMXRT1062.h"
void SystemCoreClockUpdate (void);
# 129 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/system_MIMXRT1062.h"
void SystemInitHook (void);
# 284 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h" 2
# 313 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef enum _iomuxc_sw_mux_ctl_pad
{
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_00 = 0U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_01 = 1U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_02 = 2U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_03 = 3U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_04 = 4U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_05 = 5U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_06 = 6U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_07 = 7U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_08 = 8U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_09 = 9U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_10 = 10U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_11 = 11U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_12 = 12U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_13 = 13U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_14 = 14U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_15 = 15U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_16 = 16U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_17 = 17U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_18 = 18U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_19 = 19U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_20 = 20U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_21 = 21U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22 = 22U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_23 = 23U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_24 = 24U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_25 = 25U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_26 = 26U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_27 = 27U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_28 = 28U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_29 = 29U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_30 = 30U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_31 = 31U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_32 = 32U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_33 = 33U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_34 = 34U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_35 = 35U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_36 = 36U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_37 = 37U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_38 = 38U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_39 = 39U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_40 = 40U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_41 = 41U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_00 = 42U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_01 = 43U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_02 = 44U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_03 = 45U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_04 = 46U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_05 = 47U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_06 = 48U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_07 = 49U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_08 = 50U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_09 = 51U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_10 = 52U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_11 = 53U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_12 = 54U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_13 = 55U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_14 = 56U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_15 = 57U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_00 = 58U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_01 = 59U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_02 = 60U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_03 = 61U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_04 = 62U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_05 = 63U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_06 = 64U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_07 = 65U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_08 = 66U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_09 = 67U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_10 = 68U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_11 = 69U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_12 = 70U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_13 = 71U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_14 = 72U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_15 = 73U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_00 = 74U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_01 = 75U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_02 = 76U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_03 = 77U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_04 = 78U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_05 = 79U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_06 = 80U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_07 = 81U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_08 = 82U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_09 = 83U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_10 = 84U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_11 = 85U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_12 = 86U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_13 = 87U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_14 = 88U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B0_15 = 89U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_00 = 90U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_01 = 91U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_02 = 92U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_03 = 93U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_04 = 94U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_05 = 95U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_06 = 96U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_07 = 97U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_08 = 98U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_09 = 99U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_10 = 100U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_11 = 101U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_12 = 102U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_13 = 103U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_14 = 104U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_B1_15 = 105U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_00 = 106U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_01 = 107U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_02 = 108U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_03 = 109U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_04 = 110U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_05 = 111U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_00 = 112U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_01 = 113U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_02 = 114U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_03 = 115U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_04 = 116U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_05 = 117U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_06 = 118U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_07 = 119U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_08 = 120U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_09 = 121U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_10 = 122U,
    kIOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_11 = 123U,
} iomuxc_sw_mux_ctl_pad_t;
# 456 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef enum _iomuxc_sw_pad_ctl_pad
{
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_00 = 0U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_01 = 1U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_02 = 2U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_03 = 3U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_04 = 4U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_05 = 5U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_06 = 6U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_07 = 7U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_08 = 8U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_09 = 9U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_10 = 10U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_11 = 11U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_12 = 12U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_13 = 13U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_14 = 14U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_15 = 15U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_16 = 16U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_17 = 17U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_18 = 18U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_19 = 19U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_20 = 20U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_21 = 21U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 22U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23 = 23U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_24 = 24U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25 = 25U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26 = 26U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_27 = 27U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_28 = 28U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_29 = 29U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_30 = 30U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_31 = 31U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_32 = 32U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_33 = 33U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_34 = 34U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_35 = 35U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_36 = 36U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_37 = 37U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_38 = 38U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_39 = 39U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_40 = 40U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_41 = 41U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_00 = 42U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_01 = 43U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_02 = 44U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_03 = 45U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_04 = 46U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_05 = 47U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_06 = 48U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_07 = 49U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_08 = 50U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_09 = 51U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_10 = 52U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_11 = 53U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_12 = 54U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_13 = 55U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_14 = 56U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_15 = 57U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_00 = 58U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_01 = 59U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_02 = 60U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_03 = 61U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_04 = 62U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_05 = 63U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_06 = 64U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_07 = 65U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_08 = 66U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_09 = 67U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_10 = 68U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_11 = 69U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_12 = 70U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_13 = 71U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_14 = 72U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_15 = 73U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_00 = 74U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_01 = 75U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_02 = 76U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_03 = 77U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_04 = 78U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_05 = 79U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_06 = 80U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_07 = 81U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_08 = 82U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_09 = 83U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_10 = 84U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_11 = 85U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_12 = 86U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_13 = 87U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_14 = 88U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B0_15 = 89U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_00 = 90U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_01 = 91U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_02 = 92U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_03 = 93U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_04 = 94U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_05 = 95U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_06 = 96U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_07 = 97U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_08 = 98U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_09 = 99U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_10 = 100U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_11 = 101U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_12 = 102U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_13 = 103U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_14 = 104U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_B1_15 = 105U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_00 = 106U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_01 = 107U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_02 = 108U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_03 = 109U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_04 = 110U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_05 = 111U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_00 = 112U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_01 = 113U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_02 = 114U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_03 = 115U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_04 = 116U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_05 = 117U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_06 = 118U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_07 = 119U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_08 = 120U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_09 = 121U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_10 = 122U,
    kIOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_11 = 123U,
} iomuxc_sw_pad_ctl_pad_t;
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef enum _iomuxc_select_input
{
    kIOMUXC_ANATOP_USB_OTG1_ID_SELECT_INPUT = 0U,
    kIOMUXC_ANATOP_USB_OTG2_ID_SELECT_INPUT = 1U,
    kIOMUXC_CCM_PMIC_READY_SELECT_INPUT = 2U,
    kIOMUXC_CSI_DATA02_SELECT_INPUT = 3U,
    kIOMUXC_CSI_DATA03_SELECT_INPUT = 4U,
    kIOMUXC_CSI_DATA04_SELECT_INPUT = 5U,
    kIOMUXC_CSI_DATA05_SELECT_INPUT = 6U,
    kIOMUXC_CSI_DATA06_SELECT_INPUT = 7U,
    kIOMUXC_CSI_DATA07_SELECT_INPUT = 8U,
    kIOMUXC_CSI_DATA08_SELECT_INPUT = 9U,
    kIOMUXC_CSI_DATA09_SELECT_INPUT = 10U,
    kIOMUXC_CSI_HSYNC_SELECT_INPUT = 11U,
    kIOMUXC_CSI_PIXCLK_SELECT_INPUT = 12U,
    kIOMUXC_CSI_VSYNC_SELECT_INPUT = 13U,
    kIOMUXC_ENET_IPG_CLK_RMII_SELECT_INPUT = 14U,
    kIOMUXC_ENET_MDIO_SELECT_INPUT = 15U,
    kIOMUXC_ENET0_RXDATA_SELECT_INPUT = 16U,
    kIOMUXC_ENET1_RXDATA_SELECT_INPUT = 17U,
    kIOMUXC_ENET_RXEN_SELECT_INPUT = 18U,
    kIOMUXC_ENET_RXERR_SELECT_INPUT = 19U,
    kIOMUXC_ENET0_TIMER_SELECT_INPUT = 20U,
    kIOMUXC_ENET_TXCLK_SELECT_INPUT = 21U,
    kIOMUXC_FLEXCAN1_RX_SELECT_INPUT = 22U,
    kIOMUXC_FLEXCAN2_RX_SELECT_INPUT = 23U,
    kIOMUXC_FLEXPWM1_PWMA3_SELECT_INPUT = 24U,
    kIOMUXC_FLEXPWM1_PWMA0_SELECT_INPUT = 25U,
    kIOMUXC_FLEXPWM1_PWMA1_SELECT_INPUT = 26U,
    kIOMUXC_FLEXPWM1_PWMA2_SELECT_INPUT = 27U,
    kIOMUXC_FLEXPWM1_PWMB3_SELECT_INPUT = 28U,
    kIOMUXC_FLEXPWM1_PWMB0_SELECT_INPUT = 29U,
    kIOMUXC_FLEXPWM1_PWMB1_SELECT_INPUT = 30U,
    kIOMUXC_FLEXPWM1_PWMB2_SELECT_INPUT = 31U,
    kIOMUXC_FLEXPWM2_PWMA3_SELECT_INPUT = 32U,
    kIOMUXC_FLEXPWM2_PWMA0_SELECT_INPUT = 33U,
    kIOMUXC_FLEXPWM2_PWMA1_SELECT_INPUT = 34U,
    kIOMUXC_FLEXPWM2_PWMA2_SELECT_INPUT = 35U,
    kIOMUXC_FLEXPWM2_PWMB3_SELECT_INPUT = 36U,
    kIOMUXC_FLEXPWM2_PWMB0_SELECT_INPUT = 37U,
    kIOMUXC_FLEXPWM2_PWMB1_SELECT_INPUT = 38U,
    kIOMUXC_FLEXPWM2_PWMB2_SELECT_INPUT = 39U,
    kIOMUXC_FLEXPWM4_PWMA0_SELECT_INPUT = 40U,
    kIOMUXC_FLEXPWM4_PWMA1_SELECT_INPUT = 41U,
    kIOMUXC_FLEXPWM4_PWMA2_SELECT_INPUT = 42U,
    kIOMUXC_FLEXPWM4_PWMA3_SELECT_INPUT = 43U,
    kIOMUXC_FLEXSPIA_DQS_SELECT_INPUT = 44U,
    kIOMUXC_FLEXSPIA_DATA0_SELECT_INPUT = 45U,
    kIOMUXC_FLEXSPIA_DATA1_SELECT_INPUT = 46U,
    kIOMUXC_FLEXSPIA_DATA2_SELECT_INPUT = 47U,
    kIOMUXC_FLEXSPIA_DATA3_SELECT_INPUT = 48U,
    kIOMUXC_FLEXSPIB_DATA0_SELECT_INPUT = 49U,
    kIOMUXC_FLEXSPIB_DATA1_SELECT_INPUT = 50U,
    kIOMUXC_FLEXSPIB_DATA2_SELECT_INPUT = 51U,
    kIOMUXC_FLEXSPIB_DATA3_SELECT_INPUT = 52U,
    kIOMUXC_FLEXSPIA_SCK_SELECT_INPUT = 53U,
    kIOMUXC_LPI2C1_SCL_SELECT_INPUT = 54U,
    kIOMUXC_LPI2C1_SDA_SELECT_INPUT = 55U,
    kIOMUXC_LPI2C2_SCL_SELECT_INPUT = 56U,
    kIOMUXC_LPI2C2_SDA_SELECT_INPUT = 57U,
    kIOMUXC_LPI2C3_SCL_SELECT_INPUT = 58U,
    kIOMUXC_LPI2C3_SDA_SELECT_INPUT = 59U,
    kIOMUXC_LPI2C4_SCL_SELECT_INPUT = 60U,
    kIOMUXC_LPI2C4_SDA_SELECT_INPUT = 61U,
    kIOMUXC_LPSPI1_PCS0_SELECT_INPUT = 62U,
    kIOMUXC_LPSPI1_SCK_SELECT_INPUT = 63U,
    kIOMUXC_LPSPI1_SDI_SELECT_INPUT = 64U,
    kIOMUXC_LPSPI1_SDO_SELECT_INPUT = 65U,
    kIOMUXC_LPSPI2_PCS0_SELECT_INPUT = 66U,
    kIOMUXC_LPSPI2_SCK_SELECT_INPUT = 67U,
    kIOMUXC_LPSPI2_SDI_SELECT_INPUT = 68U,
    kIOMUXC_LPSPI2_SDO_SELECT_INPUT = 69U,
    kIOMUXC_LPSPI3_PCS0_SELECT_INPUT = 70U,
    kIOMUXC_LPSPI3_SCK_SELECT_INPUT = 71U,
    kIOMUXC_LPSPI3_SDI_SELECT_INPUT = 72U,
    kIOMUXC_LPSPI3_SDO_SELECT_INPUT = 73U,
    kIOMUXC_LPSPI4_PCS0_SELECT_INPUT = 74U,
    kIOMUXC_LPSPI4_SCK_SELECT_INPUT = 75U,
    kIOMUXC_LPSPI4_SDI_SELECT_INPUT = 76U,
    kIOMUXC_LPSPI4_SDO_SELECT_INPUT = 77U,
    kIOMUXC_LPUART2_RX_SELECT_INPUT = 78U,
    kIOMUXC_LPUART2_TX_SELECT_INPUT = 79U,
    kIOMUXC_LPUART3_CTS_B_SELECT_INPUT = 80U,
    kIOMUXC_LPUART3_RX_SELECT_INPUT = 81U,
    kIOMUXC_LPUART3_TX_SELECT_INPUT = 82U,
    kIOMUXC_LPUART4_RX_SELECT_INPUT = 83U,
    kIOMUXC_LPUART4_TX_SELECT_INPUT = 84U,
    kIOMUXC_LPUART5_RX_SELECT_INPUT = 85U,
    kIOMUXC_LPUART5_TX_SELECT_INPUT = 86U,
    kIOMUXC_LPUART6_RX_SELECT_INPUT = 87U,
    kIOMUXC_LPUART6_TX_SELECT_INPUT = 88U,
    kIOMUXC_LPUART7_RX_SELECT_INPUT = 89U,
    kIOMUXC_LPUART7_TX_SELECT_INPUT = 90U,
    kIOMUXC_LPUART8_RX_SELECT_INPUT = 91U,
    kIOMUXC_LPUART8_TX_SELECT_INPUT = 92U,
    kIOMUXC_NMI_SELECT_INPUT = 93U,
    kIOMUXC_QTIMER2_TIMER0_SELECT_INPUT = 94U,
    kIOMUXC_QTIMER2_TIMER1_SELECT_INPUT = 95U,
    kIOMUXC_QTIMER2_TIMER2_SELECT_INPUT = 96U,
    kIOMUXC_QTIMER2_TIMER3_SELECT_INPUT = 97U,
    kIOMUXC_QTIMER3_TIMER0_SELECT_INPUT = 98U,
    kIOMUXC_QTIMER3_TIMER1_SELECT_INPUT = 99U,
    kIOMUXC_QTIMER3_TIMER2_SELECT_INPUT = 100U,
    kIOMUXC_QTIMER3_TIMER3_SELECT_INPUT = 101U,
    kIOMUXC_SAI1_MCLK2_SELECT_INPUT = 102U,
    kIOMUXC_SAI1_RX_BCLK_SELECT_INPUT = 103U,
    kIOMUXC_SAI1_RX_DATA0_SELECT_INPUT = 104U,
    kIOMUXC_SAI1_RX_DATA1_SELECT_INPUT = 105U,
    kIOMUXC_SAI1_RX_DATA2_SELECT_INPUT = 106U,
    kIOMUXC_SAI1_RX_DATA3_SELECT_INPUT = 107U,
    kIOMUXC_SAI1_RX_SYNC_SELECT_INPUT = 108U,
    kIOMUXC_SAI1_TX_BCLK_SELECT_INPUT = 109U,
    kIOMUXC_SAI1_TX_SYNC_SELECT_INPUT = 110U,
    kIOMUXC_SAI2_MCLK2_SELECT_INPUT = 111U,
    kIOMUXC_SAI2_RX_BCLK_SELECT_INPUT = 112U,
    kIOMUXC_SAI2_RX_DATA0_SELECT_INPUT = 113U,
    kIOMUXC_SAI2_RX_SYNC_SELECT_INPUT = 114U,
    kIOMUXC_SAI2_TX_BCLK_SELECT_INPUT = 115U,
    kIOMUXC_SAI2_TX_SYNC_SELECT_INPUT = 116U,
    kIOMUXC_SPDIF_IN_SELECT_INPUT = 117U,
    kIOMUXC_USB_OTG2_OC_SELECT_INPUT = 118U,
    kIOMUXC_USB_OTG1_OC_SELECT_INPUT = 119U,
    kIOMUXC_USDHC1_CD_B_SELECT_INPUT = 120U,
    kIOMUXC_USDHC1_WP_SELECT_INPUT = 121U,
    kIOMUXC_USDHC2_CLK_SELECT_INPUT = 122U,
    kIOMUXC_USDHC2_CD_B_SELECT_INPUT = 123U,
    kIOMUXC_USDHC2_CMD_SELECT_INPUT = 124U,
    kIOMUXC_USDHC2_DATA0_SELECT_INPUT = 125U,
    kIOMUXC_USDHC2_DATA1_SELECT_INPUT = 126U,
    kIOMUXC_USDHC2_DATA2_SELECT_INPUT = 127U,
    kIOMUXC_USDHC2_DATA3_SELECT_INPUT = 128U,
    kIOMUXC_USDHC2_DATA4_SELECT_INPUT = 129U,
    kIOMUXC_USDHC2_DATA5_SELECT_INPUT = 130U,
    kIOMUXC_USDHC2_DATA6_SELECT_INPUT = 131U,
    kIOMUXC_USDHC2_DATA7_SELECT_INPUT = 132U,
    kIOMUXC_USDHC2_WP_SELECT_INPUT = 133U,
    kIOMUXC_XBAR1_IN02_SELECT_INPUT = 134U,
    kIOMUXC_XBAR1_IN03_SELECT_INPUT = 135U,
    kIOMUXC_XBAR1_IN04_SELECT_INPUT = 136U,
    kIOMUXC_XBAR1_IN05_SELECT_INPUT = 137U,
    kIOMUXC_XBAR1_IN06_SELECT_INPUT = 138U,
    kIOMUXC_XBAR1_IN07_SELECT_INPUT = 139U,
    kIOMUXC_XBAR1_IN08_SELECT_INPUT = 140U,
    kIOMUXC_XBAR1_IN09_SELECT_INPUT = 141U,
    kIOMUXC_XBAR1_IN17_SELECT_INPUT = 142U,
    kIOMUXC_XBAR1_IN18_SELECT_INPUT = 143U,
    kIOMUXC_XBAR1_IN20_SELECT_INPUT = 144U,
    kIOMUXC_XBAR1_IN22_SELECT_INPUT = 145U,
    kIOMUXC_XBAR1_IN23_SELECT_INPUT = 146U,
    kIOMUXC_XBAR1_IN24_SELECT_INPUT = 147U,
    kIOMUXC_XBAR1_IN14_SELECT_INPUT = 148U,
    kIOMUXC_XBAR1_IN15_SELECT_INPUT = 149U,
    kIOMUXC_XBAR1_IN16_SELECT_INPUT = 150U,
    kIOMUXC_XBAR1_IN25_SELECT_INPUT = 151U,
    kIOMUXC_XBAR1_IN19_SELECT_INPUT = 152U,
    kIOMUXC_XBAR1_IN21_SELECT_INPUT = 153U,
} iomuxc_select_input_t;






typedef enum _iomuxc_select_input_1
{
    kIOMUXC_ENET2_IPG_CLK_RMII_SELECT_INPUT = 0U,
    kIOMUXC_ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT = 1U,
    kIOMUXC_ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0 = 2U,
    kIOMUXC_ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1 = 3U,
    kIOMUXC_ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT = 4U,
    kIOMUXC_ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT = 5U,
    kIOMUXC_ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0 = 6U,
    kIOMUXC_ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT = 7U,
    kIOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 8U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT = 9U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT = 10U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT = 11U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT = 12U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT = 13U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT = 14U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT = 15U,
    kIOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT = 16U,
    kIOMUXC_FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT = 17U,
    kIOMUXC_FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT = 18U,
    kIOMUXC_GPT1_IPP_IND_CAPIN1_SELECT_INPUT = 19U,
    kIOMUXC_GPT1_IPP_IND_CAPIN2_SELECT_INPUT = 20U,
    kIOMUXC_GPT1_IPP_IND_CLKIN_SELECT_INPUT = 21U,
    kIOMUXC_GPT2_IPP_IND_CAPIN1_SELECT_INPUT = 22U,
    kIOMUXC_GPT2_IPP_IND_CAPIN2_SELECT_INPUT = 23U,
    kIOMUXC_GPT2_IPP_IND_CLKIN_SELECT_INPUT = 24U,
    kIOMUXC_SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2 = 25U,
    kIOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT = 26U,
    kIOMUXC_SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 = 27U,
    kIOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT = 28U,
    kIOMUXC_SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT = 29U,
    kIOMUXC_SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT = 30U,
    kIOMUXC_SEMC_I_IPP_IND_DQS4_SELECT_INPUT = 31U,
    kIOMUXC_CANFD_IPP_IND_CANRX_SELECT_INPUT = 32U,
} iomuxc_select_input_1_t;

typedef enum _xbar_input_signal
{
    kXBARA1_InputLogicLow = 0|0x100U,
    kXBARA1_InputLogicHigh = 1|0x100U,
    kXBARA1_InputIomuxXbarIn02 = 2|0x100U,
    kXBARA1_InputIomuxXbarIn03 = 3|0x100U,
    kXBARA1_InputIomuxXbarInout04 = 4|0x100U,
    kXBARA1_InputIomuxXbarInout05 = 5|0x100U,
    kXBARA1_InputIomuxXbarInout06 = 6|0x100U,
    kXBARA1_InputIomuxXbarInout07 = 7|0x100U,
    kXBARA1_InputIomuxXbarInout08 = 8|0x100U,
    kXBARA1_InputIomuxXbarInout09 = 9|0x100U,
    kXBARA1_InputIomuxXbarInout10 = 10|0x100U,
    kXBARA1_InputIomuxXbarInout11 = 11|0x100U,
    kXBARA1_InputIomuxXbarInout12 = 12|0x100U,
    kXBARA1_InputIomuxXbarInout13 = 13|0x100U,
    kXBARA1_InputIomuxXbarInout14 = 14|0x100U,
    kXBARA1_InputIomuxXbarInout15 = 15|0x100U,
    kXBARA1_InputIomuxXbarInout16 = 16|0x100U,
    kXBARA1_InputIomuxXbarInout17 = 17|0x100U,
    kXBARA1_InputIomuxXbarInout18 = 18|0x100U,
    kXBARA1_InputIomuxXbarInout19 = 19|0x100U,
    kXBARA1_InputIomuxXbarIn20 = 20|0x100U,
    kXBARA1_InputIomuxXbarIn21 = 21|0x100U,
    kXBARA1_InputIomuxXbarIn22 = 22|0x100U,
    kXBARA1_InputIomuxXbarIn23 = 23|0x100U,
    kXBARA1_InputIomuxXbarIn24 = 24|0x100U,
    kXBARA1_InputIomuxXbarIn25 = 25|0x100U,
    kXBARA1_InputAcmp1Out = 26|0x100U,
    kXBARA1_InputAcmp2Out = 27|0x100U,
    kXBARA1_InputAcmp3Out = 28|0x100U,
    kXBARA1_InputAcmp4Out = 29|0x100U,
    kXBARA1_InputRESERVED30 = 30|0x100U,
    kXBARA1_InputRESERVED31 = 31|0x100U,
    kXBARA1_InputQtimer3Tmr0Output = 32|0x100U,
    kXBARA1_InputQtimer3Tmr1Output = 33|0x100U,
    kXBARA1_InputQtimer3Tmr2Output = 34|0x100U,
    kXBARA1_InputQtimer3Tmr3Output = 35|0x100U,
    kXBARA1_InputQtimer4Tmr0Output = 36|0x100U,
    kXBARA1_InputQtimer4Tmr1Output = 37|0x100U,
    kXBARA1_InputQtimer4Tmr2Output = 38|0x100U,
    kXBARA1_InputQtimer4Tmr3Output = 39|0x100U,
    kXBARA1_InputFlexpwm1Pwm1OutTrig01 = 40|0x100U,
    kXBARA1_InputFlexpwm1Pwm2OutTrig01 = 41|0x100U,
    kXBARA1_InputFlexpwm1Pwm3OutTrig01 = 42|0x100U,
    kXBARA1_InputFlexpwm1Pwm4OutTrig01 = 43|0x100U,
    kXBARA1_InputFlexpwm2Pwm1OutTrig01 = 44|0x100U,
    kXBARA1_InputFlexpwm2Pwm2OutTrig01 = 45|0x100U,
    kXBARA1_InputFlexpwm2Pwm3OutTrig01 = 46|0x100U,
    kXBARA1_InputFlexpwm2Pwm4OutTrig01 = 47|0x100U,
    kXBARA1_InputFlexpwm3Pwm1OutTrig01 = 48|0x100U,
    kXBARA1_InputFlexpwm3Pwm2OutTrig01 = 49|0x100U,
    kXBARA1_InputFlexpwm3Pwm3OutTrig01 = 50|0x100U,
    kXBARA1_InputFlexpwm3Pwm4OutTrig01 = 51|0x100U,
    kXBARA1_InputFlexpwm4Pwm1OutTrig01 = 52|0x100U,
    kXBARA1_InputFlexpwm4Pwm2OutTrig01 = 53|0x100U,
    kXBARA1_InputFlexpwm4Pwm3OutTrig01 = 54|0x100U,
    kXBARA1_InputFlexpwm4Pwm4OutTrig01 = 55|0x100U,
    kXBARA1_InputPitTrigger0 = 56|0x100U,
    kXBARA1_InputPitTrigger1 = 57|0x100U,
    kXBARA1_InputPitTrigger2 = 58|0x100U,
    kXBARA1_InputPitTrigger3 = 59|0x100U,
    kXBARA1_InputEnc1PosMatch = 60|0x100U,
    kXBARA1_InputEnc2PosMatch = 61|0x100U,
    kXBARA1_InputEnc3PosMatch = 62|0x100U,
    kXBARA1_InputEnc4PosMatch = 63|0x100U,
    kXBARA1_InputDmaDone0 = 64|0x100U,
    kXBARA1_InputDmaDone1 = 65|0x100U,
    kXBARA1_InputDmaDone2 = 66|0x100U,
    kXBARA1_InputDmaDone3 = 67|0x100U,
    kXBARA1_InputDmaDone4 = 68|0x100U,
    kXBARA1_InputDmaDone5 = 69|0x100U,
    kXBARA1_InputDmaDone6 = 70|0x100U,
    kXBARA1_InputDmaDone7 = 71|0x100U,
    kXBARA1_InputAoi1Out0 = 72|0x100U,
    kXBARA1_InputAoi1Out1 = 73|0x100U,
    kXBARA1_InputAoi1Out2 = 74|0x100U,
    kXBARA1_InputAoi1Out3 = 75|0x100U,
    kXBARA1_InputAoi2Out0 = 76|0x100U,
    kXBARA1_InputAoi2Out1 = 77|0x100U,
    kXBARA1_InputAoi2Out2 = 78|0x100U,
    kXBARA1_InputAoi2Out3 = 79|0x100U,
    kXBARA1_InputAdcEtcXbar0Coco0 = 80|0x100U,
    kXBARA1_InputAdcEtcXbar0Coco1 = 81|0x100U,
    kXBARA1_InputAdcEtcXbar0Coco2 = 82|0x100U,
    kXBARA1_InputAdcEtcXbar0Coco3 = 83|0x100U,
    kXBARA1_InputAdcEtcXbar1Coco0 = 84|0x100U,
    kXBARA1_InputAdcEtcXbar1Coco1 = 85|0x100U,
    kXBARA1_InputAdcEtcXbar1Coco2 = 86|0x100U,
    kXBARA1_InputAdcEtcXbar1Coco3 = 87|0x100U,
    kXBARB2_InputLogicLow = 0|0x200U,
    kXBARB2_InputLogicHigh = 1|0x200U,
    kXBARB2_InputRESERVED2 = 2|0x200U,
    kXBARB2_InputRESERVED3 = 3|0x200U,
    kXBARB2_InputRESERVED4 = 4|0x200U,
    kXBARB2_InputRESERVED5 = 5|0x200U,
    kXBARB2_InputAcmp1Out = 6|0x200U,
    kXBARB2_InputAcmp2Out = 7|0x200U,
    kXBARB2_InputAcmp3Out = 8|0x200U,
    kXBARB2_InputAcmp4Out = 9|0x200U,
    kXBARB2_InputRESERVED10 = 10|0x200U,
    kXBARB2_InputRESERVED11 = 11|0x200U,
    kXBARB2_InputQtimer3Tmr0Output = 12|0x200U,
    kXBARB2_InputQtimer3Tmr1Output = 13|0x200U,
    kXBARB2_InputQtimer3Tmr2Output = 14|0x200U,
    kXBARB2_InputQtimer3Tmr3Output = 15|0x200U,
    kXBARB2_InputQtimer4Tmr0Output = 16|0x200U,
    kXBARB2_InputQtimer4Tmr1Output = 17|0x200U,
    kXBARB2_InputQtimer4Tmr2Output = 18|0x200U,
    kXBARB2_InputQtimer4Tmr3Output = 19|0x200U,
    kXBARB2_InputFlexpwm1Pwm1OutTrig01 = 20|0x200U,
    kXBARB2_InputFlexpwm1Pwm2OutTrig01 = 21|0x200U,
    kXBARB2_InputFlexpwm1Pwm3OutTrig01 = 22|0x200U,
    kXBARB2_InputFlexpwm1Pwm4OutTrig01 = 23|0x200U,
    kXBARB2_InputFlexpwm2Pwm1OutTrig01 = 24|0x200U,
    kXBARB2_InputFlexpwm2Pwm2OutTrig01 = 25|0x200U,
    kXBARB2_InputFlexpwm2Pwm3OutTrig01 = 26|0x200U,
    kXBARB2_InputFlexpwm2Pwm4OutTrig01 = 27|0x200U,
    kXBARB2_InputFlexpwm3Pwm1OutTrig01 = 28|0x200U,
    kXBARB2_InputFlexpwm3Pwm2OutTrig01 = 29|0x200U,
    kXBARB2_InputFlexpwm3Pwm3OutTrig01 = 30|0x200U,
    kXBARB2_InputFlexpwm3Pwm4OutTrig01 = 31|0x200U,
    kXBARB2_InputFlexpwm4Pwm1OutTrig01 = 32|0x200U,
    kXBARB2_InputFlexpwm4Pwm2OutTrig01 = 33|0x200U,
    kXBARB2_InputFlexpwm4Pwm3OutTrig01 = 34|0x200U,
    kXBARB2_InputFlexpwm4Pwm4OutTrig01 = 35|0x200U,
    kXBARB2_InputPitTrigger0 = 36|0x200U,
    kXBARB2_InputPitTrigger1 = 37|0x200U,
    kXBARB2_InputAdcEtcXbar0Coco0 = 38|0x200U,
    kXBARB2_InputAdcEtcXbar0Coco1 = 39|0x200U,
    kXBARB2_InputAdcEtcXbar0Coco2 = 40|0x200U,
    kXBARB2_InputAdcEtcXbar0Coco3 = 41|0x200U,
    kXBARB2_InputAdcEtcXbar1Coco0 = 42|0x200U,
    kXBARB2_InputAdcEtcXbar1Coco1 = 43|0x200U,
    kXBARB2_InputAdcEtcXbar1Coco2 = 44|0x200U,
    kXBARB2_InputAdcEtcXbar1Coco3 = 45|0x200U,
    kXBARB2_InputEnc1PosMatch = 46|0x200U,
    kXBARB2_InputEnc2PosMatch = 47|0x200U,
    kXBARB2_InputEnc3PosMatch = 48|0x200U,
    kXBARB2_InputEnc4PosMatch = 49|0x200U,
    kXBARB2_InputDmaDone0 = 50|0x200U,
    kXBARB2_InputDmaDone1 = 51|0x200U,
    kXBARB2_InputDmaDone2 = 52|0x200U,
    kXBARB2_InputDmaDone3 = 53|0x200U,
    kXBARB2_InputDmaDone4 = 54|0x200U,
    kXBARB2_InputDmaDone5 = 55|0x200U,
    kXBARB2_InputDmaDone6 = 56|0x200U,
    kXBARB2_InputDmaDone7 = 57|0x200U,
    kXBARB3_InputLogicLow = 0|0x300U,
    kXBARB3_InputLogicHigh = 1|0x300U,
    kXBARB3_InputRESERVED2 = 2|0x300U,
    kXBARB3_InputRESERVED3 = 3|0x300U,
    kXBARB3_InputRESERVED4 = 4|0x300U,
    kXBARB3_InputRESERVED5 = 5|0x300U,
    kXBARB3_InputAcmp1Out = 6|0x300U,
    kXBARB3_InputAcmp2Out = 7|0x300U,
    kXBARB3_InputAcmp3Out = 8|0x300U,
    kXBARB3_InputAcmp4Out = 9|0x300U,
    kXBARB3_InputRESERVED10 = 10|0x300U,
    kXBARB3_InputRESERVED11 = 11|0x300U,
    kXBARB3_InputQtimer3Tmr0Output = 12|0x300U,
    kXBARB3_InputQtimer3Tmr1Output = 13|0x300U,
    kXBARB3_InputQtimer3Tmr2Output = 14|0x300U,
    kXBARB3_InputQtimer3Tmr3Output = 15|0x300U,
    kXBARB3_InputQtimer4Tmr0Output = 16|0x300U,
    kXBARB3_InputQtimer4Tmr1Output = 17|0x300U,
    kXBARB3_InputQtimer4Tmr2Output = 18|0x300U,
    kXBARB3_InputQtimer4Tmr3Output = 19|0x300U,
    kXBARB3_InputFlexpwm1Pwm1OutTrig01 = 20|0x300U,
    kXBARB3_InputFlexpwm1Pwm2OutTrig01 = 21|0x300U,
    kXBARB3_InputFlexpwm1Pwm3OutTrig01 = 22|0x300U,
    kXBARB3_InputFlexpwm1Pwm4OutTrig01 = 23|0x300U,
    kXBARB3_InputFlexpwm2Pwm1OutTrig01 = 24|0x300U,
    kXBARB3_InputFlexpwm2Pwm2OutTrig01 = 25|0x300U,
    kXBARB3_InputFlexpwm2Pwm3OutTrig01 = 26|0x300U,
    kXBARB3_InputFlexpwm2Pwm4OutTrig01 = 27|0x300U,
    kXBARB3_InputFlexpwm3Pwm1OutTrig01 = 28|0x300U,
    kXBARB3_InputFlexpwm3Pwm2OutTrig01 = 29|0x300U,
    kXBARB3_InputFlexpwm3Pwm3OutTrig01 = 30|0x300U,
    kXBARB3_InputFlexpwm3Pwm4OutTrig01 = 31|0x300U,
    kXBARB3_InputFlexpwm4Pwm1OutTrig01 = 32|0x300U,
    kXBARB3_InputFlexpwm4Pwm2OutTrig01 = 33|0x300U,
    kXBARB3_InputFlexpwm4Pwm3OutTrig01 = 34|0x300U,
    kXBARB3_InputFlexpwm4Pwm4OutTrig01 = 35|0x300U,
    kXBARB3_InputPitTrigger0 = 36|0x300U,
    kXBARB3_InputPitTrigger1 = 37|0x300U,
    kXBARB3_InputAdcEtcXbar0Coco0 = 38|0x300U,
    kXBARB3_InputAdcEtcXbar0Coco1 = 39|0x300U,
    kXBARB3_InputAdcEtcXbar0Coco2 = 40|0x300U,
    kXBARB3_InputAdcEtcXbar0Coco3 = 41|0x300U,
    kXBARB3_InputAdcEtcXbar1Coco0 = 42|0x300U,
    kXBARB3_InputAdcEtcXbar1Coco1 = 43|0x300U,
    kXBARB3_InputAdcEtcXbar1Coco2 = 44|0x300U,
    kXBARB3_InputAdcEtcXbar1Coco3 = 45|0x300U,
    kXBARB3_InputEnc1PosMatch = 46|0x300U,
    kXBARB3_InputEnc2PosMatch = 47|0x300U,
    kXBARB3_InputEnc3PosMatch = 48|0x300U,
    kXBARB3_InputEnc4PosMatch = 49|0x300U,
    kXBARB3_InputDmaDone0 = 50|0x300U,
    kXBARB3_InputDmaDone1 = 51|0x300U,
    kXBARB3_InputDmaDone2 = 52|0x300U,
    kXBARB3_InputDmaDone3 = 53|0x300U,
    kXBARB3_InputDmaDone4 = 54|0x300U,
    kXBARB3_InputDmaDone5 = 55|0x300U,
    kXBARB3_InputDmaDone6 = 56|0x300U,
    kXBARB3_InputDmaDone7 = 57|0x300U,
} xbar_input_signal_t;

typedef enum _xbar_output_signal
{
    kXBARA1_OutputDmaChMuxReq30 = 0|0x100U,
    kXBARA1_OutputDmaChMuxReq31 = 1|0x100U,
    kXBARA1_OutputDmaChMuxReq94 = 2|0x100U,
    kXBARA1_OutputDmaChMuxReq95 = 3|0x100U,
    kXBARA1_OutputIomuxXbarInout04 = 4|0x100U,
    kXBARA1_OutputIomuxXbarInout05 = 5|0x100U,
    kXBARA1_OutputIomuxXbarInout06 = 6|0x100U,
    kXBARA1_OutputIomuxXbarInout07 = 7|0x100U,
    kXBARA1_OutputIomuxXbarInout08 = 8|0x100U,
    kXBARA1_OutputIomuxXbarInout09 = 9|0x100U,
    kXBARA1_OutputIomuxXbarInout10 = 10|0x100U,
    kXBARA1_OutputIomuxXbarInout11 = 11|0x100U,
    kXBARA1_OutputIomuxXbarInout12 = 12|0x100U,
    kXBARA1_OutputIomuxXbarInout13 = 13|0x100U,
    kXBARA1_OutputIomuxXbarInout14 = 14|0x100U,
    kXBARA1_OutputIomuxXbarInout15 = 15|0x100U,
    kXBARA1_OutputIomuxXbarInout16 = 16|0x100U,
    kXBARA1_OutputIomuxXbarInout17 = 17|0x100U,
    kXBARA1_OutputIomuxXbarInout18 = 18|0x100U,
    kXBARA1_OutputIomuxXbarInout19 = 19|0x100U,
    kXBARA1_OutputAcmp1Sample = 20|0x100U,
    kXBARA1_OutputAcmp2Sample = 21|0x100U,
    kXBARA1_OutputAcmp3Sample = 22|0x100U,
    kXBARA1_OutputAcmp4Sample = 23|0x100U,
    kXBARA1_OutputRESERVED24 = 24|0x100U,
    kXBARA1_OutputRESERVED25 = 25|0x100U,
    kXBARA1_OutputFlexpwm1Exta0 = 26|0x100U,
    kXBARA1_OutputFlexpwm1Exta1 = 27|0x100U,
    kXBARA1_OutputFlexpwm1Exta2 = 28|0x100U,
    kXBARA1_OutputFlexpwm1Exta3 = 29|0x100U,
    kXBARA1_OutputFlexpwm1ExtSync0 = 30|0x100U,
    kXBARA1_OutputFlexpwm1ExtSync1 = 31|0x100U,
    kXBARA1_OutputFlexpwm1ExtSync2 = 32|0x100U,
    kXBARA1_OutputFlexpwm1ExtSync3 = 33|0x100U,
    kXBARA1_OutputFlexpwm1ExtClk = 34|0x100U,
    kXBARA1_OutputFlexpwm1Fault0 = 35|0x100U,
    kXBARA1_OutputFlexpwm1Fault1 = 36|0x100U,
    kXBARA1_OutputFlexpwm1234Fault2 = 37|0x100U,
    kXBARA1_OutputFlexpwm1234Fault3 = 38|0x100U,
    kXBARA1_OutputFlexpwm1ExtForce = 39|0x100U,
    kXBARA1_OutputFlexpwm234Exta0 = 40|0x100U,
    kXBARA1_OutputFlexpwm234Exta1 = 41|0x100U,
    kXBARA1_OutputFlexpwm234Exta2 = 42|0x100U,
    kXBARA1_OutputFlexpwm234Exta3 = 43|0x100U,
    kXBARA1_OutputFlexpwm2ExtSync0 = 44|0x100U,
    kXBARA1_OutputFlexpwm2ExtSync1 = 45|0x100U,
    kXBARA1_OutputFlexpwm2ExtSync2 = 46|0x100U,
    kXBARA1_OutputFlexpwm2ExtSync3 = 47|0x100U,
    kXBARA1_OutputFlexpwm234ExtClk = 48|0x100U,
    kXBARA1_OutputFlexpwm2Fault0 = 49|0x100U,
    kXBARA1_OutputFlexpwm2Fault1 = 50|0x100U,
    kXBARA1_OutputFlexpwm2ExtForce = 51|0x100U,
    kXBARA1_OutputFlexpwm3ExtSync0 = 52|0x100U,
    kXBARA1_OutputFlexpwm3ExtSync1 = 53|0x100U,
    kXBARA1_OutputFlexpwm3ExtSync2 = 54|0x100U,
    kXBARA1_OutputFlexpwm3ExtSync3 = 55|0x100U,
    kXBARA1_OutputFlexpwm3Fault0 = 56|0x100U,
    kXBARA1_OutputFlexpwm3Fault1 = 57|0x100U,
    kXBARA1_OutputFlexpwm3ExtForce = 58|0x100U,
    kXBARA1_OutputFlexpwm4ExtSync0 = 59|0x100U,
    kXBARA1_OutputFlexpwm4ExtSync1 = 60|0x100U,
    kXBARA1_OutputFlexpwm4ExtSync2 = 61|0x100U,
    kXBARA1_OutputFlexpwm4ExtSync3 = 62|0x100U,
    kXBARA1_OutputFlexpwm4Fault0 = 63|0x100U,
    kXBARA1_OutputFlexpwm4Fault1 = 64|0x100U,
    kXBARA1_OutputFlexpwm4ExtForce = 65|0x100U,
    kXBARA1_OutputEnc1PhaseAInput = 66|0x100U,
    kXBARA1_OutputEnc1PhaseBInput = 67|0x100U,
    kXBARA1_OutputEnc1Index = 68|0x100U,
    kXBARA1_OutputEnc1Home = 69|0x100U,
    kXBARA1_OutputEnc1Trigger = 70|0x100U,
    kXBARA1_OutputEnc2PhaseAInput = 71|0x100U,
    kXBARA1_OutputEnc2PhaseBInput = 72|0x100U,
    kXBARA1_OutputEnc2Index = 73|0x100U,
    kXBARA1_OutputEnc2Home = 74|0x100U,
    kXBARA1_OutputEnc2Trigger = 75|0x100U,
    kXBARA1_OutputEnc3PhaseAInput = 76|0x100U,
    kXBARA1_OutputEnc3PhaseBInput = 77|0x100U,
    kXBARA1_OutputEnc3Index = 78|0x100U,
    kXBARA1_OutputEnc3Home = 79|0x100U,
    kXBARA1_OutputEnc3Trigger = 80|0x100U,
    kXBARA1_OutputEnc4PhaseAInput = 81|0x100U,
    kXBARA1_OutputEnc4PhaseBInput = 82|0x100U,
    kXBARA1_OutputEnc4Index = 83|0x100U,
    kXBARA1_OutputEnc4Home = 84|0x100U,
    kXBARA1_OutputEnc4Trigger = 85|0x100U,
    kXBARA1_OutputQtimer1Tmr0Input = 86|0x100U,
    kXBARA1_OutputQtimer1Tmr1Input = 87|0x100U,
    kXBARA1_OutputQtimer1Tmr2Input = 88|0x100U,
    kXBARA1_OutputQtimer1Tmr3Input = 89|0x100U,
    kXBARA1_OutputQtimer2Tmr0Input = 90|0x100U,
    kXBARA1_OutputQtimer2Tmr1Input = 91|0x100U,
    kXBARA1_OutputQtimer2Tmr2Input = 92|0x100U,
    kXBARA1_OutputQtimer2Tmr3Input = 93|0x100U,
    kXBARA1_OutputQtimer3Tmr0Input = 94|0x100U,
    kXBARA1_OutputQtimer3Tmr1Input = 95|0x100U,
    kXBARA1_OutputQtimer3Tmr2Input = 96|0x100U,
    kXBARA1_OutputQtimer3Tmr3Input = 97|0x100U,
    kXBARA1_OutputQtimer4Tmr0Input = 98|0x100U,
    kXBARA1_OutputQtimer4Tmr1Input = 99|0x100U,
    kXBARA1_OutputQtimer4Tmr2Input = 100|0x100U,
    kXBARA1_OutputQtimer4Tmr3Input = 101|0x100U,
    kXBARA1_OutputEwmEwmIn = 102|0x100U,
    kXBARA1_OutputAdcEtcXbar0Trig0 = 103|0x100U,
    kXBARA1_OutputAdcEtcXbar0Trig1 = 104|0x100U,
    kXBARA1_OutputAdcEtcXbar0Trig2 = 105|0x100U,
    kXBARA1_OutputAdcEtcXbar0Trig3 = 106|0x100U,
    kXBARA1_OutputAdcEtcXbar1Trig0 = 107|0x100U,
    kXBARA1_OutputAdcEtcXbar1Trig1 = 108|0x100U,
    kXBARA1_OutputAdcEtcXbar1Trig2 = 109|0x100U,
    kXBARA1_OutputAdcEtcXbar1Trig3 = 110|0x100U,
    kXBARA1_OutputLpi2c1TrgInput = 111|0x100U,
    kXBARA1_OutputLpi2c2TrgInput = 112|0x100U,
    kXBARA1_OutputLpi2c3TrgInput = 113|0x100U,
    kXBARA1_OutputLpi2c4TrgInput = 114|0x100U,
    kXBARA1_OutputLpspi1TrgInput = 115|0x100U,
    kXBARA1_OutputLpspi2TrgInput = 116|0x100U,
    kXBARA1_OutputLpspi3TrgInput = 117|0x100U,
    kXBARA1_OutputLpspi4TrgInput = 118|0x100U,
    kXBARA1_OutputLpuart1TrgInput = 119|0x100U,
    kXBARA1_OutputLpuart2TrgInput = 120|0x100U,
    kXBARA1_OutputLpuart3TrgInput = 121|0x100U,
    kXBARA1_OutputLpuart4TrgInput = 122|0x100U,
    kXBARA1_OutputLpuart5TrgInput = 123|0x100U,
    kXBARA1_OutputLpuart6TrgInput = 124|0x100U,
    kXBARA1_OutputLpuart7TrgInput = 125|0x100U,
    kXBARA1_OutputLpuart8TrgInput = 126|0x100U,
    kXBARA1_OutputFlexio1TriggerIn0 = 127|0x100U,
    kXBARA1_OutputFlexio1TriggerIn1 = 128|0x100U,
    kXBARA1_OutputFlexio2TriggerIn0 = 129|0x100U,
    kXBARA1_OutputFlexio2TriggerIn1 = 130|0x100U,
    kXBARB2_OutputAoi1In00 = 0|0x200U,
    kXBARB2_OutputAoi1In01 = 1|0x200U,
    kXBARB2_OutputAoi1In02 = 2|0x200U,
    kXBARB2_OutputAoi1In03 = 3|0x200U,
    kXBARB2_OutputAoi1In04 = 4|0x200U,
    kXBARB2_OutputAoi1In05 = 5|0x200U,
    kXBARB2_OutputAoi1In06 = 6|0x200U,
    kXBARB2_OutputAoi1In07 = 7|0x200U,
    kXBARB2_OutputAoi1In08 = 8|0x200U,
    kXBARB2_OutputAoi1In09 = 9|0x200U,
    kXBARB2_OutputAoi1In10 = 10|0x200U,
    kXBARB2_OutputAoi1In11 = 11|0x200U,
    kXBARB2_OutputAoi1In12 = 12|0x200U,
    kXBARB2_OutputAoi1In13 = 13|0x200U,
    kXBARB2_OutputAoi1In14 = 14|0x200U,
    kXBARB2_OutputAoi1In15 = 15|0x200U,
    kXBARB3_OutputAoi2In00 = 0|0x300U,
    kXBARB3_OutputAoi2In01 = 1|0x300U,
    kXBARB3_OutputAoi2In02 = 2|0x300U,
    kXBARB3_OutputAoi2In03 = 3|0x300U,
    kXBARB3_OutputAoi2In04 = 4|0x300U,
    kXBARB3_OutputAoi2In05 = 5|0x300U,
    kXBARB3_OutputAoi2In06 = 6|0x300U,
    kXBARB3_OutputAoi2In07 = 7|0x300U,
    kXBARB3_OutputAoi2In08 = 8|0x300U,
    kXBARB3_OutputAoi2In09 = 9|0x300U,
    kXBARB3_OutputAoi2In10 = 10|0x300U,
    kXBARB3_OutputAoi2In11 = 11|0x300U,
    kXBARB3_OutputAoi2In12 = 12|0x300U,
    kXBARB3_OutputAoi2In13 = 13|0x300U,
    kXBARB3_OutputAoi2In14 = 14|0x300U,
    kXBARB3_OutputAoi2In15 = 15|0x300U,
} xbar_output_signal_t;
# 1182 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef enum _dma_request_source
{
    kDmaRequestMuxFlexIO1Request0Request1 = 0|0x100U,
    kDmaRequestMuxFlexIO2Request0Request1 = 1|0x100U,
    kDmaRequestMuxLPUART1Tx = 2|0x100U,
    kDmaRequestMuxLPUART1Rx = 3|0x100U,
    kDmaRequestMuxLPUART3Tx = 4|0x100U,
    kDmaRequestMuxLPUART3Rx = 5|0x100U,
    kDmaRequestMuxLPUART5Tx = 6|0x100U,
    kDmaRequestMuxLPUART5Rx = 7|0x100U,
    kDmaRequestMuxLPUART7Tx = 8|0x100U,
    kDmaRequestMuxLPUART7Rx = 9|0x100U,
    kDmaRequestMuxCAN3 = 11|0x100U,
    kDmaRequestMuxCSI = 12|0x100U,
    kDmaRequestMuxLPSPI1Rx = 13|0x100U,
    kDmaRequestMuxLPSPI1Tx = 14|0x100U,
    kDmaRequestMuxLPSPI3Rx = 15|0x100U,
    kDmaRequestMuxLPSPI3Tx = 16|0x100U,
    kDmaRequestMuxLPI2C1 = 17|0x100U,
    kDmaRequestMuxLPI2C3 = 18|0x100U,
    kDmaRequestMuxSai1Rx = 19|0x100U,
    kDmaRequestMuxSai1Tx = 20|0x100U,
    kDmaRequestMuxSai2Rx = 21|0x100U,
    kDmaRequestMuxSai2Tx = 22|0x100U,
    kDmaRequestMuxADC_ETC = 23|0x100U,
    kDmaRequestMuxADC1 = 24|0x100U,
    kDmaRequestMuxACMP1 = 25|0x100U,
    kDmaRequestMuxACMP3 = 26|0x100U,
    kDmaRequestMuxFlexSPIRx = 28|0x100U,
    kDmaRequestMuxFlexSPITx = 29|0x100U,
    kDmaRequestMuxXBAR1Request0 = 30|0x100U,
    kDmaRequestMuxXBAR1Request1 = 31|0x100U,
    kDmaRequestMuxFlexPWM1CaptureSub0 = 32|0x100U,
    kDmaRequestMuxFlexPWM1CaptureSub1 = 33|0x100U,
    kDmaRequestMuxFlexPWM1CaptureSub2 = 34|0x100U,
    kDmaRequestMuxFlexPWM1CaptureSub3 = 35|0x100U,
    kDmaRequestMuxFlexPWM1ValueSub0 = 36|0x100U,
    kDmaRequestMuxFlexPWM1ValueSub1 = 37|0x100U,
    kDmaRequestMuxFlexPWM1ValueSub2 = 38|0x100U,
    kDmaRequestMuxFlexPWM1ValueSub3 = 39|0x100U,
    kDmaRequestMuxFlexPWM3CaptureSub0 = 40|0x100U,
    kDmaRequestMuxFlexPWM3CaptureSub1 = 41|0x100U,
    kDmaRequestMuxFlexPWM3CaptureSub2 = 42|0x100U,
    kDmaRequestMuxFlexPWM3CaptureSub3 = 43|0x100U,
    kDmaRequestMuxFlexPWM3ValueSub0 = 44|0x100U,
    kDmaRequestMuxFlexPWM3ValueSub1 = 45|0x100U,
    kDmaRequestMuxFlexPWM3ValueSub2 = 46|0x100U,
    kDmaRequestMuxFlexPWM3ValueSub3 = 47|0x100U,
    kDmaRequestMuxQTIMER1CaptTimer0 = 48|0x100U,
    kDmaRequestMuxQTIMER1CaptTimer1 = 49|0x100U,
    kDmaRequestMuxQTIMER1CaptTimer2 = 50|0x100U,
    kDmaRequestMuxQTIMER1CaptTimer3 = 51|0x100U,
    kDmaRequestMuxQTIMER1Cmpld1Timer0Cmpld2Timer1 = 52|0x100U,
    kDmaRequestMuxQTIMER1Cmpld1Timer1Cmpld2Timer0 = 53|0x100U,
    kDmaRequestMuxQTIMER1Cmpld1Timer2Cmpld2Timer3 = 54|0x100U,
    kDmaRequestMuxQTIMER1Cmpld1Timer3Cmpld2Timer2 = 55|0x100U,
    kDmaRequestMuxQTIMER3CaptTimer0Cmpld1Timer0Cmpld2Timer1 = 56|0x100U,
    kDmaRequestMuxQTIMER3CaptTimer1Cmpld1Timer1Cmpld2Timer0 = 57|0x100U,
    kDmaRequestMuxQTIMER3CaptTimer2Cmpld1Timer2Cmpld2Timer3 = 58|0x100U,
    kDmaRequestMuxQTIMER3CaptTimer3Cmpld1Timer3Cmpld2Timer2 = 59|0x100U,
    kDmaRequestMuxFlexSPI2Rx = 60|0x100U,
    kDmaRequestMuxFlexSPI2Tx = 61|0x100U,
    kDmaRequestMuxFlexIO1Request2Request3 = 64|0x100U,
    kDmaRequestMuxFlexIO2Request2Request3 = 65|0x100U,
    kDmaRequestMuxLPUART2Tx = 66|0x100U,
    kDmaRequestMuxLPUART2Rx = 67|0x100U,
    kDmaRequestMuxLPUART4Tx = 68|0x100U,
    kDmaRequestMuxLPUART4Rx = 69|0x100U,
    kDmaRequestMuxLPUART6Tx = 70|0x100U,
    kDmaRequestMuxLPUART6Rx = 71|0x100U,
    kDmaRequestMuxLPUART8Tx = 72|0x100U,
    kDmaRequestMuxLPUART8Rx = 73|0x100U,
    kDmaRequestMuxPxp = 75|0x100U,
    kDmaRequestMuxLCDIF = 76|0x100U,
    kDmaRequestMuxLPSPI2Rx = 77|0x100U,
    kDmaRequestMuxLPSPI2Tx = 78|0x100U,
    kDmaRequestMuxLPSPI4Rx = 79|0x100U,
    kDmaRequestMuxLPSPI4Tx = 80|0x100U,
    kDmaRequestMuxLPI2C2 = 81|0x100U,
    kDmaRequestMuxLPI2C4 = 82|0x100U,
    kDmaRequestMuxSai3Rx = 83|0x100U,
    kDmaRequestMuxSai3Tx = 84|0x100U,
    kDmaRequestMuxSpdifRx = 85|0x100U,
    kDmaRequestMuxSpdifTx = 86|0x100U,
    kDmaRequestMuxADC2 = 88|0x100U,
    kDmaRequestMuxACMP2 = 89|0x100U,
    kDmaRequestMuxACMP4 = 90|0x100U,
    kDmaRequestMuxEnetTimer0 = 92|0x100U,
    kDmaRequestMuxEnetTimer1 = 93|0x100U,
    kDmaRequestMuxXBAR1Request2 = 94|0x100U,
    kDmaRequestMuxXBAR1Request3 = 95|0x100U,
    kDmaRequestMuxFlexPWM2CaptureSub0 = 96|0x100U,
    kDmaRequestMuxFlexPWM2CaptureSub1 = 97|0x100U,
    kDmaRequestMuxFlexPWM2CaptureSub2 = 98|0x100U,
    kDmaRequestMuxFlexPWM2CaptureSub3 = 99|0x100U,
    kDmaRequestMuxFlexPWM2ValueSub0 = 100|0x100U,
    kDmaRequestMuxFlexPWM2ValueSub1 = 101|0x100U,
    kDmaRequestMuxFlexPWM2ValueSub2 = 102|0x100U,
    kDmaRequestMuxFlexPWM2ValueSub3 = 103|0x100U,
    kDmaRequestMuxFlexPWM4CaptureSub0 = 104|0x100U,
    kDmaRequestMuxFlexPWM4CaptureSub1 = 105|0x100U,
    kDmaRequestMuxFlexPWM4CaptureSub2 = 106|0x100U,
    kDmaRequestMuxFlexPWM4CaptureSub3 = 107|0x100U,
    kDmaRequestMuxFlexPWM4ValueSub0 = 108|0x100U,
    kDmaRequestMuxFlexPWM4ValueSub1 = 109|0x100U,
    kDmaRequestMuxFlexPWM4ValueSub2 = 110|0x100U,
    kDmaRequestMuxFlexPWM4ValueSub3 = 111|0x100U,
    kDmaRequestMuxQTIMER2CaptTimer0 = 112|0x100U,
    kDmaRequestMuxQTIMER2CaptTimer1 = 113|0x100U,
    kDmaRequestMuxQTIMER2CaptTimer2 = 114|0x100U,
    kDmaRequestMuxQTIMER2CaptTimer3 = 115|0x100U,
    kDmaRequestMuxQTIMER2Cmpld1Timer0Cmpld2Timer1 = 116|0x100U,
    kDmaRequestMuxQTIMER2Cmpld1Timer1Cmpld2Timer0 = 117|0x100U,
    kDmaRequestMuxQTIMER2Cmpld1Timer2Cmpld2Timer3 = 118|0x100U,
    kDmaRequestMuxQTIMER2Cmpld1Timer3Cmpld2Timer2 = 119|0x100U,
    kDmaRequestMuxQTIMER4CaptTimer0Cmpld1Timer0Cmpld2Timer1 = 120|0x100U,
    kDmaRequestMuxQTIMER4CaptTimer1Cmpld1Timer1Cmpld2Timer0 = 121|0x100U,
    kDmaRequestMuxQTIMER4CaptTimer2Cmpld1Timer2Cmpld2Timer3 = 122|0x100U,
    kDmaRequestMuxQTIMER4CaptTimer3Cmpld1Timer3Cmpld2Timer2 = 123|0x100U,
    kDmaRequestMuxEnet2Timer0 = 124|0x100U,
    kDmaRequestMuxEnet2Timer1 = 125|0x100U,
} dma_request_source_t;
# 1355 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t HC[8];
  volatile const uint32_t HS;
  volatile const uint32_t R[8];
  volatile uint32_t CFG;
  volatile uint32_t GC;
  volatile uint32_t GS;
  volatile uint32_t CV;
  volatile uint32_t OFS;
  volatile uint32_t CAL;
} ADC_Type;
# 1740 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t DONE0_1_IRQ;
  volatile uint32_t DONE2_3_ERR_IRQ;
  volatile uint32_t DMA_CTRL;
  struct {
    volatile uint32_t TRIGn_CTRL;
    volatile uint32_t TRIGn_COUNTER;
    volatile uint32_t TRIGn_CHAIN_1_0;
    volatile uint32_t TRIGn_CHAIN_3_2;
    volatile uint32_t TRIGn_CHAIN_5_4;
    volatile uint32_t TRIGn_CHAIN_7_6;
    volatile const uint32_t TRIGn_RESULT_1_0;
    volatile const uint32_t TRIGn_RESULT_3_2;
    volatile const uint32_t TRIGn_RESULT_5_4;
    volatile const uint32_t TRIGn_RESULT_7_6;
  } TRIG[8];
} ADC_ETC_Type;
# 2857 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MPR;
       uint8_t RESERVED_0[60];
  volatile uint32_t OPACR;
  volatile uint32_t OPACR1;
  volatile uint32_t OPACR2;
  volatile uint32_t OPACR3;
  volatile uint32_t OPACR4;
} AIPSTZ_Type;
# 3607 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  struct {
    volatile uint16_t BFCRT01;
    volatile uint16_t BFCRT23;
  } BFCRT[4];
} AOI_Type;
# 3832 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t ADDR_OFFSET0;
  volatile uint32_t ADDR_OFFSET1;
  volatile uint32_t AES_KEY0_W0;
  volatile uint32_t AES_KEY0_W1;
  volatile uint32_t AES_KEY0_W2;
  volatile uint32_t AES_KEY0_W3;
  volatile uint32_t STATUS;
  volatile uint32_t CTR_NONCE0_W0;
  volatile uint32_t CTR_NONCE0_W1;
  volatile uint32_t CTR_NONCE0_W2;
  volatile uint32_t CTR_NONCE0_W3;
  volatile uint32_t CTR_NONCE1_W0;
  volatile uint32_t CTR_NONCE1_W1;
  volatile uint32_t CTR_NONCE1_W2;
  volatile uint32_t CTR_NONCE1_W3;
  volatile uint32_t REGION1_TOP;
  volatile uint32_t REGION1_BOT;
} BEE_Type;
# 4179 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MCR;
  volatile uint32_t CTRL1;
  volatile uint32_t TIMER;
       uint8_t RESERVED_0[4];
  volatile uint32_t RXMGMASK;
  volatile uint32_t RX14MASK;
  volatile uint32_t RX15MASK;
  volatile uint32_t ECR;
  volatile uint32_t ESR1;
  volatile uint32_t IMASK2;
  volatile uint32_t IMASK1;
  volatile uint32_t IFLAG2;
  volatile uint32_t IFLAG1;
  volatile uint32_t CTRL2;
  volatile const uint32_t ESR2;
       uint8_t RESERVED_1[8];
  volatile const uint32_t CRCR;
  volatile uint32_t RXFGMASK;
  volatile const uint32_t RXFIR;
  volatile uint32_t CBT;
       uint8_t RESERVED_2[4];
  volatile const uint32_t DBG1;
  volatile const uint32_t DBG2;
       uint8_t RESERVED_3[32];
  union {
    struct {
      volatile uint32_t CS;
      volatile uint32_t ID;
      volatile uint32_t WORD[2];
    } MB_8B[64];
    struct {
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[4];
      } MB_16B_L[21];
           uint8_t RESERVED_0[8];
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[4];
      } MB_16B_H[21];
    } MB_16B;
    struct {
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[8];
      } MB_32B_L[12];
           uint8_t RESERVED_0[32];
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[8];
      } MB_32B_H[12];
    } MB_32B;
    struct {
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[16];
      } MB_64B_L[7];
           uint8_t RESERVED_0[8];
      struct {
        volatile uint32_t CS;
        volatile uint32_t ID;
        volatile uint32_t WORD[16];
      } MB_64B_H[7];
    } MB_64B;
    struct {
      volatile uint32_t CS;
      volatile uint32_t ID;
      volatile uint32_t WORD0;
      volatile uint32_t WORD1;
    } MB[64];
  };
       uint8_t RESERVED_4[1024];
  volatile uint32_t RXIMR[64];
       uint8_t RESERVED_5[96];
  volatile uint32_t GFWR;
       uint8_t RESERVED_6[540];
  volatile uint32_t FDCTRL;
  volatile uint32_t FDCBT;
  volatile const uint32_t FDCRC;
} CAN_Type;
# 6512 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CCR;
       uint8_t RESERVED_0[4];
  volatile const uint32_t CSR;
  volatile uint32_t CCSR;
  volatile uint32_t CACRR;
  volatile uint32_t CBCDR;
  volatile uint32_t CBCMR;
  volatile uint32_t CSCMR1;
  volatile uint32_t CSCMR2;
  volatile uint32_t CSCDR1;
  volatile uint32_t CS1CDR;
  volatile uint32_t CS2CDR;
  volatile uint32_t CDCDR;
       uint8_t RESERVED_1[4];
  volatile uint32_t CSCDR2;
  volatile uint32_t CSCDR3;
       uint8_t RESERVED_2[8];
  volatile const uint32_t CDHIPR;
       uint8_t RESERVED_3[8];
  volatile uint32_t CLPCR;
  volatile uint32_t CISR;
  volatile uint32_t CIMR;
  volatile uint32_t CCOSR;
  volatile uint32_t CGPR;
  volatile uint32_t CCGR0;
  volatile uint32_t CCGR1;
  volatile uint32_t CCGR2;
  volatile uint32_t CCGR3;
  volatile uint32_t CCGR4;
  volatile uint32_t CCGR5;
  volatile uint32_t CCGR6;
  volatile uint32_t CCGR7;
  volatile uint32_t CMEOR;
} CCM_Type;
# 8716 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t PLL_ARM;
  volatile uint32_t PLL_ARM_SET;
  volatile uint32_t PLL_ARM_CLR;
  volatile uint32_t PLL_ARM_TOG;
  volatile uint32_t PLL_USB1;
  volatile uint32_t PLL_USB1_SET;
  volatile uint32_t PLL_USB1_CLR;
  volatile uint32_t PLL_USB1_TOG;
  volatile uint32_t PLL_USB2;
  volatile uint32_t PLL_USB2_SET;
  volatile uint32_t PLL_USB2_CLR;
  volatile uint32_t PLL_USB2_TOG;
  volatile uint32_t PLL_SYS;
  volatile uint32_t PLL_SYS_SET;
  volatile uint32_t PLL_SYS_CLR;
  volatile uint32_t PLL_SYS_TOG;
  volatile uint32_t PLL_SYS_SS;
       uint8_t RESERVED_0[12];
  volatile uint32_t PLL_SYS_NUM;
       uint8_t RESERVED_1[12];
  volatile uint32_t PLL_SYS_DENOM;
       uint8_t RESERVED_2[12];
  volatile uint32_t PLL_AUDIO;
  volatile uint32_t PLL_AUDIO_SET;
  volatile uint32_t PLL_AUDIO_CLR;
  volatile uint32_t PLL_AUDIO_TOG;
  volatile uint32_t PLL_AUDIO_NUM;
       uint8_t RESERVED_3[12];
  volatile uint32_t PLL_AUDIO_DENOM;
       uint8_t RESERVED_4[12];
  volatile uint32_t PLL_VIDEO;
  volatile uint32_t PLL_VIDEO_SET;
  volatile uint32_t PLL_VIDEO_CLR;
  volatile uint32_t PLL_VIDEO_TOG;
  volatile uint32_t PLL_VIDEO_NUM;
       uint8_t RESERVED_5[12];
  volatile uint32_t PLL_VIDEO_DENOM;
       uint8_t RESERVED_6[28];
  volatile uint32_t PLL_ENET;
  volatile uint32_t PLL_ENET_SET;
  volatile uint32_t PLL_ENET_CLR;
  volatile uint32_t PLL_ENET_TOG;
  volatile uint32_t PFD_480;
  volatile uint32_t PFD_480_SET;
  volatile uint32_t PFD_480_CLR;
  volatile uint32_t PFD_480_TOG;
  volatile uint32_t PFD_528;
  volatile uint32_t PFD_528_SET;
  volatile uint32_t PFD_528_CLR;
  volatile uint32_t PFD_528_TOG;
       uint8_t RESERVED_7[64];
  volatile uint32_t MISC0;
  volatile uint32_t MISC0_SET;
  volatile uint32_t MISC0_CLR;
  volatile uint32_t MISC0_TOG;
  volatile uint32_t MISC1;
  volatile uint32_t MISC1_SET;
  volatile uint32_t MISC1_CLR;
  volatile uint32_t MISC1_TOG;
  volatile uint32_t MISC2;
  volatile uint32_t MISC2_SET;
  volatile uint32_t MISC2_CLR;
  volatile uint32_t MISC2_TOG;
} CCM_ANALOG_Type;
# 11662 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[16];
  volatile uint32_t ISCR;
} CM7_MCM_Type;
# 11831 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint8_t CR0;
  volatile uint8_t CR1;
  volatile uint8_t FPR;
  volatile uint8_t SCR;
  volatile uint8_t DACCR;
  volatile uint8_t MUXCR;
} CMP_Type;
# 12102 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CR1;
  volatile uint32_t CR2;
  volatile uint32_t CR3;
  volatile const uint32_t STATFIFO;
  volatile const uint32_t RFIFO;
  volatile uint32_t RXCNT;
  volatile uint32_t SR;
       uint8_t RESERVED_0[4];
  volatile uint32_t DMASA_STATFIFO;
  volatile uint32_t DMATS_STATFIFO;
  volatile uint32_t DMASA_FB1;
  volatile uint32_t DMASA_FB2;
  volatile uint32_t FBUF_PARA;
  volatile uint32_t IMAG_PARA;
       uint8_t RESERVED_1[16];
  volatile uint32_t CR18;
  volatile uint32_t CR19;
} CSI_Type;
# 12884 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CSL[32];
       uint8_t RESERVED_0[384];
  volatile uint32_t HP0;
       uint8_t RESERVED_1[20];
  volatile uint32_t SA;
       uint8_t RESERVED_2[316];
  volatile uint32_t HPCONTROL0;
} CSU_Type;
# 13625 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t REG0;
  volatile uint32_t REG1;
  volatile uint32_t REG2;
  volatile uint32_t REG3;
} DCDC_Type;
# 13973 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t CTRL_SET;
  volatile uint32_t CTRL_CLR;
  volatile uint32_t CTRL_TOG;
  volatile uint32_t STAT;
  volatile uint32_t STAT_SET;
  volatile uint32_t STAT_CLR;
  volatile uint32_t STAT_TOG;
  volatile uint32_t CHANNELCTRL;
  volatile uint32_t CHANNELCTRL_SET;
  volatile uint32_t CHANNELCTRL_CLR;
  volatile uint32_t CHANNELCTRL_TOG;
  volatile uint32_t CAPABILITY0;
       uint8_t RESERVED_0[12];
  volatile const uint32_t CAPABILITY1;
       uint8_t RESERVED_1[12];
  volatile uint32_t CONTEXT;
       uint8_t RESERVED_2[12];
  volatile uint32_t KEY;
       uint8_t RESERVED_3[12];
  volatile uint32_t KEYDATA;
       uint8_t RESERVED_4[12];
  volatile const uint32_t PACKET0;
       uint8_t RESERVED_5[12];
  volatile const uint32_t PACKET1;
       uint8_t RESERVED_6[12];
  volatile const uint32_t PACKET2;
       uint8_t RESERVED_7[12];
  volatile const uint32_t PACKET3;
       uint8_t RESERVED_8[12];
  volatile const uint32_t PACKET4;
       uint8_t RESERVED_9[12];
  volatile const uint32_t PACKET5;
       uint8_t RESERVED_10[12];
  volatile const uint32_t PACKET6;
       uint8_t RESERVED_11[28];
  volatile uint32_t CH0CMDPTR;
       uint8_t RESERVED_12[12];
  volatile uint32_t CH0SEMA;
       uint8_t RESERVED_13[12];
  volatile uint32_t CH0STAT;
  volatile uint32_t CH0STAT_SET;
  volatile uint32_t CH0STAT_CLR;
  volatile uint32_t CH0STAT_TOG;
  volatile uint32_t CH0OPTS;
  volatile uint32_t CH0OPTS_SET;
  volatile uint32_t CH0OPTS_CLR;
  volatile uint32_t CH0OPTS_TOG;
  volatile uint32_t CH1CMDPTR;
       uint8_t RESERVED_14[12];
  volatile uint32_t CH1SEMA;
       uint8_t RESERVED_15[12];
  volatile uint32_t CH1STAT;
  volatile uint32_t CH1STAT_SET;
  volatile uint32_t CH1STAT_CLR;
  volatile uint32_t CH1STAT_TOG;
  volatile uint32_t CH1OPTS;
  volatile uint32_t CH1OPTS_SET;
  volatile uint32_t CH1OPTS_CLR;
  volatile uint32_t CH1OPTS_TOG;
  volatile uint32_t CH2CMDPTR;
       uint8_t RESERVED_16[12];
  volatile uint32_t CH2SEMA;
       uint8_t RESERVED_17[12];
  volatile uint32_t CH2STAT;
  volatile uint32_t CH2STAT_SET;
  volatile uint32_t CH2STAT_CLR;
  volatile uint32_t CH2STAT_TOG;
  volatile uint32_t CH2OPTS;
  volatile uint32_t CH2OPTS_SET;
  volatile uint32_t CH2OPTS_CLR;
  volatile uint32_t CH2OPTS_TOG;
  volatile uint32_t CH3CMDPTR;
       uint8_t RESERVED_18[12];
  volatile uint32_t CH3SEMA;
       uint8_t RESERVED_19[12];
  volatile uint32_t CH3STAT;
  volatile uint32_t CH3STAT_SET;
  volatile uint32_t CH3STAT_CLR;
  volatile uint32_t CH3STAT_TOG;
  volatile uint32_t CH3OPTS;
  volatile uint32_t CH3OPTS_SET;
  volatile uint32_t CH3OPTS_CLR;
  volatile uint32_t CH3OPTS_TOG;
       uint8_t RESERVED_20[512];
  volatile uint32_t DBGSELECT;
       uint8_t RESERVED_21[12];
  volatile const uint32_t DBGDATA;
       uint8_t RESERVED_22[12];
  volatile uint32_t PAGETABLE;
       uint8_t RESERVED_23[12];
  volatile const uint32_t VERSION;
} DCP_Type;
# 15970 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CR;
  volatile const uint32_t ES;
       uint8_t RESERVED_0[4];
  volatile uint32_t ERQ;
       uint8_t RESERVED_1[4];
  volatile uint32_t EEI;
  volatile uint8_t CEEI;
  volatile uint8_t SEEI;
  volatile uint8_t CERQ;
  volatile uint8_t SERQ;
  volatile uint8_t CDNE;
  volatile uint8_t SSRT;
  volatile uint8_t CERR;
  volatile uint8_t CINT;
       uint8_t RESERVED_2[4];
  volatile uint32_t INT;
       uint8_t RESERVED_3[4];
  volatile uint32_t ERR;
       uint8_t RESERVED_4[4];
  volatile const uint32_t HRS;
       uint8_t RESERVED_5[12];
  volatile uint32_t EARS;
       uint8_t RESERVED_6[184];
  volatile uint8_t DCHPRI3;
  volatile uint8_t DCHPRI2;
  volatile uint8_t DCHPRI1;
  volatile uint8_t DCHPRI0;
  volatile uint8_t DCHPRI7;
  volatile uint8_t DCHPRI6;
  volatile uint8_t DCHPRI5;
  volatile uint8_t DCHPRI4;
  volatile uint8_t DCHPRI11;
  volatile uint8_t DCHPRI10;
  volatile uint8_t DCHPRI9;
  volatile uint8_t DCHPRI8;
  volatile uint8_t DCHPRI15;
  volatile uint8_t DCHPRI14;
  volatile uint8_t DCHPRI13;
  volatile uint8_t DCHPRI12;
  volatile uint8_t DCHPRI19;
  volatile uint8_t DCHPRI18;
  volatile uint8_t DCHPRI17;
  volatile uint8_t DCHPRI16;
  volatile uint8_t DCHPRI23;
  volatile uint8_t DCHPRI22;
  volatile uint8_t DCHPRI21;
  volatile uint8_t DCHPRI20;
  volatile uint8_t DCHPRI27;
  volatile uint8_t DCHPRI26;
  volatile uint8_t DCHPRI25;
  volatile uint8_t DCHPRI24;
  volatile uint8_t DCHPRI31;
  volatile uint8_t DCHPRI30;
  volatile uint8_t DCHPRI29;
  volatile uint8_t DCHPRI28;
       uint8_t RESERVED_7[3808];
  struct {
    volatile uint32_t SADDR;
    volatile uint16_t SOFF;
    volatile uint16_t ATTR;
    union {
      volatile uint32_t NBYTES_MLNO;
      volatile uint32_t NBYTES_MLOFFNO;
      volatile uint32_t NBYTES_MLOFFYES;
    };
    volatile int32_t SLAST;
    volatile uint32_t DADDR;
    volatile uint16_t DOFF;
    union {
      volatile uint16_t CITER_ELINKNO;
      volatile uint16_t CITER_ELINKYES;
    };
    volatile int32_t DLAST_SGA;
    volatile uint16_t CSR;
    union {
      volatile uint16_t BITER_ELINKNO;
      volatile uint16_t BITER_ELINKYES;
    };
  } TCD[32];
} DMA_Type;
# 19470 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CHCFG[32];
} DMAMUX_Type;
# 19552 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint16_t CTRL;
  volatile uint16_t FILT;
  volatile uint16_t WTR;
  volatile uint16_t POSD;
  volatile const uint16_t POSDH;
  volatile uint16_t REV;
  volatile const uint16_t REVH;
  volatile uint16_t UPOS;
  volatile uint16_t LPOS;
  volatile const uint16_t UPOSH;
  volatile const uint16_t LPOSH;
  volatile uint16_t UINIT;
  volatile uint16_t LINIT;
  volatile const uint16_t IMR;
  volatile uint16_t TST;
  volatile uint16_t CTRL2;
  volatile uint16_t UMOD;
  volatile uint16_t LMOD;
  volatile uint16_t UCOMP;
  volatile uint16_t LCOMP;
} ENC_Type;
# 20116 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[4];
  volatile uint32_t EIR;
  volatile uint32_t EIMR;
       uint8_t RESERVED_1[4];
  volatile uint32_t RDAR;
  volatile uint32_t TDAR;
       uint8_t RESERVED_2[12];
  volatile uint32_t ECR;
       uint8_t RESERVED_3[24];
  volatile uint32_t MMFR;
  volatile uint32_t MSCR;
       uint8_t RESERVED_4[28];
  volatile uint32_t MIBC;
       uint8_t RESERVED_5[28];
  volatile uint32_t RCR;
       uint8_t RESERVED_6[60];
  volatile uint32_t TCR;
       uint8_t RESERVED_7[28];
  volatile uint32_t PALR;
  volatile uint32_t PAUR;
  volatile uint32_t OPD;
  volatile uint32_t TXIC[1];
       uint8_t RESERVED_8[12];
  volatile uint32_t RXIC[1];
       uint8_t RESERVED_9[20];
  volatile uint32_t IAUR;
  volatile uint32_t IALR;
  volatile uint32_t GAUR;
  volatile uint32_t GALR;
       uint8_t RESERVED_10[28];
  volatile uint32_t TFWR;
       uint8_t RESERVED_11[56];
  volatile uint32_t RDSR;
  volatile uint32_t TDSR;
  volatile uint32_t MRBR;
       uint8_t RESERVED_12[4];
  volatile uint32_t RSFL;
  volatile uint32_t RSEM;
  volatile uint32_t RAEM;
  volatile uint32_t RAFL;
  volatile uint32_t TSEM;
  volatile uint32_t TAEM;
  volatile uint32_t TAFL;
  volatile uint32_t TIPG;
  volatile uint32_t FTRL;
       uint8_t RESERVED_13[12];
  volatile uint32_t TACC;
  volatile uint32_t RACC;
       uint8_t RESERVED_14[60];
  volatile const uint32_t RMON_T_PACKETS;
  volatile const uint32_t RMON_T_BC_PKT;
  volatile const uint32_t RMON_T_MC_PKT;
  volatile const uint32_t RMON_T_CRC_ALIGN;
  volatile const uint32_t RMON_T_UNDERSIZE;
  volatile const uint32_t RMON_T_OVERSIZE;
  volatile const uint32_t RMON_T_FRAG;
  volatile const uint32_t RMON_T_JAB;
  volatile const uint32_t RMON_T_COL;
  volatile const uint32_t RMON_T_P64;
  volatile const uint32_t RMON_T_P65TO127;
  volatile const uint32_t RMON_T_P128TO255;
  volatile const uint32_t RMON_T_P256TO511;
  volatile const uint32_t RMON_T_P512TO1023;
  volatile const uint32_t RMON_T_P1024TO2047;
  volatile const uint32_t RMON_T_P_GTE2048;
  volatile const uint32_t RMON_T_OCTETS;
       uint8_t RESERVED_15[4];
  volatile const uint32_t IEEE_T_FRAME_OK;
  volatile const uint32_t IEEE_T_1COL;
  volatile const uint32_t IEEE_T_MCOL;
  volatile const uint32_t IEEE_T_DEF;
  volatile const uint32_t IEEE_T_LCOL;
  volatile const uint32_t IEEE_T_EXCOL;
  volatile const uint32_t IEEE_T_MACERR;
  volatile const uint32_t IEEE_T_CSERR;
  volatile const uint32_t IEEE_T_SQE;
  volatile const uint32_t IEEE_T_FDXFC;
  volatile const uint32_t IEEE_T_OCTETS_OK;
       uint8_t RESERVED_16[12];
  volatile const uint32_t RMON_R_PACKETS;
  volatile const uint32_t RMON_R_BC_PKT;
  volatile const uint32_t RMON_R_MC_PKT;
  volatile const uint32_t RMON_R_CRC_ALIGN;
  volatile const uint32_t RMON_R_UNDERSIZE;
  volatile const uint32_t RMON_R_OVERSIZE;
  volatile const uint32_t RMON_R_FRAG;
  volatile const uint32_t RMON_R_JAB;
       uint8_t RESERVED_17[4];
  volatile const uint32_t RMON_R_P64;
  volatile const uint32_t RMON_R_P65TO127;
  volatile const uint32_t RMON_R_P128TO255;
  volatile const uint32_t RMON_R_P256TO511;
  volatile const uint32_t RMON_R_P512TO1023;
  volatile const uint32_t RMON_R_P1024TO2047;
  volatile const uint32_t RMON_R_P_GTE2048;
  volatile const uint32_t RMON_R_OCTETS;
  volatile const uint32_t IEEE_R_DROP;
  volatile const uint32_t IEEE_R_FRAME_OK;
  volatile const uint32_t IEEE_R_CRC;
  volatile const uint32_t IEEE_R_ALIGN;
  volatile const uint32_t IEEE_R_MACERR;
  volatile const uint32_t IEEE_R_FDXFC;
  volatile const uint32_t IEEE_R_OCTETS_OK;
       uint8_t RESERVED_18[284];
  volatile uint32_t ATCR;
  volatile uint32_t ATVR;
  volatile uint32_t ATOFF;
  volatile uint32_t ATPER;
  volatile uint32_t ATCOR;
  volatile uint32_t ATINC;
  volatile const uint32_t ATSTMP;
       uint8_t RESERVED_19[488];
  volatile uint32_t TGSR;
  struct {
    volatile uint32_t TCSR;
    volatile uint32_t TCCR;
  } CHANNEL[4];
} ENET_Type;
# 21998 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint8_t CTRL;
  volatile uint8_t SERV;
  volatile uint8_t CMPL;
  volatile uint8_t CMPH;
  volatile uint8_t CLKCTRL;
  volatile uint8_t CLKPRESCALER;
} EWM_Type;
# 22135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t VERID;
  volatile const uint32_t PARAM;
  volatile uint32_t CTRL;
  volatile const uint32_t PIN;
  volatile uint32_t SHIFTSTAT;
  volatile uint32_t SHIFTERR;
  volatile uint32_t TIMSTAT;
       uint8_t RESERVED_0[4];
  volatile uint32_t SHIFTSIEN;
  volatile uint32_t SHIFTEIEN;
  volatile uint32_t TIMIEN;
       uint8_t RESERVED_1[4];
  volatile uint32_t SHIFTSDEN;
       uint8_t RESERVED_2[12];
  volatile uint32_t SHIFTSTATE;
       uint8_t RESERVED_3[60];
  volatile uint32_t SHIFTCTL[8];
       uint8_t RESERVED_4[96];
  volatile uint32_t SHIFTCFG[8];
       uint8_t RESERVED_5[224];
  volatile uint32_t SHIFTBUF[8];
       uint8_t RESERVED_6[96];
  volatile uint32_t SHIFTBUFBIS[8];
       uint8_t RESERVED_7[96];
  volatile uint32_t SHIFTBUFBYS[8];
       uint8_t RESERVED_8[96];
  volatile uint32_t SHIFTBUFBBS[8];
       uint8_t RESERVED_9[96];
  volatile uint32_t TIMCTL[8];
       uint8_t RESERVED_10[96];
  volatile uint32_t TIMCFG[8];
       uint8_t RESERVED_11[96];
  volatile uint32_t TIMCMP[8];
       uint8_t RESERVED_12[352];
  volatile uint32_t SHIFTBUFNBS[8];
       uint8_t RESERVED_13[96];
  volatile uint32_t SHIFTBUFHWS[8];
       uint8_t RESERVED_14[96];
  volatile uint32_t SHIFTBUFNIS[8];
} FLEXIO_Type;
# 22772 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t TCM_CTRL;
       uint8_t RESERVED_0[12];
  volatile uint32_t INT_STATUS;
  volatile uint32_t INT_STAT_EN;
  volatile uint32_t INT_SIG_EN;
} FLEXRAM_Type;
# 23010 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MCR0;
  volatile uint32_t MCR1;
  volatile uint32_t MCR2;
  volatile uint32_t AHBCR;
  volatile uint32_t INTEN;
  volatile uint32_t INTR;
  volatile uint32_t LUTKEY;
  volatile uint32_t LUTCR;
  volatile uint32_t AHBRXBUFCR0[4];
       uint8_t RESERVED_0[48];
  volatile uint32_t FLSHCR0[4];
  volatile uint32_t FLSHCR1[4];
  volatile uint32_t FLSHCR2[4];
       uint8_t RESERVED_1[4];
  volatile uint32_t FLSHCR4;
       uint8_t RESERVED_2[8];
  volatile uint32_t IPCR0;
  volatile uint32_t IPCR1;
       uint8_t RESERVED_3[8];
  volatile uint32_t IPCMD;
       uint8_t RESERVED_4[4];
  volatile uint32_t IPRXFCR;
  volatile uint32_t IPTXFCR;
  volatile uint32_t DLLCR[2];
       uint8_t RESERVED_5[24];
  volatile const uint32_t STS0;
  volatile const uint32_t STS1;
  volatile const uint32_t STS2;
  volatile const uint32_t AHBSPNDSTS;
  volatile const uint32_t IPRXFSTS;
  volatile const uint32_t IPTXFSTS;
       uint8_t RESERVED_6[8];
  volatile const uint32_t RFDR[32];
  volatile uint32_t TFDR[32];
  volatile uint32_t LUT[64];
} FLEXSPI_Type;
# 24087 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CNTR;
       uint8_t RESERVED_0[4];
  volatile uint32_t IMR[4];
  volatile const uint32_t ISR[4];
       uint8_t RESERVED_1[12];
  volatile uint32_t IMR5;
  volatile const uint32_t ISR5;
} GPC_Type;
# 24229 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t DR;
  volatile uint32_t GDIR;
  volatile const uint32_t PSR;
  volatile uint32_t ICR1;
  volatile uint32_t ICR2;
  volatile uint32_t IMR;
  volatile uint32_t ISR;
  volatile uint32_t EDGE_SEL;
       uint8_t RESERVED_0[100];
  volatile uint32_t DR_SET;
  volatile uint32_t DR_CLEAR;
  volatile uint32_t DR_TOGGLE;
} GPIO_Type;
# 24742 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CR;
  volatile uint32_t PR;
  volatile uint32_t SR;
  volatile uint32_t IR;
  volatile uint32_t OCR[3];
  volatile const uint32_t ICR[2];
  volatile const uint32_t CNT;
} GPT_Type;
# 25131 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t VERID;
  volatile const uint32_t PARAM;
  volatile uint32_t TCSR;
  volatile uint32_t TCR1;
  volatile uint32_t TCR2;
  volatile uint32_t TCR3;
  volatile uint32_t TCR4;
  volatile uint32_t TCR5;
  volatile uint32_t TDR[4];
       uint8_t RESERVED_0[16];
  volatile const uint32_t TFR[4];
       uint8_t RESERVED_1[16];
  volatile uint32_t TMR;
       uint8_t RESERVED_2[36];
  volatile uint32_t RCSR;
  volatile uint32_t RCR1;
  volatile uint32_t RCR2;
  volatile uint32_t RCR3;
  volatile uint32_t RCR4;
  volatile uint32_t RCR5;
  volatile const uint32_t RDR[4];
       uint8_t RESERVED_3[16];
  volatile const uint32_t RFR[4];
       uint8_t RESERVED_4[16];
  volatile uint32_t RMR;
} I2S_Type;
# 26059 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[20];
  volatile uint32_t SW_MUX_CTL_PAD[124];
  volatile uint32_t SW_PAD_CTL_PAD[124];
  volatile uint32_t SELECT_INPUT[154];
  volatile uint32_t SW_MUX_CTL_PAD_1[22];
  volatile uint32_t SW_PAD_CTL_PAD_1[22];
  volatile uint32_t SELECT_INPUT_1[33];
} IOMUXC_Type;
# 26360 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint32_t GPR0;
  volatile uint32_t GPR1;
  volatile uint32_t GPR2;
  volatile uint32_t GPR3;
  volatile uint32_t GPR4;
  volatile uint32_t GPR5;
  volatile uint32_t GPR6;
  volatile uint32_t GPR7;
  volatile uint32_t GPR8;
       uint32_t GPR9;
  volatile uint32_t GPR10;
  volatile uint32_t GPR11;
  volatile uint32_t GPR12;
  volatile uint32_t GPR13;
  volatile uint32_t GPR14;
       uint32_t GPR15;
  volatile uint32_t GPR16;
  volatile uint32_t GPR17;
  volatile uint32_t GPR18;
  volatile uint32_t GPR19;
  volatile uint32_t GPR20;
  volatile uint32_t GPR21;
  volatile uint32_t GPR22;
  volatile uint32_t GPR23;
  volatile uint32_t GPR24;
  volatile uint32_t GPR25;
  volatile uint32_t GPR26;
  volatile uint32_t GPR27;
  volatile uint32_t GPR28;
  volatile uint32_t GPR29;
  volatile uint32_t GPR30;
  volatile uint32_t GPR31;
  volatile uint32_t GPR32;
  volatile uint32_t GPR33;
  volatile uint32_t GPR34;
} IOMUXC_GPR_Type;
# 28770 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t SW_MUX_CTL_PAD_WAKEUP;
  volatile uint32_t SW_MUX_CTL_PAD_PMIC_ON_REQ;
  volatile uint32_t SW_MUX_CTL_PAD_PMIC_STBY_REQ;
  volatile uint32_t SW_PAD_CTL_PAD_TEST_MODE;
  volatile uint32_t SW_PAD_CTL_PAD_POR_B;
  volatile uint32_t SW_PAD_CTL_PAD_ONOFF;
  volatile uint32_t SW_PAD_CTL_PAD_WAKEUP;
  volatile uint32_t SW_PAD_CTL_PAD_PMIC_ON_REQ;
  volatile uint32_t SW_PAD_CTL_PAD_PMIC_STBY_REQ;
} IOMUXC_SNVS_Type;
# 29332 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint32_t GPR0;
       uint32_t GPR1;
       uint32_t GPR2;
  volatile uint32_t GPR3;
} IOMUXC_SNVS_GPR_Type;
# 29439 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint16_t KPCR;
  volatile uint16_t KPSR;
  volatile uint16_t KDDR;
  volatile uint16_t KPDR;
} KPP_Type;
# 29596 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t CTRL_SET;
  volatile uint32_t CTRL_CLR;
  volatile uint32_t CTRL_TOG;
  volatile uint32_t CTRL1;
  volatile uint32_t CTRL1_SET;
  volatile uint32_t CTRL1_CLR;
  volatile uint32_t CTRL1_TOG;
  volatile uint32_t CTRL2;
  volatile uint32_t CTRL2_SET;
  volatile uint32_t CTRL2_CLR;
  volatile uint32_t CTRL2_TOG;
  volatile uint32_t TRANSFER_COUNT;
       uint8_t RESERVED_0[12];
  volatile uint32_t CUR_BUF;
       uint8_t RESERVED_1[12];
  volatile uint32_t NEXT_BUF;
       uint8_t RESERVED_2[28];
  volatile uint32_t VDCTRL0;
  volatile uint32_t VDCTRL0_SET;
  volatile uint32_t VDCTRL0_CLR;
  volatile uint32_t VDCTRL0_TOG;
  volatile uint32_t VDCTRL1;
       uint8_t RESERVED_3[12];
  volatile uint32_t VDCTRL2;
       uint8_t RESERVED_4[12];
  volatile uint32_t VDCTRL3;
       uint8_t RESERVED_5[12];
  volatile uint32_t VDCTRL4;
       uint8_t RESERVED_6[220];
  volatile uint32_t BM_ERROR_STAT;
       uint8_t RESERVED_7[12];
  volatile uint32_t CRC_STAT;
       uint8_t RESERVED_8[12];
  volatile const uint32_t STAT;
       uint8_t RESERVED_9[460];
  volatile uint32_t PIGEONCTRL0;
  volatile uint32_t PIGEONCTRL0_SET;
  volatile uint32_t PIGEONCTRL0_CLR;
  volatile uint32_t PIGEONCTRL0_TOG;
  volatile uint32_t PIGEONCTRL1;
  volatile uint32_t PIGEONCTRL1_SET;
  volatile uint32_t PIGEONCTRL1_CLR;
  volatile uint32_t PIGEONCTRL1_TOG;
  volatile uint32_t PIGEONCTRL2;
  volatile uint32_t PIGEONCTRL2_SET;
  volatile uint32_t PIGEONCTRL2_CLR;
  volatile uint32_t PIGEONCTRL2_TOG;
       uint8_t RESERVED_10[1104];
  struct {
    volatile uint32_t PIGEON_0;
         uint8_t RESERVED_0[12];
    volatile uint32_t PIGEON_1;
         uint8_t RESERVED_1[12];
    volatile uint32_t PIGEON_2;
         uint8_t RESERVED_2[28];
  } PIGEON[12];
  volatile uint32_t LUT_CTRL;
       uint8_t RESERVED_11[12];
  volatile uint32_t LUT0_ADDR;
       uint8_t RESERVED_12[12];
  volatile uint32_t LUT0_DATA;
       uint8_t RESERVED_13[12];
  volatile uint32_t LUT1_ADDR;
       uint8_t RESERVED_14[12];
  volatile uint32_t LUT1_DATA;
} LCDIF_Type;
# 31445 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t VERID;
  volatile const uint32_t PARAM;
       uint8_t RESERVED_0[8];
  volatile uint32_t MCR;
  volatile uint32_t MSR;
  volatile uint32_t MIER;
  volatile uint32_t MDER;
  volatile uint32_t MCFGR0;
  volatile uint32_t MCFGR1;
  volatile uint32_t MCFGR2;
  volatile uint32_t MCFGR3;
       uint8_t RESERVED_1[16];
  volatile uint32_t MDMR;
       uint8_t RESERVED_2[4];
  volatile uint32_t MCCR0;
       uint8_t RESERVED_3[4];
  volatile uint32_t MCCR1;
       uint8_t RESERVED_4[4];
  volatile uint32_t MFCR;
  volatile const uint32_t MFSR;
  volatile uint32_t MTDR;
       uint8_t RESERVED_5[12];
  volatile const uint32_t MRDR;
       uint8_t RESERVED_6[156];
  volatile uint32_t SCR;
  volatile uint32_t SSR;
  volatile uint32_t SIER;
  volatile uint32_t SDER;
       uint8_t RESERVED_7[4];
  volatile uint32_t SCFGR1;
  volatile uint32_t SCFGR2;
       uint8_t RESERVED_8[20];
  volatile uint32_t SAMR;
       uint8_t RESERVED_9[12];
  volatile const uint32_t SASR;
  volatile uint32_t STAR;
       uint8_t RESERVED_10[8];
  volatile uint32_t STDR;
       uint8_t RESERVED_11[12];
  volatile const uint32_t SRDR;
} LPI2C_Type;
# 32620 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t VERID;
  volatile const uint32_t PARAM;
       uint8_t RESERVED_0[8];
  volatile uint32_t CR;
  volatile uint32_t SR;
  volatile uint32_t IER;
  volatile uint32_t DER;
  volatile uint32_t CFGR0;
  volatile uint32_t CFGR1;
       uint8_t RESERVED_1[8];
  volatile uint32_t DMR0;
  volatile uint32_t DMR1;
       uint8_t RESERVED_2[8];
  volatile uint32_t CCR;
       uint8_t RESERVED_3[20];
  volatile uint32_t FCR;
  volatile const uint32_t FSR;
  volatile uint32_t TCR;
  volatile uint32_t TDR;
       uint8_t RESERVED_4[8];
  volatile const uint32_t RSR;
  volatile const uint32_t RDR;
} LPSPI_Type;
# 33315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t VERID;
  volatile const uint32_t PARAM;
  volatile uint32_t GLOBAL;
  volatile uint32_t PINCFG;
  volatile uint32_t BAUD;
  volatile uint32_t STAT;
  volatile uint32_t CTRL;
  volatile uint32_t DATA;
  volatile uint32_t MATCH;
  volatile uint32_t MODIR;
  volatile uint32_t FIFO;
  volatile uint32_t WATER;
} LPUART_Type;
# 34344 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t CTRL_SET;
  volatile uint32_t CTRL_CLR;
  volatile uint32_t CTRL_TOG;
  volatile uint32_t TIMING;
       uint8_t RESERVED_0[12];
  volatile uint32_t DATA;
       uint8_t RESERVED_1[12];
  volatile uint32_t READ_CTRL;
       uint8_t RESERVED_2[12];
  volatile uint32_t READ_FUSE_DATA;
       uint8_t RESERVED_3[12];
  volatile uint32_t SW_STICKY;
       uint8_t RESERVED_4[12];
  volatile uint32_t SCS;
  volatile uint32_t SCS_SET;
  volatile uint32_t SCS_CLR;
  volatile uint32_t SCS_TOG;
       uint8_t RESERVED_5[32];
  volatile const uint32_t VERSION;
       uint8_t RESERVED_6[108];
  volatile uint32_t TIMING2;
       uint8_t RESERVED_7[764];
  volatile uint32_t LOCK;
       uint8_t RESERVED_8[12];
  volatile uint32_t CFG0;
       uint8_t RESERVED_9[12];
  volatile uint32_t CFG1;
       uint8_t RESERVED_10[12];
  volatile uint32_t CFG2;
       uint8_t RESERVED_11[12];
  volatile uint32_t CFG3;
       uint8_t RESERVED_12[12];
  volatile uint32_t CFG4;
       uint8_t RESERVED_13[12];
  volatile uint32_t CFG5;
       uint8_t RESERVED_14[12];
  volatile uint32_t CFG6;
       uint8_t RESERVED_15[12];
  volatile uint32_t MEM0;
       uint8_t RESERVED_16[12];
  volatile uint32_t MEM1;
       uint8_t RESERVED_17[12];
  volatile uint32_t MEM2;
       uint8_t RESERVED_18[12];
  volatile uint32_t MEM3;
       uint8_t RESERVED_19[12];
  volatile uint32_t MEM4;
       uint8_t RESERVED_20[12];
  volatile uint32_t ANA0;
       uint8_t RESERVED_21[12];
  volatile uint32_t ANA1;
       uint8_t RESERVED_22[12];
  volatile uint32_t ANA2;
       uint8_t RESERVED_23[140];
  volatile uint32_t SRK0;
       uint8_t RESERVED_24[12];
  volatile uint32_t SRK1;
       uint8_t RESERVED_25[12];
  volatile uint32_t SRK2;
       uint8_t RESERVED_26[12];
  volatile uint32_t SRK3;
       uint8_t RESERVED_27[12];
  volatile uint32_t SRK4;
       uint8_t RESERVED_28[12];
  volatile uint32_t SRK5;
       uint8_t RESERVED_29[12];
  volatile uint32_t SRK6;
       uint8_t RESERVED_30[12];
  volatile uint32_t SRK7;
       uint8_t RESERVED_31[12];
  volatile uint32_t SJC_RESP0;
       uint8_t RESERVED_32[12];
  volatile uint32_t SJC_RESP1;
       uint8_t RESERVED_33[12];
  volatile uint32_t MAC0;
       uint8_t RESERVED_34[12];
  volatile uint32_t MAC1;
       uint8_t RESERVED_35[12];
  volatile uint32_t MAC2;
       uint8_t RESERVED_36[28];
  volatile uint32_t GP1;
       uint8_t RESERVED_37[12];
  volatile uint32_t GP2;
       uint8_t RESERVED_38[12];
  volatile uint32_t SW_GP1;
       uint8_t RESERVED_39[12];
  volatile uint32_t SW_GP20;
       uint8_t RESERVED_40[12];
  volatile uint32_t SW_GP21;
       uint8_t RESERVED_41[12];
  volatile uint32_t SW_GP22;
       uint8_t RESERVED_42[12];
  volatile uint32_t SW_GP23;
       uint8_t RESERVED_43[12];
  volatile uint32_t MISC_CONF0;
       uint8_t RESERVED_44[12];
  volatile uint32_t MISC_CONF1;
       uint8_t RESERVED_45[12];
  volatile uint32_t SRK_REVOKE;
       uint8_t RESERVED_46[396];
  volatile uint32_t GP30;
       uint8_t RESERVED_47[12];
  volatile uint32_t GP31;
       uint8_t RESERVED_48[12];
  volatile uint32_t GP32;
       uint8_t RESERVED_49[12];
  volatile uint32_t GP33;
       uint8_t RESERVED_50[12];
  volatile uint32_t GP40;
       uint8_t RESERVED_51[12];
  volatile uint32_t GP41;
       uint8_t RESERVED_52[12];
  volatile uint32_t GP42;
       uint8_t RESERVED_53[12];
  volatile uint32_t GP43;
} OCOTP_Type;
# 35407 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[544];
  volatile uint32_t MEGA_CTRL;
  volatile uint32_t MEGA_PUPSCR;
  volatile uint32_t MEGA_PDNSCR;
  volatile uint32_t MEGA_SR;
       uint8_t RESERVED_1[112];
  volatile uint32_t CPU_CTRL;
  volatile uint32_t CPU_PUPSCR;
  volatile uint32_t CPU_PDNSCR;
  volatile uint32_t CPU_SR;
} PGC_Type;
# 35556 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MCR;
       uint8_t RESERVED_0[220];
  volatile const uint32_t LTMR64H;
  volatile const uint32_t LTMR64L;
       uint8_t RESERVED_1[24];
  struct {
    volatile uint32_t LDVAL;
    volatile const uint32_t CVAL;
    volatile uint32_t TCTRL;
    volatile uint32_t TFLG;
  } CHANNEL[4];
} PIT_Type;
# 35724 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[272];
  volatile uint32_t REG_1P1;
  volatile uint32_t REG_1P1_SET;
  volatile uint32_t REG_1P1_CLR;
  volatile uint32_t REG_1P1_TOG;
  volatile uint32_t REG_3P0;
  volatile uint32_t REG_3P0_SET;
  volatile uint32_t REG_3P0_CLR;
  volatile uint32_t REG_3P0_TOG;
  volatile uint32_t REG_2P5;
  volatile uint32_t REG_2P5_SET;
  volatile uint32_t REG_2P5_CLR;
  volatile uint32_t REG_2P5_TOG;
  volatile uint32_t REG_CORE;
  volatile uint32_t REG_CORE_SET;
  volatile uint32_t REG_CORE_CLR;
  volatile uint32_t REG_CORE_TOG;
  volatile uint32_t MISC0;
  volatile uint32_t MISC0_SET;
  volatile uint32_t MISC0_CLR;
  volatile uint32_t MISC0_TOG;
  volatile uint32_t MISC1;
  volatile uint32_t MISC1_SET;
  volatile uint32_t MISC1_CLR;
  volatile uint32_t MISC1_TOG;
  volatile uint32_t MISC2;
  volatile uint32_t MISC2_SET;
  volatile uint32_t MISC2_CLR;
  volatile uint32_t MISC2_TOG;
} PMU_Type;
# 38248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  struct {
    volatile const uint16_t CNT;
    volatile uint16_t INIT;
    volatile uint16_t CTRL2;
    volatile uint16_t CTRL;
         uint8_t RESERVED_0[2];
    volatile uint16_t VAL0;
    volatile uint16_t FRACVAL1;
    volatile uint16_t VAL1;
    volatile uint16_t FRACVAL2;
    volatile uint16_t VAL2;
    volatile uint16_t FRACVAL3;
    volatile uint16_t VAL3;
    volatile uint16_t FRACVAL4;
    volatile uint16_t VAL4;
    volatile uint16_t FRACVAL5;
    volatile uint16_t VAL5;
    volatile uint16_t FRCTRL;
    volatile uint16_t OCTRL;
    volatile uint16_t STS;
    volatile uint16_t INTEN;
    volatile uint16_t DMAEN;
    volatile uint16_t TCTRL;
    volatile uint16_t DISMAP[1];
         uint8_t RESERVED_1[2];
    volatile uint16_t DTCNT0;
    volatile uint16_t DTCNT1;
    volatile uint16_t CAPTCTRLA;
    volatile uint16_t CAPTCOMPA;
    volatile uint16_t CAPTCTRLB;
    volatile uint16_t CAPTCOMPB;
    volatile uint16_t CAPTCTRLX;
    volatile uint16_t CAPTCOMPX;
    volatile const uint16_t CVAL0;
    volatile const uint16_t CVAL0CYC;
    volatile const uint16_t CVAL1;
    volatile const uint16_t CVAL1CYC;
    volatile const uint16_t CVAL2;
    volatile const uint16_t CVAL2CYC;
    volatile const uint16_t CVAL3;
    volatile const uint16_t CVAL3CYC;
    volatile const uint16_t CVAL4;
    volatile const uint16_t CVAL4CYC;
    volatile const uint16_t CVAL5;
    volatile const uint16_t CVAL5CYC;
         uint8_t RESERVED_2[8];
  } SM[4];
  volatile uint16_t OUTEN;
  volatile uint16_t MASK;
  volatile uint16_t SWCOUT;
  volatile uint16_t DTSRCSEL;
  volatile uint16_t MCTRL;
  volatile uint16_t MCTRL2;
  volatile uint16_t FCTRL;
  volatile uint16_t FSTS;
  volatile uint16_t FFILT;
  volatile uint16_t FTST;
  volatile uint16_t FCTRL2;
} PWM_Type;
# 40044 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CTRL;
  volatile uint32_t CTRL_SET;
  volatile uint32_t CTRL_CLR;
  volatile uint32_t CTRL_TOG;
  volatile uint32_t STAT;
  volatile uint32_t STAT_SET;
  volatile uint32_t STAT_CLR;
  volatile uint32_t STAT_TOG;
  volatile uint32_t OUT_CTRL;
  volatile uint32_t OUT_CTRL_SET;
  volatile uint32_t OUT_CTRL_CLR;
  volatile uint32_t OUT_CTRL_TOG;
  volatile uint32_t OUT_BUF;
       uint8_t RESERVED_0[12];
  volatile uint32_t OUT_BUF2;
       uint8_t RESERVED_1[12];
  volatile uint32_t OUT_PITCH;
       uint8_t RESERVED_2[12];
  volatile uint32_t OUT_LRC;
       uint8_t RESERVED_3[12];
  volatile uint32_t OUT_PS_ULC;
       uint8_t RESERVED_4[12];
  volatile uint32_t OUT_PS_LRC;
       uint8_t RESERVED_5[12];
  volatile uint32_t OUT_AS_ULC;
       uint8_t RESERVED_6[12];
  volatile uint32_t OUT_AS_LRC;
       uint8_t RESERVED_7[12];
  volatile uint32_t PS_CTRL;
  volatile uint32_t PS_CTRL_SET;
  volatile uint32_t PS_CTRL_CLR;
  volatile uint32_t PS_CTRL_TOG;
  volatile uint32_t PS_BUF;
       uint8_t RESERVED_8[12];
  volatile uint32_t PS_UBUF;
       uint8_t RESERVED_9[12];
  volatile uint32_t PS_VBUF;
       uint8_t RESERVED_10[12];
  volatile uint32_t PS_PITCH;
       uint8_t RESERVED_11[12];
  volatile uint32_t PS_BACKGROUND;
       uint8_t RESERVED_12[12];
  volatile uint32_t PS_SCALE;
       uint8_t RESERVED_13[12];
  volatile uint32_t PS_OFFSET;
       uint8_t RESERVED_14[12];
  volatile uint32_t PS_CLRKEYLOW;
       uint8_t RESERVED_15[12];
  volatile uint32_t PS_CLRKEYHIGH;
       uint8_t RESERVED_16[12];
  volatile uint32_t AS_CTRL;
       uint8_t RESERVED_17[12];
  volatile uint32_t AS_BUF;
       uint8_t RESERVED_18[12];
  volatile uint32_t AS_PITCH;
       uint8_t RESERVED_19[12];
  volatile uint32_t AS_CLRKEYLOW;
       uint8_t RESERVED_20[12];
  volatile uint32_t AS_CLRKEYHIGH;
       uint8_t RESERVED_21[12];
  volatile uint32_t CSC1_COEF0;
       uint8_t RESERVED_22[12];
  volatile uint32_t CSC1_COEF1;
       uint8_t RESERVED_23[12];
  volatile uint32_t CSC1_COEF2;
       uint8_t RESERVED_24[348];
  volatile uint32_t POWER;
       uint8_t RESERVED_25[220];
  volatile uint32_t NEXT;
       uint8_t RESERVED_26[60];
  volatile uint32_t PORTER_DUFF_CTRL;
} PXP_Type;
# 41603 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[212];
  volatile uint32_t ROMPATCHD[8];
  volatile uint32_t ROMPATCHCNTL;
       uint32_t ROMPATCHENH;
  volatile uint32_t ROMPATCHENL;
  volatile uint32_t ROMPATCHA[16];
       uint8_t RESERVED_1[200];
  volatile uint32_t ROMPATCHSR;
} ROMC_Type;
# 41737 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t CS;
  volatile uint32_t CNT;
  volatile uint32_t TOVAL;
  volatile uint32_t WIN;
} RTWDOG_Type;
# 41955 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MCR;
  volatile uint32_t IOCR;
  volatile uint32_t BMCR0;
  volatile uint32_t BMCR1;
  volatile uint32_t BR[9];
  volatile uint32_t DLLCR;
  volatile uint32_t INTEN;
  volatile uint32_t INTR;
  volatile uint32_t SDRAMCR0;
  volatile uint32_t SDRAMCR1;
  volatile uint32_t SDRAMCR2;
  volatile uint32_t SDRAMCR3;
  volatile uint32_t NANDCR0;
  volatile uint32_t NANDCR1;
  volatile uint32_t NANDCR2;
  volatile uint32_t NANDCR3;
  volatile uint32_t NORCR0;
  volatile uint32_t NORCR1;
  volatile uint32_t NORCR2;
  volatile uint32_t NORCR3;
  volatile uint32_t SRAMCR0;
  volatile uint32_t SRAMCR1;
  volatile uint32_t SRAMCR2;
       uint32_t SRAMCR3;
  volatile uint32_t DBICR0;
  volatile uint32_t DBICR1;
       uint8_t RESERVED_0[8];
  volatile uint32_t IPCR0;
  volatile uint32_t IPCR1;
  volatile uint32_t IPCR2;
  volatile uint32_t IPCMD;
  volatile uint32_t IPTXDAT;
       uint8_t RESERVED_1[12];
  volatile const uint32_t IPRXDAT;
       uint8_t RESERVED_2[12];
  volatile const uint32_t STS0;
       uint32_t STS1;
  volatile const uint32_t STS2;
       uint32_t STS3;
       uint32_t STS4;
       uint32_t STS5;
       uint32_t STS6;
       uint32_t STS7;
       uint32_t STS8;
       uint32_t STS9;
       uint32_t STS10;
       uint32_t STS11;
  volatile const uint32_t STS12;
  volatile const uint32_t STS13;
       uint32_t STS14;
       uint32_t STS15;
} SEMC_Type;
# 43488 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t HPLR;
  volatile uint32_t HPCOMR;
  volatile uint32_t HPCR;
  volatile uint32_t HPSICR;
  volatile uint32_t HPSVCR;
  volatile uint32_t HPSR;
  volatile uint32_t HPSVSR;
  volatile uint32_t HPHACIVR;
  volatile const uint32_t HPHACR;
  volatile uint32_t HPRTCMR;
  volatile uint32_t HPRTCLR;
  volatile uint32_t HPTAMR;
  volatile uint32_t HPTALR;
  volatile uint32_t LPLR;
  volatile uint32_t LPCR;
  volatile uint32_t LPMKCR;
  volatile uint32_t LPSVCR;
       uint8_t RESERVED_0[4];
  volatile uint32_t LPSECR;
  volatile uint32_t LPSR;
  volatile uint32_t LPSRTCMR;
  volatile uint32_t LPSRTCLR;
  volatile uint32_t LPTAR;
  volatile uint32_t LPSMCMR;
  volatile uint32_t LPSMCLR;
  volatile uint32_t LPLVDR;
  volatile uint32_t LPGPR0_LEGACY_ALIAS;
  volatile uint32_t LPZMKR[8];
       uint8_t RESERVED_1[4];
  volatile uint32_t LPGPR_ALIAS[4];
       uint8_t RESERVED_2[96];
  volatile uint32_t LPGPR[8];
       uint8_t RESERVED_3[2776];
  volatile const uint32_t HPVIDR1;
  volatile const uint32_t HPVIDR2;
} SNVS_Type;
# 44732 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t SCR;
  volatile uint32_t SRCD;
  volatile uint32_t SRPC;
  volatile uint32_t SIE;
  union {
    volatile uint32_t SIC;
    volatile const uint32_t SIS;
  };
  volatile const uint32_t SRL;
  volatile const uint32_t SRR;
  volatile const uint32_t SRCSH;
  volatile const uint32_t SRCSL;
  volatile const uint32_t SRU;
  volatile const uint32_t SRQ;
  volatile uint32_t STL;
  volatile uint32_t STR;
  volatile uint32_t STCSCH;
  volatile uint32_t STCSCL;
       uint8_t RESERVED_0[8];
  volatile const uint32_t SRFM;
       uint8_t RESERVED_1[8];
  volatile uint32_t STC;
} SPDIF_Type;
# 45441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t SCR;
  volatile const uint32_t SBMR1;
  volatile uint32_t SRSR;
       uint8_t RESERVED_0[16];
  volatile const uint32_t SBMR2;
  volatile uint32_t GPR[10];
} SRC_Type;
# 45697 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[384];
  volatile uint32_t TEMPSENSE0;
  volatile uint32_t TEMPSENSE0_SET;
  volatile uint32_t TEMPSENSE0_CLR;
  volatile uint32_t TEMPSENSE0_TOG;
  volatile uint32_t TEMPSENSE1;
  volatile uint32_t TEMPSENSE1_SET;
  volatile uint32_t TEMPSENSE1_CLR;
  volatile uint32_t TEMPSENSE1_TOG;
       uint8_t RESERVED_1[240];
  volatile uint32_t TEMPSENSE2;
  volatile uint32_t TEMPSENSE2_SET;
  volatile uint32_t TEMPSENSE2_CLR;
  volatile uint32_t TEMPSENSE2_TOG;
} TEMPMON_Type;
# 46002 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  struct {
    volatile uint16_t COMP1;
    volatile uint16_t COMP2;
    volatile uint16_t CAPT;
    volatile uint16_t LOAD;
    volatile uint16_t HOLD;
    volatile uint16_t CNTR;
    volatile uint16_t CTRL;
    volatile uint16_t SCTRL;
    volatile uint16_t CMPLD1;
    volatile uint16_t CMPLD2;
    volatile uint16_t CSCTRL;
    volatile uint16_t FILT;
    volatile uint16_t DMA;
         uint8_t RESERVED_0[4];
    volatile uint16_t ENBL;
  } CHANNEL[4];
} TMR_Type;
# 46555 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t MCTL;
  volatile uint32_t SCMISC;
  volatile uint32_t PKRRNG;
  union {
    volatile uint32_t PKRMAX;
    volatile const uint32_t PKRSQ;
  };
  volatile uint32_t SDCTL;
  union {
    volatile uint32_t SBLIM;
    volatile const uint32_t TOTSAM;
  };
  volatile uint32_t FRQMIN;
  union {
    volatile const uint32_t FRQCNT;
    volatile uint32_t FRQMAX;
  };
  union {
    volatile const uint32_t SCMC;
    volatile uint32_t SCML;
  };
  union {
    volatile const uint32_t SCR1C;
    volatile uint32_t SCR1L;
  };
  union {
    volatile const uint32_t SCR2C;
    volatile uint32_t SCR2L;
  };
  union {
    volatile const uint32_t SCR3C;
    volatile uint32_t SCR3L;
  };
  union {
    volatile const uint32_t SCR4C;
    volatile uint32_t SCR4L;
  };
  union {
    volatile const uint32_t SCR5C;
    volatile uint32_t SCR5L;
  };
  union {
    volatile const uint32_t SCR6PC;
    volatile uint32_t SCR6PL;
  };
  volatile const uint32_t STATUS;
  volatile const uint32_t ENT[16];
  volatile const uint32_t PKRCNT10;
  volatile const uint32_t PKRCNT32;
  volatile const uint32_t PKRCNT54;
  volatile const uint32_t PKRCNT76;
  volatile const uint32_t PKRCNT98;
  volatile const uint32_t PKRCNTBA;
  volatile const uint32_t PKRCNTDC;
  volatile const uint32_t PKRCNTFE;
  volatile uint32_t SEC_CFG;
  volatile uint32_t INT_CTRL;
  volatile uint32_t INT_MASK;
  volatile const uint32_t INT_STATUS;
       uint8_t RESERVED_0[64];
  volatile const uint32_t VID1;
  volatile const uint32_t VID2;
} TRNG_Type;
# 47334 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t BASIC_SETTING;
       uint8_t RESERVED_0[12];
  volatile uint32_t PRE_CHARGE_TIME;
       uint8_t RESERVED_1[12];
  volatile uint32_t FLOW_CONTROL;
       uint8_t RESERVED_2[12];
  volatile const uint32_t MEASEURE_VALUE;
       uint8_t RESERVED_3[12];
  volatile uint32_t INT_EN;
       uint8_t RESERVED_4[12];
  volatile uint32_t INT_SIG_EN;
       uint8_t RESERVED_5[12];
  volatile uint32_t INT_STATUS;
       uint8_t RESERVED_6[12];
  volatile uint32_t DEBUG_MODE;
       uint8_t RESERVED_7[12];
  volatile uint32_t DEBUG_MODE2;
} TSC_Type;
# 47832 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile const uint32_t ID;
  volatile const uint32_t HWGENERAL;
  volatile const uint32_t HWHOST;
  volatile const uint32_t HWDEVICE;
  volatile const uint32_t HWTXBUF;
  volatile const uint32_t HWRXBUF;
       uint8_t RESERVED_0[104];
  volatile uint32_t GPTIMER0LD;
  volatile uint32_t GPTIMER0CTRL;
  volatile uint32_t GPTIMER1LD;
  volatile uint32_t GPTIMER1CTRL;
  volatile uint32_t SBUSCFG;
       uint8_t RESERVED_1[108];
  volatile const uint8_t CAPLENGTH;
       uint8_t RESERVED_2[1];
  volatile const uint16_t HCIVERSION;
  volatile const uint32_t HCSPARAMS;
  volatile const uint32_t HCCPARAMS;
       uint8_t RESERVED_3[20];
  volatile const uint16_t DCIVERSION;
       uint8_t RESERVED_4[2];
  volatile const uint32_t DCCPARAMS;
       uint8_t RESERVED_5[24];
  volatile uint32_t USBCMD;
  volatile uint32_t USBSTS;
  volatile uint32_t USBINTR;
  volatile uint32_t FRINDEX;
       uint8_t RESERVED_6[4];
  union {
    volatile uint32_t DEVICEADDR;
    volatile uint32_t PERIODICLISTBASE;
  };
  union {
    volatile uint32_t ASYNCLISTADDR;
    volatile uint32_t ENDPTLISTADDR;
  };
       uint8_t RESERVED_7[4];
  volatile uint32_t BURSTSIZE;
  volatile uint32_t TXFILLTUNING;
       uint8_t RESERVED_8[16];
  volatile uint32_t ENDPTNAK;
  volatile uint32_t ENDPTNAKEN;
  volatile const uint32_t CONFIGFLAG;
  volatile uint32_t PORTSC1;
       uint8_t RESERVED_9[28];
  volatile uint32_t OTGSC;
  volatile uint32_t USBMODE;
  volatile uint32_t ENDPTSETUPSTAT;
  volatile uint32_t ENDPTPRIME;
  volatile uint32_t ENDPTFLUSH;
  volatile const uint32_t ENDPTSTAT;
  volatile uint32_t ENDPTCOMPLETE;
  volatile uint32_t ENDPTCTRL0;
  volatile uint32_t ENDPTCTRL[7];
} USB_Type;
# 49573 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[2048];
  volatile uint32_t USB_OTGn_CTRL;
       uint8_t RESERVED_1[20];
  volatile uint32_t USB_OTGn_PHY_CTRL_0;
} USBNC_Type;
# 49723 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t PWD;
  volatile uint32_t PWD_SET;
  volatile uint32_t PWD_CLR;
  volatile uint32_t PWD_TOG;
  volatile uint32_t TX;
  volatile uint32_t TX_SET;
  volatile uint32_t TX_CLR;
  volatile uint32_t TX_TOG;
  volatile uint32_t RX;
  volatile uint32_t RX_SET;
  volatile uint32_t RX_CLR;
  volatile uint32_t RX_TOG;
  volatile uint32_t CTRL;
  volatile uint32_t CTRL_SET;
  volatile uint32_t CTRL_CLR;
  volatile uint32_t CTRL_TOG;
  volatile uint32_t STATUS;
       uint8_t RESERVED_0[12];
  volatile uint32_t DEBUGr;
  volatile uint32_t DEBUG_SET;
  volatile uint32_t DEBUG_CLR;
  volatile uint32_t DEBUG_TOG;
  volatile const uint32_t DEBUG0_STATUS;
       uint8_t RESERVED_1[12];
  volatile uint32_t DEBUG1;
  volatile uint32_t DEBUG1_SET;
  volatile uint32_t DEBUG1_CLR;
  volatile uint32_t DEBUG1_TOG;
  volatile const uint32_t VERSION;
} USBPHY_Type;
# 51147 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[416];
  struct {
    volatile uint32_t VBUS_DETECT;
    volatile uint32_t VBUS_DETECT_SET;
    volatile uint32_t VBUS_DETECT_CLR;
    volatile uint32_t VBUS_DETECT_TOG;
    volatile uint32_t CHRG_DETECT;
    volatile uint32_t CHRG_DETECT_SET;
    volatile uint32_t CHRG_DETECT_CLR;
    volatile uint32_t CHRG_DETECT_TOG;
    volatile const uint32_t VBUS_DETECT_STAT;
         uint8_t RESERVED_0[12];
    volatile const uint32_t CHRG_DETECT_STAT;
         uint8_t RESERVED_1[12];
    volatile uint32_t LOOPBACK;
    volatile uint32_t LOOPBACK_SET;
    volatile uint32_t LOOPBACK_CLR;
    volatile uint32_t LOOPBACK_TOG;
    volatile uint32_t MISC;
    volatile uint32_t MISC_SET;
    volatile uint32_t MISC_CLR;
    volatile uint32_t MISC_TOG;
  } INSTANCE[2];
  volatile const uint32_t DIGPROG;
} USB_ANALOG_Type;
# 51655 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint32_t DS_ADDR;
  volatile uint32_t BLK_ATT;
  volatile uint32_t CMD_ARG;
  volatile uint32_t CMD_XFR_TYP;
  volatile const uint32_t CMD_RSP0;
  volatile const uint32_t CMD_RSP1;
  volatile const uint32_t CMD_RSP2;
  volatile const uint32_t CMD_RSP3;
  volatile uint32_t DATA_BUFF_ACC_PORT;
  volatile const uint32_t PRES_STATE;
  volatile uint32_t PROT_CTRL;
  volatile uint32_t SYS_CTRL;
  volatile uint32_t INT_STATUS;
  volatile uint32_t INT_STATUS_EN;
  volatile uint32_t INT_SIGNAL_EN;
  volatile uint32_t AUTOCMD12_ERR_STATUS;
  volatile uint32_t HOST_CTRL_CAP;
  volatile uint32_t WTMK_LVL;
  volatile uint32_t MIX_CTRL;
       uint8_t RESERVED_0[4];
  volatile uint32_t FORCE_EVENT;
  volatile const uint32_t ADMA_ERR_STATUS;
  volatile uint32_t ADMA_SYS_ADDR;
       uint8_t RESERVED_1[4];
  volatile uint32_t DLL_CTRL;
  volatile const uint32_t DLL_STATUS;
  volatile uint32_t CLK_TUNE_CTRL_STATUS;
       uint8_t RESERVED_2[84];
  volatile uint32_t VEND_SPEC;
  volatile uint32_t MMC_BOOT;
  volatile uint32_t VEND_SPEC2;
  volatile uint32_t TUNING_CTRL;
} USDHC_Type;
# 53524 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint16_t WCR;
  volatile uint16_t WSR;
  volatile const uint16_t WRSR;
  volatile uint16_t WICR;
  volatile uint16_t WMCR;
} WDOG_Type;
# 53739 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint16_t SEL0;
  volatile uint16_t SEL1;
  volatile uint16_t SEL2;
  volatile uint16_t SEL3;
  volatile uint16_t SEL4;
  volatile uint16_t SEL5;
  volatile uint16_t SEL6;
  volatile uint16_t SEL7;
  volatile uint16_t SEL8;
  volatile uint16_t SEL9;
  volatile uint16_t SEL10;
  volatile uint16_t SEL11;
  volatile uint16_t SEL12;
  volatile uint16_t SEL13;
  volatile uint16_t SEL14;
  volatile uint16_t SEL15;
  volatile uint16_t SEL16;
  volatile uint16_t SEL17;
  volatile uint16_t SEL18;
  volatile uint16_t SEL19;
  volatile uint16_t SEL20;
  volatile uint16_t SEL21;
  volatile uint16_t SEL22;
  volatile uint16_t SEL23;
  volatile uint16_t SEL24;
  volatile uint16_t SEL25;
  volatile uint16_t SEL26;
  volatile uint16_t SEL27;
  volatile uint16_t SEL28;
  volatile uint16_t SEL29;
  volatile uint16_t SEL30;
  volatile uint16_t SEL31;
  volatile uint16_t SEL32;
  volatile uint16_t SEL33;
  volatile uint16_t SEL34;
  volatile uint16_t SEL35;
  volatile uint16_t SEL36;
  volatile uint16_t SEL37;
  volatile uint16_t SEL38;
  volatile uint16_t SEL39;
  volatile uint16_t SEL40;
  volatile uint16_t SEL41;
  volatile uint16_t SEL42;
  volatile uint16_t SEL43;
  volatile uint16_t SEL44;
  volatile uint16_t SEL45;
  volatile uint16_t SEL46;
  volatile uint16_t SEL47;
  volatile uint16_t SEL48;
  volatile uint16_t SEL49;
  volatile uint16_t SEL50;
  volatile uint16_t SEL51;
  volatile uint16_t SEL52;
  volatile uint16_t SEL53;
  volatile uint16_t SEL54;
  volatile uint16_t SEL55;
  volatile uint16_t SEL56;
  volatile uint16_t SEL57;
  volatile uint16_t SEL58;
  volatile uint16_t SEL59;
  volatile uint16_t SEL60;
  volatile uint16_t SEL61;
  volatile uint16_t SEL62;
  volatile uint16_t SEL63;
  volatile uint16_t SEL64;
  volatile uint16_t SEL65;
  volatile uint16_t CTRL0;
  volatile uint16_t CTRL1;
} XBARA_Type;
# 54786 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
  volatile uint16_t SEL0;
  volatile uint16_t SEL1;
  volatile uint16_t SEL2;
  volatile uint16_t SEL3;
  volatile uint16_t SEL4;
  volatile uint16_t SEL5;
  volatile uint16_t SEL6;
  volatile uint16_t SEL7;
} XBARB_Type;
# 54937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/mimxrt/MIMXRT1062.h"
typedef struct {
       uint8_t RESERVED_0[336];
  volatile uint32_t MISC0;
  volatile uint32_t MISC0_SET;
  volatile uint32_t MISC0_CLR;
  volatile uint32_t MISC0_TOG;
       uint8_t RESERVED_1[272];
  volatile uint32_t LOWPWR_CTRL;
  volatile uint32_t LOWPWR_CTRL_SET;
  volatile uint32_t LOWPWR_CTRL_CLR;
  volatile uint32_t LOWPWR_CTRL_TOG;
       uint8_t RESERVED_2[32];
  volatile uint32_t OSC_CONFIG0;
  volatile uint32_t OSC_CONFIG0_SET;
  volatile uint32_t OSC_CONFIG0_CLR;
  volatile uint32_t OSC_CONFIG0_TOG;
  volatile uint32_t OSC_CONFIG1;
  volatile uint32_t OSC_CONFIG1_SET;
  volatile uint32_t OSC_CONFIG1_CLR;
  volatile uint32_t OSC_CONFIG1_TOG;
  volatile uint32_t OSC_CONFIG2;
  volatile uint32_t OSC_CONFIG2_SET;
  volatile uint32_t OSC_CONFIG2_CLR;
  volatile uint32_t OSC_CONFIG2_TOG;
} XTALOSC24M_Type;
# 27 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_device_registers.h" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/MIMXRT1062_features.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_device_registers.h" 2
# 23 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 2
# 79 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h"
enum _status_groups
{
    kStatusGroup_Generic = 0,
    kStatusGroup_FLASH = 1,
    kStatusGroup_LPSPI = 4,
    kStatusGroup_FLEXIO_SPI = 5,
    kStatusGroup_DSPI = 6,
    kStatusGroup_FLEXIO_UART = 7,
    kStatusGroup_FLEXIO_I2C = 8,
    kStatusGroup_LPI2C = 9,
    kStatusGroup_UART = 10,
    kStatusGroup_I2C = 11,
    kStatusGroup_LPSCI = 12,
    kStatusGroup_LPUART = 13,
    kStatusGroup_SPI = 14,
    kStatusGroup_XRDC = 15,
    kStatusGroup_SEMA42 = 16,
    kStatusGroup_SDHC = 17,
    kStatusGroup_SDMMC = 18,
    kStatusGroup_SAI = 19,
    kStatusGroup_MCG = 20,
    kStatusGroup_SCG = 21,
    kStatusGroup_SDSPI = 22,
    kStatusGroup_FLEXIO_I2S = 23,
    kStatusGroup_FLEXIO_MCULCD = 24,
    kStatusGroup_FLASHIAP = 25,
    kStatusGroup_FLEXCOMM_I2C = 26,
    kStatusGroup_I2S = 27,
    kStatusGroup_IUART = 28,
    kStatusGroup_CSI = 29,
    kStatusGroup_MIPI_DSI = 30,
    kStatusGroup_SDRAMC = 35,
    kStatusGroup_POWER = 39,
    kStatusGroup_ENET = 40,
    kStatusGroup_PHY = 41,
    kStatusGroup_TRGMUX = 42,
    kStatusGroup_SMARTCARD = 43,
    kStatusGroup_LMEM = 44,
    kStatusGroup_QSPI = 45,
    kStatusGroup_DMA = 50,
    kStatusGroup_EDMA = 51,
    kStatusGroup_DMAMGR = 52,
    kStatusGroup_FLEXCAN = 53,
    kStatusGroup_LTC = 54,
    kStatusGroup_FLEXIO_CAMERA = 55,
    kStatusGroup_LPC_SPI = 56,
    kStatusGroup_LPC_USART = 57,
    kStatusGroup_DMIC = 58,
    kStatusGroup_SDIF = 59,
    kStatusGroup_SPIFI = 60,
    kStatusGroup_OTP = 61,
    kStatusGroup_MCAN = 62,
    kStatusGroup_CAAM = 63,
    kStatusGroup_ECSPI = 64,
    kStatusGroup_USDHC = 65,
    kStatusGroup_LPC_I2C = 66,
    kStatusGroup_DCP = 67,
    kStatusGroup_MSCAN = 68,
    kStatusGroup_ESAI = 69,
    kStatusGroup_FLEXSPI = 70,
    kStatusGroup_MMDC = 71,
    kStatusGroup_PDM = 72,
    kStatusGroup_SDMA = 73,
    kStatusGroup_ICS = 74,
    kStatusGroup_SPDIF = 75,
    kStatusGroup_LPC_MINISPI = 76,
    kStatusGroup_HASHCRYPT = 77,
    kStatusGroup_LPC_SPI_SSP = 78,
    kStatusGroup_I3C = 79,
    kStatusGroup_LPC_I2C_1 = 97,
    kStatusGroup_NOTIFIER = 98,
    kStatusGroup_DebugConsole = 99,
    kStatusGroup_SEMC = 100,
    kStatusGroup_ApplicationRangeStart = 101,
    kStatusGroup_IAP = 102,
    kStatusGroup_SFA = 103,
    kStatusGroup_SPC = 104,
    kStatusGroup_PUF = 105,
    kStatusGroup_TOUCH_PANEL = 106,
    kStatusGroup_VBAT = 107,

    kStatusGroup_HAL_GPIO = 121,
    kStatusGroup_HAL_UART = 122,
    kStatusGroup_HAL_TIMER = 123,
    kStatusGroup_HAL_SPI = 124,
    kStatusGroup_HAL_I2C = 125,
    kStatusGroup_HAL_FLASH = 126,
    kStatusGroup_HAL_PWM = 127,
    kStatusGroup_HAL_RNG = 128,
    kStatusGroup_HAL_I2S = 129,
    kStatusGroup_TIMERMANAGER = 135,
    kStatusGroup_SERIALMANAGER = 136,
    kStatusGroup_LED = 137,
    kStatusGroup_BUTTON = 138,
    kStatusGroup_EXTERN_EEPROM = 139,
    kStatusGroup_SHELL = 140,
    kStatusGroup_MEM_MANAGER = 141,
    kStatusGroup_LIST = 142,
    kStatusGroup_OSA = 143,
    kStatusGroup_COMMON_TASK = 144,
    kStatusGroup_MSG = 145,
    kStatusGroup_SDK_OCOTP = 146,
    kStatusGroup_SDK_FLEXSPINOR = 147,
    kStatusGroup_CODEC = 148,
    kStatusGroup_ASRC = 149,
    kStatusGroup_OTFAD = 150,
    kStatusGroup_SDIOSLV = 151,
    kStatusGroup_MECC = 152,
    kStatusGroup_ENET_QOS = 153,
    kStatusGroup_LOG = 154,
    kStatusGroup_I3CBUS = 155,
    kStatusGroup_QSCI = 156,
    kStatusGroup_SNT = 157,
    kStatusGroup_QUEUEDSPI = 158,
    kStatusGroup_POWER_MANAGER = 159,
    kStatusGroup_IPED = 160,
    kStatusGroup_CSS_PKC = 161,
    kStatusGroup_HOSTIF = 162,
    kStatusGroup_CLIF = 163,
    kStatusGroup_BMA = 164,
    kStatusGroup_NETC = 165,
};




enum
{
    kStatus_Success = ((((kStatusGroup_Generic)*100L) + (0))),
    kStatus_Fail = ((((kStatusGroup_Generic)*100L) + (1))),
    kStatus_ReadOnly = ((((kStatusGroup_Generic)*100L) + (2))),
    kStatus_OutOfRange = ((((kStatusGroup_Generic)*100L) + (3))),
    kStatus_InvalidArgument = ((((kStatusGroup_Generic)*100L) + (4))),
    kStatus_Timeout = ((((kStatusGroup_Generic)*100L) + (5))),
    kStatus_NoTransferInProgress =
        ((((kStatusGroup_Generic)*100L) + (6))),
    kStatus_Busy = ((((kStatusGroup_Generic)*100L) + (7))),
    kStatus_NoData =
        ((((kStatusGroup_Generic)*100L) + (8))),
};


typedef int32_t status_t;
# 284 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h"
void *SDK_Malloc(size_t size, size_t alignbytes);






void SDK_Free(void *ptr);
# 302 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h"
void SDK_DelayAtLeastUs(uint32_t delayTime_us, uint32_t coreClock_Hz);
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h" 1
# 91 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline void _SDK_AtomicLocalAdd1Byte(volatile uint8_t *addr, uint8_t val)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val += val); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalAdd2Byte(volatile uint16_t *addr, uint16_t val)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val += val); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalAdd4Byte(volatile uint32_t *addr, uint32_t val)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val += val); } while (0UL != __STREXW((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSub1Byte(volatile uint8_t *addr, uint8_t val)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val -= val); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSub2Byte(volatile uint16_t *addr, uint16_t val)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val -= val); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSub4Byte(volatile uint32_t *addr, uint32_t val)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val -= val); } while (0UL != __STREXW((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSet1Byte(volatile uint8_t *addr, uint8_t bits)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val |= bits); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSet2Byte(volatile uint16_t *addr, uint16_t bits)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val |= bits); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalSet4Byte(volatile uint32_t *addr, uint32_t bits)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val |= bits); } while (0UL != __STREXW((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClear1Byte(volatile uint8_t *addr, uint8_t bits)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val &= ~bits); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClear2Byte(volatile uint16_t *addr, uint16_t bits)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val &= ~bits); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClear4Byte(volatile uint32_t *addr, uint32_t bits)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val &= ~bits); } while (0UL != __STREXW((s_val), (addr)));
}

static inline void _SDK_AtomicLocalToggle1Byte(volatile uint8_t *addr, uint8_t bits)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val ^= bits); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalToggle2Byte(volatile uint16_t *addr, uint16_t bits)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val ^= bits); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalToggle4Byte(volatile uint32_t *addr, uint32_t bits)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val ^= bits); } while (0UL != __STREXW((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClearAndSet1Byte(volatile uint8_t *addr, uint8_t clearBits, uint8_t setBits)
{
    uint8_t s_val;

    do { (s_val) = __LDREXB(addr); (s_val = (s_val & ~clearBits) | setBits); } while (0UL != __STREXB((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClearAndSet2Byte(volatile uint16_t *addr, uint16_t clearBits, uint16_t setBits)
{
    uint16_t s_val;

    do { (s_val) = __LDREXH(addr); (s_val = (s_val & ~clearBits) | setBits); } while (0UL != __STREXH((s_val), (addr)));
}

static inline void _SDK_AtomicLocalClearAndSet4Byte(volatile uint32_t *addr, uint32_t clearBits, uint32_t setBits)
{
    uint32_t s_val;

    do { (s_val) = __LDREXW(addr); (s_val = (s_val & ~clearBits) | setBits); } while (0UL != __STREXW((s_val), (addr)));
}
# 465 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 1
# 11 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 1
# 12 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 2
# 125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
extern volatile uint32_t g_xtalFreq;






extern volatile uint32_t g_rtcXtalFreq;
# 466 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
typedef enum _clock_name
{
    kCLOCK_CpuClk = 0x0U,
    kCLOCK_AhbClk = 0x1U,
    kCLOCK_SemcClk = 0x2U,
    kCLOCK_IpgClk = 0x3U,
    kCLOCK_PerClk = 0x4U,

    kCLOCK_OscClk = 0x5U,
    kCLOCK_RtcClk = 0x6U,

    kCLOCK_ArmPllClk = 0x7U,

    kCLOCK_Usb1PllClk = 0x8U,
    kCLOCK_Usb1PllPfd0Clk = 0x9U,
    kCLOCK_Usb1PllPfd1Clk = 0xAU,
    kCLOCK_Usb1PllPfd2Clk = 0xBU,
    kCLOCK_Usb1PllPfd3Clk = 0xCU,
    kCLOCK_Usb1SwClk = 0x18U,
    kCLOCK_Usb1Sw120MClk = 0x19U,
    kCLOCK_Usb1Sw60MClk = 0x1AU,
    kCLOCK_Usb1Sw80MClk = 0x1BU,

    kCLOCK_Usb2PllClk = 0xDU,

    kCLOCK_SysPllClk = 0xEU,
    kCLOCK_SysPllPfd0Clk = 0xFU,
    kCLOCK_SysPllPfd1Clk = 0x10U,
    kCLOCK_SysPllPfd2Clk = 0x11U,
    kCLOCK_SysPllPfd3Clk = 0x12U,

    kCLOCK_EnetPll0Clk = 0x13U,
    kCLOCK_EnetPll1Clk = 0x14U,
    kCLOCK_EnetPll2Clk = 0x15U,

    kCLOCK_AudioPllClk = 0x16U,
    kCLOCK_VideoPllClk = 0x17U,

    kCLOCK_NoneName = (0xFFU),
} clock_name_t;







typedef enum _clock_ip_name
{
    kCLOCK_IpInvalid = -1,


    kCLOCK_Aips_tz1 = (0U << 8U) | (0U),
    kCLOCK_Aips_tz2 = (0U << 8U) | (2U),
    kCLOCK_Mqs = (0U << 8U) | (4U),
    kCLOCK_FlexSpiExsc = (0U << 8U) | (6U),
    kCLOCK_Sim_M_Main = (0U << 8U) | (8U),
    kCLOCK_Dcp = (0U << 8U) | (10U),
    kCLOCK_Lpuart3 = (0U << 8U) | (12U),
    kCLOCK_Can1 = (0U << 8U) | (14U),
    kCLOCK_Can1S = (0U << 8U) | (16U),
    kCLOCK_Can2 = (0U << 8U) | (18U),
    kCLOCK_Can2S = (0U << 8U) | (20U),
    kCLOCK_Trace = (0U << 8U) | (22U),
    kCLOCK_Gpt2 = (0U << 8U) | (24U),
    kCLOCK_Gpt2S = (0U << 8U) | (26U),
    kCLOCK_Lpuart2 = (0U << 8U) | (28U),
    kCLOCK_Gpio2 = (0U << 8U) | (30U),


    kCLOCK_Lpspi1 = (1U << 8U) | (0U),
    kCLOCK_Lpspi2 = (1U << 8U) | (2U),
    kCLOCK_Lpspi3 = (1U << 8U) | (4U),
    kCLOCK_Lpspi4 = (1U << 8U) | (6U),
    kCLOCK_Adc2 = (1U << 8U) | (8U),
    kCLOCK_Enet = (1U << 8U) | (10U),
    kCLOCK_Pit = (1U << 8U) | (12U),
    kCLOCK_Aoi2 = (1U << 8U) | (14U),
    kCLOCK_Adc1 = (1U << 8U) | (16U),
    kCLOCK_SemcExsc = (1U << 8U) | (18U),
    kCLOCK_Gpt1 = (1U << 8U) | (20U),
    kCLOCK_Gpt1S = (1U << 8U) | (22U),
    kCLOCK_Lpuart4 = (1U << 8U) | (24U),
    kCLOCK_Gpio1 = (1U << 8U) | (26U),
    kCLOCK_Csu = (1U << 8U) | (28U),
    kCLOCK_Gpio5 = (1U << 8U) | (30U),


    kCLOCK_OcramExsc = (2U << 8U) | (0U),
    kCLOCK_Csi = (2U << 8U) | (2U),
    kCLOCK_IomuxcSnvs = (2U << 8U) | (4U),
    kCLOCK_Lpi2c1 = (2U << 8U) | (6U),
    kCLOCK_Lpi2c2 = (2U << 8U) | (8U),
    kCLOCK_Lpi2c3 = (2U << 8U) | (10U),
    kCLOCK_Ocotp = (2U << 8U) | (12U),
    kCLOCK_Xbar3 = (2U << 8U) | (14U),
    kCLOCK_Ipmux1 = (2U << 8U) | (16U),
    kCLOCK_Ipmux2 = (2U << 8U) | (18U),
    kCLOCK_Ipmux3 = (2U << 8U) | (20U),
    kCLOCK_Xbar1 = (2U << 8U) | (22U),
    kCLOCK_Xbar2 = (2U << 8U) | (24U),
    kCLOCK_Gpio3 = (2U << 8U) | (26U),
    kCLOCK_Lcd = (2U << 8U) | (28U),
    kCLOCK_Pxp = (2U << 8U) | (30U),


    kCLOCK_Flexio2 = (3U << 8U) | (0U),
    kCLOCK_Lpuart5 = (3U << 8U) | (2U),
    kCLOCK_Semc = (3U << 8U) | (4U),
    kCLOCK_Lpuart6 = (3U << 8U) | (6U),
    kCLOCK_Aoi1 = (3U << 8U) | (8U),
    kCLOCK_LcdPixel = (3U << 8U) | (10U),
    kCLOCK_Gpio4 = (3U << 8U) | (12U),
    kCLOCK_Ewm0 = (3U << 8U) | (14U),
    kCLOCK_Wdog1 = (3U << 8U) | (16U),
    kCLOCK_FlexRam = (3U << 8U) | (18U),
    kCLOCK_Acmp1 = (3U << 8U) | (20U),
    kCLOCK_Acmp2 = (3U << 8U) | (22U),
    kCLOCK_Acmp3 = (3U << 8U) | (24U),
    kCLOCK_Acmp4 = (3U << 8U) | (26U),
    kCLOCK_Ocram = (3U << 8U) | (28U),
    kCLOCK_IomuxcSnvsGpr = (3U << 8U) | (30U),


    kCLOCK_Sim_m7_clk_r = (4U << 8U) | (0U),
    kCLOCK_Iomuxc = (4U << 8U) | (2U),
    kCLOCK_IomuxcGpr = (4U << 8U) | (4U),
    kCLOCK_Bee = (4U << 8U) | (6U),
    kCLOCK_SimM7 = (4U << 8U) | (8U),
    kCLOCK_Tsc = (4U << 8U) | (10U),
    kCLOCK_SimM = (4U << 8U) | (12U),
    kCLOCK_SimEms = (4U << 8U) | (14U),
    kCLOCK_Pwm1 = (4U << 8U) | (16U),
    kCLOCK_Pwm2 = (4U << 8U) | (18U),
    kCLOCK_Pwm3 = (4U << 8U) | (20U),
    kCLOCK_Pwm4 = (4U << 8U) | (22U),
    kCLOCK_Enc1 = (4U << 8U) | (24U),
    kCLOCK_Enc2 = (4U << 8U) | (26U),
    kCLOCK_Enc3 = (4U << 8U) | (28U),
    kCLOCK_Enc4 = (4U << 8U) | (30U),


    kCLOCK_Rom = (5U << 8U) | (0U),
    kCLOCK_Flexio1 = (5U << 8U) | (2U),
    kCLOCK_Wdog3 = (5U << 8U) | (4U),
    kCLOCK_Dma = (5U << 8U) | (6U),
    kCLOCK_Kpp = (5U << 8U) | (8U),
    kCLOCK_Wdog2 = (5U << 8U) | (10U),
    kCLOCK_Aips_tz4 = (5U << 8U) | (12U),
    kCLOCK_Spdif = (5U << 8U) | (14U),
    kCLOCK_SimMain = (5U << 8U) | (16U),
    kCLOCK_Sai1 = (5U << 8U) | (18U),
    kCLOCK_Sai2 = (5U << 8U) | (20U),
    kCLOCK_Sai3 = (5U << 8U) | (22U),
    kCLOCK_Lpuart1 = (5U << 8U) | (24U),
    kCLOCK_Lpuart7 = (5U << 8U) | (26U),
    kCLOCK_SnvsHp = (5U << 8U) | (28U),
    kCLOCK_SnvsLp = (5U << 8U) | (30U),


    kCLOCK_UsbOh3 = (6U << 8U) | (0U),
    kCLOCK_Usdhc1 = (6U << 8U) | (2U),
    kCLOCK_Usdhc2 = (6U << 8U) | (4U),
    kCLOCK_Dcdc = (6U << 8U) | (6U),
    kCLOCK_Ipmux4 = (6U << 8U) | (8U),
    kCLOCK_FlexSpi = (6U << 8U) | (10U),
    kCLOCK_Trng = (6U << 8U) | (12U),
    kCLOCK_Lpuart8 = (6U << 8U) | (14U),
    kCLOCK_Timer4 = (6U << 8U) | (16U),
    kCLOCK_Aips_tz3 = (6U << 8U) | (18U),
    kCLOCK_SimPer = (6U << 8U) | (20U),
    kCLOCK_Anadig = (6U << 8U) | (22U),
    kCLOCK_Lpi2c4 = (6U << 8U) | (24U),
    kCLOCK_Timer1 = (6U << 8U) | (26U),
    kCLOCK_Timer2 = (6U << 8U) | (28U),
    kCLOCK_Timer3 = (6U << 8U) | (30U),


    kCLOCK_Enet2 = (7U << 8U) | (0U),
    kCLOCK_FlexSpi2 = (7U << 8U) | (2U),
    kCLOCK_Axbs_l = (7U << 8U) | (4U),
    kCLOCK_Can3 = (7U << 8U) | (6U),
    kCLOCK_Can3S = (7U << 8U) | (8U),
    kCLOCK_Aips_lite = (7U << 8U) | (10U),
    kCLOCK_Flexio3 = (7U << 8U) | (12U),

} clock_ip_name_t;


typedef enum _clock_osc
{
    kCLOCK_RcOsc = 0U,
    kCLOCK_XtalOsc = 1U,
} clock_osc_t;


typedef enum _clock_gate_value
{
    kCLOCK_ClockNotNeeded = 0U,
    kCLOCK_ClockNeededRun = 1U,
    kCLOCK_ClockNeededRunWait = 3U,
} clock_gate_value_t;


typedef enum _clock_mode_t
{
    kCLOCK_ModeRun = 0U,
    kCLOCK_ModeWait = 1U,
    kCLOCK_ModeStop = 2U,
} clock_mode_t;
# 685 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
typedef enum _clock_mux
{
    kCLOCK_Pll3SwMux = (int)(((0x0C)&0xFFU) | (((0U)) << 8U) | (((((0x1U)) >> ((0U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,

    kCLOCK_PeriphMux = (int)(((0x14)&0xFFU) | (((25U)) << 8U) | (((((0x2000000U)) >> ((25U))) & 0x1FFFU) << 13U) | (((5U)) << 26U))


                                                                      ,
    kCLOCK_SemcAltMux = (int)(((0x14)&0xFFU) | (((7U)) << 8U) | (((((0x80U)) >> ((7U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_SemcMux = (int)(((0x14)&0xFFU) | (((6U)) << 8U) | (((((0x40U)) >> ((6U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,

    kCLOCK_PrePeriphMux = (int)(((0x18)&0xFFU) | (((18U)) << 8U) | (((((0xC0000U)) >> ((18U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                     ,
    kCLOCK_TraceMux = (int)(((0x18)&0xFFU) | (((14U)) << 8U) | (((((0xC000U)) >> ((14U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,
    kCLOCK_PeriphClk2Mux = (int)(((0x18)&0xFFU) | (((12U)) << 8U) | (((((0x3000U)) >> ((12U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                      ,
    kCLOCK_Flexspi2Mux = (int)(((0x18)&0xFFU) | (((8U)) << 8U) | (((((0x300U)) >> ((8U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                    ,
    kCLOCK_LpspiMux = (int)(((0x18)&0xFFU) | (((4U)) << 8U) | (((((0x30U)) >> ((4U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,

    kCLOCK_FlexspiMux = (int)(((0x1C)&0xFFU) | (((29U)) << 8U) | (((((0x60000000U)) >> ((29U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_Usdhc2Mux = (int)(((0x1C)&0xFFU) | (((17U)) << 8U) | (((((0x20000U)) >> ((17U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,
    kCLOCK_Usdhc1Mux = (int)(((0x1C)&0xFFU) | (((16U)) << 8U) | (((((0x10000U)) >> ((16U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,
    kCLOCK_Sai3Mux = (int)(((0x1C)&0xFFU) | (((14U)) << 8U) | (((((0xC000U)) >> ((14U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,
    kCLOCK_Sai2Mux = (int)(((0x1C)&0xFFU) | (((12U)) << 8U) | (((((0x3000U)) >> ((12U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,
    kCLOCK_Sai1Mux = (int)(((0x1C)&0xFFU) | (((10U)) << 8U) | (((((0xC00U)) >> ((10U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,
    kCLOCK_PerclkMux = (int)(((0x1C)&0xFFU) | (((6U)) << 8U) | (((((0x40U)) >> ((6U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,

    kCLOCK_Flexio2Mux = (int)(((0x20)&0xFFU) | (((19U)) << 8U) | (((((0x180000U)) >> ((19U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_CanMux = (int)(((0x20)&0xFFU) | (((8U)) << 8U) | (((((0x300U)) >> ((8U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                               ,

    kCLOCK_UartMux = (int)(((0x24)&0xFFU) | (((6U)) << 8U) | (((((0x40U)) >> ((6U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,

    kCLOCK_SpdifMux = (int)(((0x30)&0xFFU) | (((20U)) << 8U) | (((((0x300000U)) >> ((20U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,
    kCLOCK_Flexio1Mux = (int)(((0x30)&0xFFU) | (((7U)) << 8U) | (((((0x180U)) >> ((7U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,

    kCLOCK_Lpi2cMux = (int)(((0x38)&0xFFU) | (((18U)) << 8U) | (((((0x40000U)) >> ((18U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,
    kCLOCK_LcdifPreMux = (int)(((0x38)&0xFFU) | (((15U)) << 8U) | (((((0x38000U)) >> ((15U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                    ,

    kCLOCK_CsiMux = (int)(((0x3C)&0xFFU) | (((9U)) << 8U) | (((((0x600U)) >> ((9U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                               ,
} clock_mux_t;




typedef enum _clock_div_value
{
    kCLOCK_ArmDivBy1 = 0,
    kCLOCK_ArmDivBy2 = 1,
    kCLOCK_ArmDivBy3 = 2,
    kCLOCK_ArmDivBy4 = 3,
    kCLOCK_ArmDivBy5 = 4,
    kCLOCK_ArmDivBy6 = 5,
    kCLOCK_ArmDivBy7 = 6,
    kCLOCK_ArmDivBy8 = 7,

    kCLOCK_PeriphClk2DivBy1 = 0,
    kCLOCK_PeriphClk2DivBy2 = 1,
    kCLOCK_PeriphClk2DivBy3 = 2,
    kCLOCK_PeriphClk2DivBy4 = 3,
    kCLOCK_PeriphClk2DivBy5 = 4,
    kCLOCK_PeriphClk2DivBy6 = 5,
    kCLOCK_PeriphClk2DivBy7 = 6,
    kCLOCK_PeriphClk2DivBy8 = 7,

    kCLOCK_SemcDivBy1 = 0,
    kCLOCK_SemcDivBy2 = 1,
    kCLOCK_SemcDivBy3 = 2,
    kCLOCK_SemcDivBy4 = 3,
    kCLOCK_SemcDivBy5 = 4,
    kCLOCK_SemcDivBy6 = 5,
    kCLOCK_SemcDivBy7 = 6,
    kCLOCK_SemcDivBy8 = 7,

    kCLOCK_AhbDivBy1 = 0,
    kCLOCK_AhbDivBy2 = 1,
    kCLOCK_AhbDivBy3 = 2,
    kCLOCK_AhbDivBy4 = 3,
    kCLOCK_AhbDivBy5 = 4,
    kCLOCK_AhbDivBy6 = 5,
    kCLOCK_AhbDivBy7 = 6,
    kCLOCK_AhbDivBy8 = 7,

    kCLOCK_IpgDivBy1 = 0,
    kCLOCK_IpgDivBy2 = 1,
    kCLOCK_IpgDivBy3 = 2,
    kCLOCK_IpgDivBy4 = 3,

    kCLOCK_Flexspi2DivBy1 = 0,
    kCLOCK_Flexspi2DivBy2 = 1,
    kCLOCK_Flexspi2DivBy3 = 2,
    kCLOCK_Flexspi2DivBy4 = 3,
    kCLOCK_Flexspi2DivBy5 = 4,
    kCLOCK_Flexspi2DivBy6 = 5,
    kCLOCK_Flexspi2DivBy7 = 6,
    kCLOCK_Flexspi2DivBy8 = 7,

    kCLOCK_LpspiDivBy1 = 0,
    kCLOCK_LpspiDivBy2 = 1,
    kCLOCK_LpspiDivBy3 = 2,
    kCLOCK_LpspiDivBy4 = 3,
    kCLOCK_LpspiDivBy5 = 4,
    kCLOCK_LpspiDivBy6 = 5,
    kCLOCK_LpspiDivBy7 = 6,
    kCLOCK_LpspiDivBy8 = 7,

    kCLOCK_LcdifDivBy1 = 0,
    kCLOCK_LcdifDivBy2 = 1,
    kCLOCK_LcdifDivBy3 = 2,
    kCLOCK_LcdifDivBy4 = 3,
    kCLOCK_LcdifDivBy5 = 4,
    kCLOCK_LcdifDivBy6 = 5,
    kCLOCK_LcdifDivBy7 = 6,
    kCLOCK_LcdifDivBy8 = 7,

    kCLOCK_FlexspiDivBy1 = 0,
    kCLOCK_FlexspiDivBy2 = 1,
    kCLOCK_FlexspiDivBy3 = 2,
    kCLOCK_FlexspiDivBy4 = 3,
    kCLOCK_FlexspiDivBy5 = 4,
    kCLOCK_FlexspiDivBy6 = 5,
    kCLOCK_FlexspiDivBy7 = 6,
    kCLOCK_FlexspiDivBy8 = 7,

    kCLOCK_TraceDivBy1 = 0,
    kCLOCK_TraceDivBy2 = 1,
    kCLOCK_TraceDivBy3 = 2,
    kCLOCK_TraceDivBy4 = 3,

    kCLOCK_Usdhc2DivBy1 = 0,
    kCLOCK_Usdhc2DivBy2 = 1,
    kCLOCK_Usdhc2DivBy3 = 2,
    kCLOCK_Usdhc2DivBy4 = 3,
    kCLOCK_Usdhc2DivBy5 = 4,
    kCLOCK_Usdhc2DivBy6 = 5,
    kCLOCK_Usdhc2DivBy7 = 6,
    kCLOCK_Usdhc2DivBy8 = 7,

    kCLOCK_Usdhc1DivBy1 = 0,
    kCLOCK_Usdhc1DivBy2 = 1,
    kCLOCK_Usdhc1DivBy3 = 2,
    kCLOCK_Usdhc1DivBy4 = 3,
    kCLOCK_Usdhc1DivBy5 = 4,
    kCLOCK_Usdhc1DivBy6 = 5,
    kCLOCK_Usdhc1DivBy7 = 6,
    kCLOCK_Usdhc1DivBy8 = 7,

    kCLOCK_Flexio2DivBy1 = 0,
    kCLOCK_Flexio2DivBy2 = 1,
    kCLOCK_Flexio2DivBy3 = 2,
    kCLOCK_Flexio2DivBy4 = 3,
    kCLOCK_Flexio2DivBy5 = 4,
    kCLOCK_Flexio2DivBy6 = 5,
    kCLOCK_Flexio2DivBy7 = 6,
    kCLOCK_Flexio2DivBy8 = 7,

    kCLOCK_Sai3PreDivBy1 = 0,
    kCLOCK_Sai3PreDivBy2 = 1,
    kCLOCK_Sai3PreDivBy3 = 2,
    kCLOCK_Sai3PreDivBy4 = 3,
    kCLOCK_Sai3PreDivBy5 = 4,
    kCLOCK_Sai3PreDivBy6 = 5,
    kCLOCK_Sai3PreDivBy7 = 6,
    kCLOCK_Sai3PreDivBy8 = 7,

    kCLOCK_Flexio2PreDivBy1 = 0,
    kCLOCK_Flexio2PreDivBy2 = 1,
    kCLOCK_Flexio2PreDivBy3 = 2,
    kCLOCK_Flexio2PreDivBy4 = 3,
    kCLOCK_Flexio2PreDivBy5 = 4,
    kCLOCK_Flexio2PreDivBy6 = 5,
    kCLOCK_Flexio2PreDivBy7 = 6,
    kCLOCK_Flexio2PreDivBy8 = 7,

    kCLOCK_Sai1PreDivBy1 = 0,
    kCLOCK_Sai1PreDivBy2 = 1,
    kCLOCK_Sai1PreDivBy3 = 2,
    kCLOCK_Sai1PreDivBy4 = 3,
    kCLOCK_Sai1PreDivBy5 = 4,
    kCLOCK_Sai1PreDivBy6 = 5,
    kCLOCK_Sai1PreDivBy7 = 6,
    kCLOCK_Sai1PreDivBy8 = 7,

    kCLOCK_Sai2PreDivBy1 = 0,
    kCLOCK_Sai2PreDivBy2 = 1,
    kCLOCK_Sai2PreDivBy3 = 2,
    kCLOCK_Sai2PreDivBy4 = 3,
    kCLOCK_Sai2PreDivBy5 = 4,
    kCLOCK_Sai2PreDivBy6 = 5,
    kCLOCK_Sai2PreDivBy7 = 6,
    kCLOCK_Sai2PreDivBy8 = 7,

    kCLOCK_Spdif0PreDivBy1 = 0,
    kCLOCK_Spdif0PreDivBy2 = 1,
    kCLOCK_Spdif0PreDivBy3 = 2,
    kCLOCK_Spdif0PreDivBy4 = 3,
    kCLOCK_Spdif0PreDivBy5 = 4,
    kCLOCK_Spdif0PreDivBy6 = 5,
    kCLOCK_Spdif0PreDivBy7 = 6,
    kCLOCK_Spdif0PreDivBy8 = 7,

    kCLOCK_Spdif0DivBy1 = 0,
    kCLOCK_Spdif0DivBy2 = 1,
    kCLOCK_Spdif0DivBy3 = 2,
    kCLOCK_Spdif0DivBy4 = 3,
    kCLOCK_Spdif0DivBy5 = 4,
    kCLOCK_Spdif0DivBy6 = 5,
    kCLOCK_Spdif0DivBy7 = 6,
    kCLOCK_Spdif0DivBy8 = 7,

    kCLOCK_Flexio1PreDivBy1 = 0,
    kCLOCK_Flexio1PreDivBy2 = 1,
    kCLOCK_Flexio1PreDivBy3 = 2,
    kCLOCK_Flexio1PreDivBy8 = 7,

    kCLOCK_Flexio1DivBy1 = 0,
    kCLOCK_Flexio1DivBy2 = 1,
    kCLOCK_Flexio1DivBy3 = 2,
    kCLOCK_Flexio1DivBy4 = 3,
    kCLOCK_Flexio1DivBy5 = 4,
    kCLOCK_Flexio1DivBy6 = 5,
    kCLOCK_Flexio1DivBy7 = 6,
    kCLOCK_Flexio1DivBy8 = 7,

    kCLOCK_LcdifPreDivBy1 = 0,
    kCLOCK_LcdifPreDivBy2 = 1,
    kCLOCK_LcdifPreDivBy3 = 2,
    kCLOCK_LcdifPreDivBy4 = 3,
    kCLOCK_LcdifPreDivBy5 = 4,
    kCLOCK_LcdifPreDivBy6 = 5,
    kCLOCK_LcdifPreDivBy7 = 6,
    kCLOCK_LcdifPreDivBy8 = 7,

    kCLOCK_CsiDivBy1 = 0,
    kCLOCK_CsiDivBy2 = 1,
    kCLOCK_CsiDivBy3 = 2,
    kCLOCK_CsiDivBy4 = 3,
    kCLOCK_CsiDivBy5 = 4,
    kCLOCK_CsiDivBy6 = 5,
    kCLOCK_CsiDivBy7 = 6,
    kCLOCK_CsiDivBy8 = 7,




    kCLOCK_MiscDivBy1 = 0,
    kCLOCK_MiscDivBy2 = 1,
    kCLOCK_MiscDivBy3 = 2,
    kCLOCK_MiscDivBy4 = 3,
    kCLOCK_MiscDivBy5 = 4,
    kCLOCK_MiscDivBy6 = 5,
    kCLOCK_MiscDivBy7 = 6,
    kCLOCK_MiscDivBy8 = 7,
    kCLOCK_MiscDivBy9 = 8,
    kCLOCK_MiscDivBy10 = 9,
    kCLOCK_MiscDivBy11 = 10,
    kCLOCK_MiscDivBy12 = 11,
    kCLOCK_MiscDivBy13 = 12,
    kCLOCK_MiscDivBy14 = 13,
    kCLOCK_MiscDivBy15 = 14,
    kCLOCK_MiscDivBy16 = 15,
    kCLOCK_MiscDivBy17 = 16,
    kCLOCK_MiscDivBy18 = 17,
    kCLOCK_MiscDivBy19 = 18,
    kCLOCK_MiscDivBy20 = 19,
    kCLOCK_MiscDivBy21 = 20,
    kCLOCK_MiscDivBy22 = 21,
    kCLOCK_MiscDivBy23 = 22,
    kCLOCK_MiscDivBy24 = 23,
    kCLOCK_MiscDivBy25 = 24,
    kCLOCK_MiscDivBy26 = 25,
    kCLOCK_MiscDivBy27 = 26,
    kCLOCK_MiscDivBy28 = 27,
    kCLOCK_MiscDivBy29 = 28,
    kCLOCK_MiscDivBy30 = 29,
    kCLOCK_MiscDivBy31 = 30,
    kCLOCK_MiscDivBy32 = 31,
    kCLOCK_MiscDivBy33 = 32,
    kCLOCK_MiscDivBy34 = 33,
    kCLOCK_MiscDivBy35 = 34,
    kCLOCK_MiscDivBy36 = 35,
    kCLOCK_MiscDivBy37 = 36,
    kCLOCK_MiscDivBy38 = 37,
    kCLOCK_MiscDivBy39 = 38,
    kCLOCK_MiscDivBy40 = 39,
    kCLOCK_MiscDivBy41 = 40,
    kCLOCK_MiscDivBy42 = 41,
    kCLOCK_MiscDivBy43 = 42,
    kCLOCK_MiscDivBy44 = 43,
    kCLOCK_MiscDivBy45 = 44,
    kCLOCK_MiscDivBy46 = 45,
    kCLOCK_MiscDivBy47 = 46,
    kCLOCK_MiscDivBy48 = 47,
    kCLOCK_MiscDivBy49 = 48,
    kCLOCK_MiscDivBy50 = 49,
    kCLOCK_MiscDivBy51 = 50,
    kCLOCK_MiscDivBy52 = 51,
    kCLOCK_MiscDivBy53 = 52,
    kCLOCK_MiscDivBy54 = 53,
    kCLOCK_MiscDivBy55 = 54,
    kCLOCK_MiscDivBy56 = 55,
    kCLOCK_MiscDivBy57 = 56,
    kCLOCK_MiscDivBy58 = 57,
    kCLOCK_MiscDivBy59 = 58,
    kCLOCK_MiscDivBy60 = 59,
    kCLOCK_MiscDivBy61 = 60,
    kCLOCK_MiscDivBy62 = 61,
    kCLOCK_MiscDivBy63 = 62,
    kCLOCK_MiscDivBy64 = 63,
} clock_div_value_t;
# 1070 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
typedef enum _clock_div
{
    kCLOCK_ArmDiv = (int)(((0x10)&0xFFU) | (((0U)) << 8U) | (((((0x7U)) >> ((0U))) & 0x1FFFU) << 13U) | (((16U)) << 26U))


                                                             ,

    kCLOCK_PeriphClk2Div = (int)(((0x14)&0xFFU) | (((27U)) << 8U) | (((((0x38000000U)) >> ((27U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                      ,
    kCLOCK_SemcDiv = (int)(((0x14)&0xFFU) | (((16U)) << 8U) | (((((0x70000U)) >> ((16U))) & 0x1FFFU) << 13U) | (((0U)) << 26U))


                                                               ,
    kCLOCK_AhbDiv = (int)(((0x14)&0xFFU) | (((10U)) << 8U) | (((((0x1C00U)) >> ((10U))) & 0x1FFFU) << 13U) | (((1U)) << 26U))


                                                             ,
    kCLOCK_IpgDiv = (int)(((0x14)&0xFFU) | (((8U)) << 8U) | (((((0x300U)) >> ((8U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))
                                                                                          ,

    kCLOCK_Flexspi2Div = (int)(((0x18)&0xFFU) | (((29U)) << 8U) | (((((0xE0000000U)) >> ((29U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                    ,
    kCLOCK_LpspiDiv = (int)(((0x18)&0xFFU) | (((26U)) << 8U) | (((((0x1C000000U)) >> ((26U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))
                                                                                              ,
    kCLOCK_LcdifDiv = (int)(((0x18)&0xFFU) | (((23U)) << 8U) | (((((0x3800000U)) >> ((23U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))
                                                                                              ,

    kCLOCK_FlexspiDiv = (int)(((0x1C)&0xFFU) | (((23U)) << 8U) | (((((0x3800000U)) >> ((23U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_PerclkDiv = (int)(((0x1C)&0xFFU) | (((0U)) << 8U) | (((((0x3FU)) >> ((0U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,

    kCLOCK_CanDiv = (int)(((0x20)&0xFFU) | (((2U)) << 8U) | (((((0xFCU)) >> ((2U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                               ,

    kCLOCK_TraceDiv = (int)(((0x24)&0xFFU) | (((25U)) << 8U) | (((((0x6000000U)) >> ((25U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,
    kCLOCK_Usdhc2Div = (int)(((0x24)&0xFFU) | (((16U)) << 8U) | (((((0x70000U)) >> ((16U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,
    kCLOCK_Usdhc1Div = (int)(((0x24)&0xFFU) | (((11U)) << 8U) | (((((0x3800U)) >> ((11U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,
    kCLOCK_UartDiv = (int)(((0x24)&0xFFU) | (((0U)) << 8U) | (((((0x3FU)) >> ((0U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,

    kCLOCK_Flexio2Div = (int)(((0x28)&0xFFU) | (((25U)) << 8U) | (((((0xE000000U)) >> ((25U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_Sai3PreDiv = (int)(((0x28)&0xFFU) | (((22U)) << 8U) | (((((0x1C00000U)) >> ((22U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_Sai3Div = (int)(((0x28)&0xFFU) | (((16U)) << 8U) | (((((0x3F0000U)) >> ((16U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,
    kCLOCK_Flexio2PreDiv = (int)(((0x28)&0xFFU) | (((9U)) << 8U) | (((((0xE00U)) >> ((9U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                      ,
    kCLOCK_Sai1PreDiv = (int)(((0x28)&0xFFU) | (((6U)) << 8U) | (((((0x1C0U)) >> ((6U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_Sai1Div = (int)(((0x28)&0xFFU) | (((0U)) << 8U) | (((((0x3FU)) >> ((0U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,

    kCLOCK_Sai2PreDiv = (int)(((0x2C)&0xFFU) | (((6U)) << 8U) | (((((0x1C0U)) >> ((6U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,
    kCLOCK_Sai2Div = (int)(((0x2C)&0xFFU) | (((0U)) << 8U) | (((((0x3FU)) >> ((0U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                ,

    kCLOCK_Spdif0PreDiv = (int)(((0x30)&0xFFU) | (((25U)) << 8U) | (((((0xE000000U)) >> ((25U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                     ,
    kCLOCK_Spdif0Div = (int)(((0x30)&0xFFU) | (((22U)) << 8U) | (((((0x1C00000U)) >> ((22U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                  ,
    kCLOCK_Flexio1PreDiv = (int)(((0x30)&0xFFU) | (((12U)) << 8U) | (((((0x7000U)) >> ((12U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                      ,
    kCLOCK_Flexio1Div = (int)(((0x30)&0xFFU) | (((9U)) << 8U) | (((((0xE00U)) >> ((9U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                   ,

    kCLOCK_Lpi2cDiv = (int)(((0x38)&0xFFU) | (((19U)) << 8U) | (((((0x1F80000U)) >> ((19U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                 ,
    kCLOCK_LcdifPreDiv = (int)(((0x38)&0xFFU) | (((12U)) << 8U) | (((((0x7000U)) >> ((12U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))


                                                    ,

    kCLOCK_CsiDiv = (int)(((0x3C)&0xFFU) | (((11U)) << 8U) | (((((0x3800U)) >> ((11U))) & 0x1FFFU) << 13U) | (((0x20U)) << 26U))
                                                                                             ,

    kCLOCK_NonePreDiv = 0UL,
} clock_div_t;


typedef enum _clock_usb_src
{
    kCLOCK_Usb480M = 0,
    kCLOCK_UsbSrcUnused = (int)0xFFFFFFFFU,

} clock_usb_src_t;


typedef enum _clock_usb_phy_src
{
    kCLOCK_Usbphy480M = 0,
} clock_usb_phy_src_t;


enum _clock_pll_clk_src
{
    kCLOCK_PllClkSrc24M = 0U,
    kCLOCK_PllSrcClkPN = 1U,
};


typedef struct _clock_arm_pll_config
{
    uint32_t loopDivider;
    uint8_t src;
} clock_arm_pll_config_t;


typedef struct _clock_usb_pll_config
{
    uint8_t loopDivider;


    uint8_t src;

} clock_usb_pll_config_t;


typedef struct _clock_sys_pll_config
{
    uint8_t loopDivider;


    uint32_t numerator;
    uint32_t denominator;
    uint8_t src;
    uint16_t ss_stop;
    uint8_t ss_enable;
    uint16_t ss_step;
} clock_sys_pll_config_t;


typedef struct _clock_audio_pll_config
{
    uint8_t loopDivider;
    uint8_t postDivider;
    uint32_t numerator;
    uint32_t denominator;
    uint8_t src;
} clock_audio_pll_config_t;


typedef struct _clock_video_pll_config
{
    uint8_t loopDivider;
    uint8_t postDivider;
    uint32_t numerator;
    uint32_t denominator;
    uint8_t src;

} clock_video_pll_config_t;


typedef struct _clock_enet_pll_config
{
    
# 1274 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
   _Bool 
# 1274 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
        enableClkOutput;
    
# 1275 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
   _Bool 
# 1275 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
        enableClkOutput25M;
    uint8_t loopDivider;




    uint8_t src;
    
# 1282 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
   _Bool 
# 1282 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
        enableClkOutput1;
    uint8_t loopDivider1;




} clock_enet_pll_config_t;


typedef enum _clock_pll
{
    kCLOCK_PllArm = ((((0x00)&0xFFFU) << 16U) | ((13U))),
    kCLOCK_PllSys = ((((0x30)&0xFFFU) << 16U) | ((13U))),
    kCLOCK_PllUsb1 = ((((0x10)&0xFFFU) << 16U) | ((13U))),
    kCLOCK_PllAudio = ((((0x70)&0xFFFU) << 16U) | ((13U))),
    kCLOCK_PllVideo = ((((0xA0)&0xFFFU) << 16U) | ((13U))),

    kCLOCK_PllEnet = ((((0xE0)&0xFFFU) << 16U) | ((13U))),
    kCLOCK_PllEnet2 = ((((0xE0)&0xFFFU) << 16U) | ((20U))),
    kCLOCK_PllEnet25M = ((((0xE0)&0xFFFU) << 16U) | ((21U))),

    kCLOCK_PllUsb2 = ((((0x20)&0xFFFU) << 16U) | ((13U))),

} clock_pll_t;


typedef enum _clock_pfd
{
    kCLOCK_Pfd0 = 0U,
    kCLOCK_Pfd1 = 1U,
    kCLOCK_Pfd2 = 2U,
    kCLOCK_Pfd3 = 3U,
} clock_pfd_t;




typedef enum _clock_output1_selection
{
    kCLOCK_OutputPllUsb1 = 0U,
    kCLOCK_OutputPllSys = 1U,
    kCLOCK_OutputPllVideo = 3U,
    kCLOCK_OutputSemcClk = 5U,
    kCLOCK_OutputLcdifPixClk = 0xAU,
    kCLOCK_OutputAhbClk = 0xBU,
    kCLOCK_OutputIpgClk = 0xCU,
    kCLOCK_OutputPerClk = 0xDU,
    kCLOCK_OutputCkilSyncClk = 0xEU,
    kCLOCK_OutputPll4MainClk = 0xFU,
    kCLOCK_DisableClockOutput1 = 0x10U,
} clock_output1_selection_t;





typedef enum _clock_output2_selection
{
    kCLOCK_OutputUsdhc1Clk = 3U,
    kCLOCK_OutputLpi2cClk = 6U,
    kCLOCK_OutputCsiClk = 0xBU,
    kCLOCK_OutputOscClk = 0xEU,
    kCLOCK_OutputUsdhc2Clk = 0x11U,
    kCLOCK_OutputSai1Clk = 0x12U,
    kCLOCK_OutputSai2Clk = 0x13U,
    kCLOCK_OutputSai3Clk = 0x14U,
    kCLOCK_OutputCanClk = 0x17U,
    kCLOCK_OutputFlexspiClk = 0x1BU,
    kCLOCK_OutputUartClk = 0x1CU,
    kCLOCK_OutputSpdif0Clk = 0x1DU,
    kCLOCK_DisableClockOutput2 = 0x1FU,
} clock_output2_selection_t;




typedef enum _clock_output_divider
{
    kCLOCK_DivideBy1 = 0U,
    kCLOCK_DivideBy2,
    kCLOCK_DivideBy3,
    kCLOCK_DivideBy4,
    kCLOCK_DivideBy5,
    kCLOCK_DivideBy6,
    kCLOCK_DivideBy7,
    kCLOCK_DivideBy8,
} clock_output_divider_t;




typedef enum _clock_root
{
    kCLOCK_Usdhc1ClkRoot = 0U,
    kCLOCK_Usdhc2ClkRoot,
    kCLOCK_FlexspiClkRoot,
    kCLOCK_Flexspi2ClkRoot,
    kCLOCK_CsiClkRoot,
    kCLOCK_LpspiClkRoot,
    kCLOCK_TraceClkRoot,
    kCLOCK_Sai1ClkRoot,
    kCLOCK_Sai2ClkRoot,
    kCLOCK_Sai3ClkRoot,
    kCLOCK_Lpi2cClkRoot,
    kCLOCK_CanClkRoot,
    kCLOCK_UartClkRoot,
    kCLOCK_LcdifClkRoot,
    kCLOCK_SpdifClkRoot,
    kCLOCK_Flexio1ClkRoot,
    kCLOCK_Flexio2ClkRoot,
} clock_root_t;
# 1408 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline void CLOCK_SetMux(clock_mux_t mux, uint32_t value)
{
    uint32_t busyShift;

    busyShift = (uint32_t)((((uint32_t)mux) >> 26U) & 0x3FU);
    (*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(mux)&0xFFU)))) = ((*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(mux)&0xFFU)))) & (~((uint32_t)((((uint32_t)(mux) >> 13U) & 0x1FFFU) << (((((uint32_t)mux) >> 8U) & 0x1FU)))))) |
                              (((uint32_t)((value) << ((((uint32_t)mux) >> 8U) & 0x1FU))) & ((uint32_t)((((uint32_t)(mux) >> 13U) & 0x1FFFU) << (((((uint32_t)mux) >> 8U) & 0x1FU)))));

    
# 1416 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3
   ((void)0)
# 1416 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                                        ;


    if ((0x20U) != busyShift)
    {

        while ((((CCM_Type *)(0x400FC000u))->CDHIPR & ((1UL << busyShift))) != 0UL)
        {
        }
    }
}







static inline uint32_t CLOCK_GetMux(clock_mux_t mux)
{
    return (((uint32_t)((*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(mux)&0xFFU)))) & ((uint32_t)((((uint32_t)(mux) >> 13U) & 0x1FFFU) << (((((uint32_t)mux) >> 8U) & 0x1FU)))))) >> ((((uint32_t)mux) >> 8U) & 0x1FU));
}
# 1460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline void CLOCK_SetDiv(clock_div_t divider, uint32_t value)
{
    uint32_t busyShift;

    busyShift = ((((uint32_t)divider) >> 26U) & 0x3FU);
    (*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(divider)&0xFFU)))) = ((*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(divider)&0xFFU)))) & (~((uint32_t)((((uint32_t)(divider) >> 13U) & 0x1FFFU) << (((((uint32_t)divider) >> 8U) & 0x1FU)))))) |
                                  (((uint32_t)((value) << ((((uint32_t)divider) >> 8U) & 0x1FU))) & ((uint32_t)((((uint32_t)(divider) >> 13U) & 0x1FFFU) << (((((uint32_t)divider) >> 8U) & 0x1FU)))));

    
# 1468 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3
   ((void)0)
# 1468 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                                        ;


    if ((0x20U) != busyShift)
    {

        while ((((CCM_Type *)(0x400FC000u))->CDHIPR & ((uint32_t)(1UL << busyShift))) != 0UL)
        {
        }
    }
}






static inline uint32_t CLOCK_GetDiv(clock_div_t divider)
{
    return ((uint32_t)((*((volatile uint32_t *)(((uint32_t)(((CCM_Type *)(0x400FC000u)))) + ((uint32_t)(divider)&0xFFU)))) & ((uint32_t)((((uint32_t)(divider) >> 13U) & 0x1FFFU) << (((((uint32_t)divider) >> 8U) & 0x1FU))))) >> ((((uint32_t)divider) >> 8U) & 0x1FU));
}







static inline void CLOCK_ControlGate(clock_ip_name_t name, clock_gate_value_t value)
{
    uint32_t index = ((uint32_t)name) >> 8UL;
    uint32_t shift = ((uint32_t)name) & 0x1FUL;
    volatile uint32_t *reg;

    
# 1502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3
   ((void)0)
# 1502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                       ;

    reg = (volatile uint32_t *)(&(((volatile uint32_t *)&((CCM_Type *)(0x400FC000u))->CCGR0)[index]));
    ((1UL == sizeof(*(reg))) ? _SDK_AtomicLocalClearAndSet1Byte((volatile uint8_t *)(volatile void *)(reg), (uint8_t)((3UL << shift)), (uint8_t)((uint32_t)(((uint32_t)value) << (uint32_t)shift))) : ((2UL == sizeof(*(reg))) ? _SDK_AtomicLocalClearAndSet2Byte((volatile uint16_t *)(volatile void *)(reg), (uint16_t)((3UL << shift)), (uint16_t)((uint32_t)(((uint32_t)value) << (uint32_t)shift))) : _SDK_AtomicLocalClearAndSet4Byte((volatile uint32_t *)(volatile void *)(reg), (uint32_t)((3UL << shift)), (uint32_t)((uint32_t)(((uint32_t)value) << (uint32_t)shift)))));
}






static inline void CLOCK_EnableClock(clock_ip_name_t name)
{
    CLOCK_ControlGate(name, kCLOCK_ClockNeededRunWait);
}






static inline void CLOCK_DisableClock(clock_ip_name_t name)
{
    CLOCK_ControlGate(name, kCLOCK_ClockNotNeeded);
}






static inline void CLOCK_SetMode(clock_mode_t mode)
{
    ((CCM_Type *)(0x400FC000u))->CLPCR = (((CCM_Type *)(0x400FC000u))->CLPCR & ~(0x3U)) | (((uint32_t)(((uint32_t)((uint32_t)mode)) << (0U))) & (0x3U));
}
# 1546 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline uint32_t CLOCK_GetOscFreq(void)
{
    return ((((XTALOSC24M_Type *)(0x400D8000u))->LOWPWR_CTRL & (0x10U)) != 0UL) ? 24000000UL : g_xtalFreq;
}






uint32_t CLOCK_GetAhbFreq(void);






uint32_t CLOCK_GetSemcFreq(void);






uint32_t CLOCK_GetIpgFreq(void);






uint32_t CLOCK_GetPerClkFreq(void);
# 1588 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
uint32_t CLOCK_GetFreq(clock_name_t name);






static inline uint32_t CLOCK_GetCpuClkFreq(void)
{
    return CLOCK_GetFreq(kCLOCK_CpuClk);
}







uint32_t CLOCK_GetClockRootFreq(clock_root_t clockRoot);
# 1627 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitExternalClk(
# 1627 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
                          _Bool 
# 1627 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                               bypassXtalOsc);
# 1637 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_DeinitExternalClk(void);
# 1646 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_SwitchOsc(clock_osc_t osc);






static inline uint32_t CLOCK_GetRtcFreq(void)
{
    return 32768U;
}






static inline void CLOCK_SetXtalFreq(uint32_t freq)
{
    g_xtalFreq = freq;
}






static inline void CLOCK_SetRtcXtalFreq(uint32_t freq)
{
    g_rtcXtalFreq = freq;
}




void CLOCK_InitRcOsc24M(void);




void CLOCK_DeinitRcOsc24M(void);
# 1700 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 1700 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 1700 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_EnableUsbhs0Clock(clock_usb_src_t src, uint32_t freq);
# 1713 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 1713 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 1713 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_EnableUsbhs1Clock(clock_usb_src_t src, uint32_t freq);
# 1730 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline void CLOCK_SetPllBypass(CCM_ANALOG_Type *base, clock_pll_t pll, 
# 1730 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
                                                                             _Bool 
# 1730 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                                                                                  bypass)
{
    if (bypass)
    {
        (*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (4U)))) = 1UL << (16U);
    }
    else
    {
        (*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (8U)))) = 1UL << (16U);
    }
}
# 1751 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline 
# 1751 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
             _Bool 
# 1751 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                  CLOCK_IsPllBypassed(CCM_ANALOG_Type *base, clock_pll_t pll)
{
    return (
# 1753 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
           _Bool
# 1753 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
               )((*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (0U)))) & (1UL << (16U)));
}
# 1765 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline 
# 1765 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
             _Bool 
# 1765 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
                  CLOCK_IsPllEnabled(CCM_ANALOG_Type *base, clock_pll_t pll)
{
    return (((*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (0U)))) & (1UL << (((uint32_t)pll) & 0x1FU))) != 0U);
}
# 1778 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline void CLOCK_SetPllBypassRefClkSrc(CCM_ANALOG_Type *base, clock_pll_t pll, uint32_t src)
{
    (*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (0U)))) |= ((*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (0U)))) & (~(0xC000U))) | src;
}
# 1791 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
static inline uint32_t CLOCK_GetPllBypassRefClk(CCM_ANALOG_Type *base, clock_pll_t pll)
{
    return ((((*((volatile uint32_t *)((uint32_t)(base) + (((uint32_t)(pll) >> 16U) & 0xFFFU) + (0U)))) & (0xC000U)) >>
             (14U)) == (uint32_t)kCLOCK_PllClkSrc24M) ?
               CLOCK_GetOscFreq() :
               0U;
}
# 1806 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitArmPll(const clock_arm_pll_config_t *config);




void CLOCK_DeinitArmPll(void);
# 1820 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitSysPll(const clock_sys_pll_config_t *config);




void CLOCK_DeinitSysPll(void);
# 1834 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitUsb1Pll(const clock_usb_pll_config_t *config);




void CLOCK_DeinitUsb1Pll(void);
# 1848 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitUsb2Pll(const clock_usb_pll_config_t *config);




void CLOCK_DeinitUsb2Pll(void);
# 1862 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitAudioPll(const clock_audio_pll_config_t *config);




void CLOCK_DeinitAudioPll(void);
# 1876 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitVideoPll(const clock_video_pll_config_t *config);




void CLOCK_DeinitVideoPll(void);







void CLOCK_InitEnetPll(const clock_enet_pll_config_t *config);






void CLOCK_DeinitEnetPll(void);
# 1906 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
uint32_t CLOCK_GetPllFreq(clock_pll_t pll);
# 1918 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitSysPfd(clock_pfd_t pfd, uint8_t pfdFrac);
# 1927 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_DeinitSysPfd(clock_pfd_t pfd);
# 1937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 1937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 1937 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_IsSysPfdEnabled(clock_pfd_t pfd);
# 1949 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_InitUsb1Pfd(clock_pfd_t pfd, uint8_t pfdFrac);
# 1958 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_DeinitUsb1Pfd(clock_pfd_t pfd);
# 1968 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 1968 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 1968 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_IsUsb1PfdEnabled(clock_pfd_t pfd);
# 1978 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
uint32_t CLOCK_GetSysPfdFreq(clock_pfd_t pfd);
# 1988 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
uint32_t CLOCK_GetUsb1PfdFreq(clock_pfd_t pfd);
# 1999 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 1999 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 1999 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_EnableUsbhs0PhyPllClock(clock_usb_phy_src_t src, uint32_t freq);





void CLOCK_DisableUsbhs0PhyPllClock(void);
# 2016 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"

# 2016 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 3 4
_Bool 
# 2016 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
    CLOCK_EnableUsbhs1PhyPllClock(clock_usb_phy_src_t src, uint32_t freq);





void CLOCK_DisableUsbhs1PhyPllClock(void);
# 2037 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h"
void CLOCK_SetClockOutput1(clock_output1_selection_t selection, clock_output_divider_t divider);







void CLOCK_SetClockOutput2(clock_output2_selection_t selection, clock_output_divider_t divider);






uint32_t CLOCK_GetClockOutCLKO1Freq(void);






uint32_t CLOCK_GetClockOutClkO2Freq(void);
# 466 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h" 2
# 499 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline status_t EnableIRQ(IRQn_Type interrupt)
{
    status_t status = kStatus_Success;

    if (NotAvail_IRQn == interrupt)
    {
        status = kStatus_Fail;
    }
# 515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    else
    {



        __NVIC_EnableIRQ(interrupt);

    }

    return status;
}
# 543 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline status_t DisableIRQ(IRQn_Type interrupt)
{
    status_t status = kStatus_Success;

    if (NotAvail_IRQn == interrupt)
    {
        status = kStatus_Fail;
    }
# 559 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    else
    {



        __NVIC_DisableIRQ(interrupt);

    }

    return status;
}
# 588 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline status_t EnableIRQWithPriority(IRQn_Type interrupt, uint8_t priNum)
{
    status_t status = kStatus_Success;

    if (NotAvail_IRQn == interrupt)
    {
        status = kStatus_Fail;
    }
# 604 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    else
    {




        __NVIC_SetPriority(interrupt, priNum);
        __NVIC_EnableIRQ(interrupt);

    }

    return status;
}
# 636 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline status_t IRQ_SetPriority(IRQn_Type interrupt, uint8_t priNum)
{
    status_t status = kStatus_Success;

    if (NotAvail_IRQn == interrupt)
    {
        status = kStatus_Fail;
    }
# 652 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    else
    {



        __NVIC_SetPriority(interrupt, priNum);

    }

    return status;
}
# 681 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline status_t IRQ_ClearPendingIRQ(IRQn_Type interrupt)
{
    status_t status = kStatus_Success;

    if (NotAvail_IRQn == interrupt)
    {
        status = kStatus_Fail;
    }
# 697 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    else
    {



        __NVIC_ClearPendingIRQ(interrupt);

    }

    return status;
}
# 717 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline uint32_t DisableGlobalIRQ(void)
{
    uint32_t mask;






    mask = __get_PRIMASK();

    __disable_irq();

    return mask;
}
# 743 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
static inline void EnableGlobalIRQ(uint32_t primask)
{
# 753 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
    __set_PRIMASK(primask);

}
# 811 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common_arm.h"
void MSDK_EnableCpuCycleCounter(void);






uint32_t MSDK_GetCpuCycleCount(void);
# 316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_common.h" 2
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h" 2

uint32_t trng_random_u32(void);
# 184 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h"
extern const struct _mp_obj_type_t network_lan_type;






extern const struct _mp_obj_type_t mp_network_cyw43_type;
# 246 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mpconfigport.h"
typedef int mp_int_t;
typedef unsigned mp_uint_t;
typedef long mp_off_t;
# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/ports/mimxrt/omv_mpconfigport.h" 2
# 90 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpconfig.h" 2
# 844 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpconfig.h"
typedef float mp_float_t;
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h" 2
# 115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h"
typedef struct _nlr_buf_t nlr_buf_t;
struct _nlr_buf_t {




    nlr_buf_t *prev;




    void *ret_val;




    void *regs[((10 + 6))];





};

typedef void (*nlr_jump_callback_fun_t)(void *ctx);

typedef struct _nlr_jump_callback_node_t nlr_jump_callback_node_t;

struct _nlr_jump_callback_node_t {
    nlr_jump_callback_node_t *prev;
    nlr_jump_callback_fun_t fun;
};
# 175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h"
unsigned int nlr_push(nlr_buf_t *);


unsigned int nlr_push_tail(nlr_buf_t *top);
void nlr_pop(void);
__attribute__((noreturn)) void nlr_jump(void *val);




__attribute__((noreturn)) void nlr_jump_abort(void);





__attribute__((noreturn)) void nlr_jump_fail(void *val);
# 221 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h"
void nlr_push_jump_callback(nlr_jump_callback_node_t *node, nlr_jump_callback_fun_t fun);



void nlr_pop_jump_callback(
# 225 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h" 3 4
                          _Bool 
# 225 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/nlr.h"
                               run_callback);


void nlr_call_jump_callbacks(nlr_buf_t *nlr);
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
# 1 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 1 3
# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3

# 39 "/home/mcoder/cache/gcc/arm-none-eabi/include/assert.h" 3
void __assert (const char *, int, const char *)
     __attribute__ ((__noreturn__));
void __assert_func (const char *, int, const char *, const char *)
     __attribute__ ((__noreturn__));
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 2


# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 1
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 2


# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
typedef unsigned char byte;
typedef unsigned int uint;
# 95 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
void *m_malloc(size_t num_bytes);
void *m_malloc_maybe(size_t num_bytes);
void *m_malloc_with_finaliser(size_t num_bytes);
void *m_malloc0(size_t num_bytes);





void *m_realloc(void *ptr, size_t new_num_bytes);
void *m_realloc_maybe(void *ptr, size_t new_num_bytes, 
# 105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
                                                      _Bool 
# 105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
                                                           allow_move);
void m_free(void *ptr);

__attribute__((noreturn)) void m_malloc_fail(size_t num_bytes);




void *m_tracked_calloc(size_t nmemb, size_t size);
void m_tracked_free(void *ptr_in);
# 135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
typedef uint32_t unichar;







unichar utf8_get_char(const byte *s);
const byte *utf8_next_char(const byte *s);
size_t utf8_charlen(const byte *str, size_t len);
# 159 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"

# 159 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 159 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isspace(unichar c);

# 160 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 160 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isalpha(unichar c);

# 161 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 161 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isprint(unichar c);

# 162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isdigit(unichar c);

# 163 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 163 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isxdigit(unichar c);

# 164 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 164 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isident(unichar c);

# 165 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 165 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isalnum(unichar c);

# 166 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 166 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_isupper(unichar c);

# 167 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
_Bool 
# 167 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    unichar_islower(unichar c);
unichar unichar_tolower(unichar c);
unichar unichar_toupper(unichar c);
mp_uint_t unichar_xdigit_value(unichar c);





typedef struct _vstr_t {
    size_t alloc;
    size_t len;
    char *buf;
    
# 180 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h" 3 4
   _Bool 
# 180 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
        fixed_buf;
} vstr_t;




void vstr_init(vstr_t *vstr, size_t alloc);
void vstr_init_len(vstr_t *vstr, size_t len);
void vstr_init_fixed_buf(vstr_t *vstr, size_t alloc, char *buf);
struct _mp_print_t;
void vstr_init_print(vstr_t *vstr, size_t alloc, struct _mp_print_t *print);
void vstr_clear(vstr_t *vstr);
vstr_t *vstr_new(size_t alloc);
void vstr_free(vstr_t *vstr);
static inline void vstr_reset(vstr_t *vstr) {
    vstr->len = 0;
}
static inline char *vstr_str(vstr_t *vstr) {
    return vstr->buf;
}
static inline size_t vstr_len(vstr_t *vstr) {
    return vstr->len;
}
void vstr_hint_size(vstr_t *vstr, size_t size);
char *vstr_extend(vstr_t *vstr, size_t size);
char *vstr_add_len(vstr_t *vstr, size_t len);
char *vstr_null_terminated_str(vstr_t *vstr);
void vstr_add_byte(vstr_t *vstr, byte v);
void vstr_add_char(vstr_t *vstr, unichar chr);
void vstr_add_str(vstr_t *vstr, const char *str);
void vstr_add_strn(vstr_t *vstr, const char *str, size_t len);
void vstr_ins_byte(vstr_t *vstr, size_t byte_pos, byte b);
void vstr_ins_char(vstr_t *vstr, size_t char_pos, unichar chr);
void vstr_cut_head_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_tail_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_out_bytes(vstr_t *vstr, size_t byte_pos, size_t bytes_to_cut);
void vstr_printf(vstr_t *vstr, const char *fmt, ...);
# 235 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
int DEBUG_printf(const char *fmt, ...);

extern mp_uint_t mp_verbose_flag;
# 252 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
typedef uint32_t mp_float_uint_t;




typedef union _mp_float_union_t {
    mp_float_t f;

    struct {
        mp_float_uint_t frc : (23);
        mp_float_uint_t exp : (8);
        mp_float_uint_t sgn : 1;
    } p;







    mp_float_uint_t i;
} mp_float_union_t;
# 399 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
static inline uint32_t mp_clz_mpi(mp_int_t x) {
# 412 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/misc.h"
    ((void)sizeof(char[1 - 2 * !(sizeof(mp_int_t) == sizeof(long long) || sizeof(mp_int_t) == sizeof(long))]))
                                            ;


    if ((sizeof(mp_int_t) == sizeof(long))) {
        return __builtin_clzl((unsigned long)x);
    } else {
        return __builtin_clzll((unsigned long long)x);
    }

}
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/qstr.h" 1
# 39 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/qstr.h"
enum {







    MP_QSTRnumber_of_static,
    MP_QSTRstart_of_main = MP_QSTRnumber_of_static - 1,
# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/qstr.h"
    MP_QSTRnumber_of,
};

typedef size_t qstr;
typedef uint16_t qstr_short_t;






typedef uint16_t qstr_hash_t;





typedef uint8_t qstr_len_t;






typedef struct _qstr_pool_t {
    const struct _qstr_pool_t *prev;
    size_t total_prev_len : (8 * sizeof(size_t) - 1);
    size_t is_sorted : 1;
    size_t alloc;
    size_t len;

    qstr_hash_t *hashes;

    qstr_len_t *lengths;
    const char *qstrs[];
} qstr_pool_t;



void qstr_init(void);

size_t qstr_compute_hash(const byte *data, size_t len);

qstr qstr_find_strn(const char *str, size_t str_len);

qstr qstr_from_str(const char *str);
qstr qstr_from_strn(const char *str, size_t len);

qstr qstr_from_strn_static(const char *str, size_t len);


mp_uint_t qstr_hash(qstr q);
const char *qstr_str(qstr q);
size_t qstr_len(qstr q);
const byte *qstr_data(qstr q, size_t *len);

void qstr_pool_info(size_t *n_pool, size_t *n_qstr, size_t *n_str_data_bytes, size_t *n_total_bytes);
void qstr_dump_data(void);


void mp_decompress_rom_string(byte *dst, const mp_rom_error_text_t src);
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpprint.h" 1
# 48 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpprint.h"
typedef void (*mp_print_strn_t)(void *data, const char *str, size_t len);

typedef struct _mp_print_t {
    void *data;
    mp_print_strn_t print_strn;
} mp_print_t;

typedef struct _mp_print_ext_t {
    mp_print_t base;
    const char *item_separator;
    const char *key_separator;
} mp_print_ext_t;





extern const mp_print_t mp_plat_print;


extern const mp_print_t mp_sys_stdout_print;


int mp_print_str(const mp_print_t *print, const char *str);
int mp_print_strn(const mp_print_t *print, const char *str, size_t len, int flags, char fill, int width);

int mp_print_float(const mp_print_t *print, mp_float_t f, char fmt, int flags, char fill, int width, int prec);


int mp_printf(const mp_print_t *print, const char *fmt, ...);
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime0.h" 1
# 71 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime0.h"
typedef enum {


    MP_UNARY_OP_POSITIVE,
    MP_UNARY_OP_NEGATIVE,
    MP_UNARY_OP_INVERT,
    MP_UNARY_OP_NOT,


    MP_UNARY_OP_BOOL,
    MP_UNARY_OP_LEN,
    MP_UNARY_OP_HASH,
    MP_UNARY_OP_ABS,
    MP_UNARY_OP_INT_MAYBE,
    MP_UNARY_OP_FLOAT_MAYBE,
    MP_UNARY_OP_COMPLEX_MAYBE,
    MP_UNARY_OP_SIZEOF,
} mp_unary_op_t;

typedef enum {




    MP_BINARY_OP_LESS,
    MP_BINARY_OP_MORE,
    MP_BINARY_OP_EQUAL,
    MP_BINARY_OP_LESS_EQUAL,
    MP_BINARY_OP_MORE_EQUAL,
    MP_BINARY_OP_NOT_EQUAL,
    MP_BINARY_OP_IN,
    MP_BINARY_OP_IS,
    MP_BINARY_OP_EXCEPTION_MATCH,


    MP_BINARY_OP_INPLACE_OR,
    MP_BINARY_OP_INPLACE_XOR,
    MP_BINARY_OP_INPLACE_AND,
    MP_BINARY_OP_INPLACE_LSHIFT,
    MP_BINARY_OP_INPLACE_RSHIFT,
    MP_BINARY_OP_INPLACE_ADD,
    MP_BINARY_OP_INPLACE_SUBTRACT,
    MP_BINARY_OP_INPLACE_MULTIPLY,
    MP_BINARY_OP_INPLACE_MAT_MULTIPLY,
    MP_BINARY_OP_INPLACE_FLOOR_DIVIDE,
    MP_BINARY_OP_INPLACE_TRUE_DIVIDE,
    MP_BINARY_OP_INPLACE_MODULO,
    MP_BINARY_OP_INPLACE_POWER,


    MP_BINARY_OP_OR,
    MP_BINARY_OP_XOR,
    MP_BINARY_OP_AND,
    MP_BINARY_OP_LSHIFT,
    MP_BINARY_OP_RSHIFT,
    MP_BINARY_OP_ADD,
    MP_BINARY_OP_SUBTRACT,
    MP_BINARY_OP_MULTIPLY,
    MP_BINARY_OP_MAT_MULTIPLY,
    MP_BINARY_OP_FLOOR_DIVIDE,
    MP_BINARY_OP_TRUE_DIVIDE,
    MP_BINARY_OP_MODULO,
    MP_BINARY_OP_POWER,






    MP_BINARY_OP_DIVMOD,



    MP_BINARY_OP_CONTAINS,



    MP_BINARY_OP_REVERSE_OR,
    MP_BINARY_OP_REVERSE_XOR,
    MP_BINARY_OP_REVERSE_AND,
    MP_BINARY_OP_REVERSE_LSHIFT,
    MP_BINARY_OP_REVERSE_RSHIFT,
    MP_BINARY_OP_REVERSE_ADD,
    MP_BINARY_OP_REVERSE_SUBTRACT,
    MP_BINARY_OP_REVERSE_MULTIPLY,
    MP_BINARY_OP_REVERSE_MAT_MULTIPLY,
    MP_BINARY_OP_REVERSE_FLOOR_DIVIDE,
    MP_BINARY_OP_REVERSE_TRUE_DIVIDE,
    MP_BINARY_OP_REVERSE_MODULO,
    MP_BINARY_OP_REVERSE_POWER,


    MP_BINARY_OP_NOT_IN,
    MP_BINARY_OP_IS_NOT,
} mp_binary_op_t;
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 2
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
typedef void *mp_obj_t;
typedef const void *mp_const_obj_t;




typedef struct _mp_obj_type_t mp_obj_type_t;



struct _mp_obj_base_t {
    const mp_obj_type_t *type ;
};
typedef struct _mp_obj_base_t mp_obj_base_t;
# 86 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
static inline 
# 86 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 86 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_obj_is_small_int(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 1) != 0;
}



static inline 
# 92 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 92 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_obj_is_qstr(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 7) == 2;
}



static inline 
# 98 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 98 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_obj_is_immediate_obj(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 7) == 6;
}
# 112 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
extern const struct _mp_obj_float_t mp_const_float_e_obj;
extern const struct _mp_obj_float_t mp_const_float_pi_obj;

extern const struct _mp_obj_float_t mp_const_float_tau_obj;
extern const struct _mp_obj_float_t mp_const_float_inf_obj;
extern const struct _mp_obj_float_t mp_const_float_nan_obj;



mp_float_t mp_obj_float_get(mp_obj_t self_in);
mp_obj_t mp_obj_new_float(mp_float_t value);


static inline 
# 125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_obj_is_obj(mp_const_obj_t o) {
    return (((mp_int_t)(o)) & 3) == 0;
}
# 346 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
typedef mp_const_obj_t mp_rom_obj_t;
# 453 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
typedef struct _mp_map_elem_t {
    mp_obj_t key;
    mp_obj_t value;
} mp_map_elem_t;

typedef struct _mp_rom_map_elem_t {
    mp_rom_obj_t key;
    mp_rom_obj_t value;
} mp_rom_map_elem_t;

typedef struct _mp_map_t {
    size_t all_keys_are_qstrs : 1;
    size_t is_fixed : 1;
    size_t is_ordered : 1;
    size_t used : (8 * sizeof(size_t) - 3);
    size_t alloc;
    mp_map_elem_t *table;
} mp_map_t;


typedef enum _mp_map_lookup_kind_t {
    MP_MAP_LOOKUP = 0,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND = 1,
    MP_MAP_LOOKUP_REMOVE_IF_FOUND = 2,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND_OR_REMOVE_IF_FOUND = 3,
} mp_map_lookup_kind_t;

static inline 
# 480 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 480 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_map_slot_is_filled(const mp_map_t *map, size_t pos) {
    
# 481 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3
   ((void)0)
# 481 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                           ;
    return (map)->table[pos].key != (((mp_obj_t)((void *)0))) && (map)->table[pos].key != (((mp_obj_t)((void *)4)));
}

void mp_map_init(mp_map_t *map, size_t n);
void mp_map_init_fixed_table(mp_map_t *map, size_t n, const mp_obj_t *table);
mp_map_t *mp_map_new(size_t n);
void mp_map_deinit(mp_map_t *map);
void mp_map_free(mp_map_t *map);
mp_map_elem_t *mp_map_lookup(mp_map_t *map, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
void mp_map_clear(mp_map_t *map);
void mp_map_dump(mp_map_t *map);



typedef struct _mp_set_t {
    size_t alloc;
    size_t used;
    mp_obj_t *table;
} mp_set_t;

static inline 
# 502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_set_slot_is_filled(const mp_set_t *set, size_t pos) {
    return (set)->table[pos] != (((mp_obj_t)((void *)0))) && (set)->table[pos] != (((mp_obj_t)((void *)4)));
}

void mp_set_init(mp_set_t *set, size_t n);
mp_obj_t mp_set_lookup(mp_set_t *set, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
mp_obj_t mp_set_remove_first(mp_set_t *set);
void mp_set_clear(mp_set_t *set);



typedef mp_obj_t (*mp_fun_0_t)(void);
typedef mp_obj_t (*mp_fun_1_t)(mp_obj_t);
typedef mp_obj_t (*mp_fun_2_t)(mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_3_t)(mp_obj_t, mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_var_t)(size_t n, const mp_obj_t *);





typedef mp_obj_t (*mp_fun_kw_t)(size_t n, const mp_obj_t *, mp_map_t *);
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
typedef enum {
    PRINT_STR = 0,
    PRINT_REPR = 1,
    PRINT_EXC = 2,
    PRINT_JSON = 3,
    PRINT_RAW = 4,
    PRINT_EXC_SUBCLASS = 0x80,
} mp_print_kind_t;

typedef struct _mp_obj_iter_buf_t {
    mp_obj_base_t base;
    mp_obj_t buf[3];
} mp_obj_iter_buf_t;





typedef void (*mp_print_fun_t)(const mp_print_t *print, mp_obj_t o, mp_print_kind_t kind);
typedef mp_obj_t (*mp_make_new_fun_t)(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_call_fun_t)(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_unary_op_fun_t)(mp_unary_op_t op, mp_obj_t);
typedef mp_obj_t (*mp_binary_op_fun_t)(mp_binary_op_t op, mp_obj_t, mp_obj_t);
typedef void (*mp_attr_fun_t)(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
typedef mp_obj_t (*mp_subscr_fun_t)(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
typedef mp_obj_t (*mp_getiter_fun_t)(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf);
typedef mp_fun_1_t mp_iternext_fun_t;


typedef struct _mp_getiter_iternext_custom_t {
    mp_getiter_fun_t getiter;
    mp_iternext_fun_t iternext;
} mp_getiter_iternext_custom_t;



typedef struct _mp_buffer_info_t {
    void *buf;
    size_t len;
    int typecode;
} mp_buffer_info_t;






typedef mp_int_t (*mp_buffer_fun_t)(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);


# 606 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 606 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_get_buffer(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);

static inline void mp_get_buffer_raise(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags) {
    mp_get_buffer(obj, bufinfo, flags | (4));
}




struct _mp_obj_type_t {

    mp_obj_base_t base;


    uint16_t flags;


    uint16_t name;
# 632 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    uint8_t slot_index_make_new;


    uint8_t slot_index_print;


    uint8_t slot_index_call;



    uint8_t slot_index_unary_op;
    uint8_t slot_index_binary_op;
# 657 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    uint8_t slot_index_attr;






    uint8_t slot_index_subscr;
# 676 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    uint8_t slot_index_iter;


    uint8_t slot_index_buffer;


    uint8_t slot_index_protocol;





    uint8_t slot_index_parent;


    uint8_t slot_index_locals_dict;

    const void *slots[];
};





typedef struct _mp_obj_empty_type_t {
    mp_obj_base_t base;
    uint16_t flags;
    uint16_t name;

    uint8_t slot_index_make_new;
    uint8_t slot_index_print;
    uint8_t slot_index_call;
    uint8_t slot_index_unary_op;
    uint8_t slot_index_binary_op;
    uint8_t slot_index_attr;
    uint8_t slot_index_subscr;
    uint8_t slot_index_iter;
    uint8_t slot_index_buffer;
    uint8_t slot_index_protocol;
    uint8_t slot_index_parent;
    uint8_t slot_index_locals_dict;


} mp_obj_empty_type_t;

typedef struct _mp_obj_full_type_t {
    mp_obj_base_t base;
    uint16_t flags;
    uint16_t name;

    uint8_t slot_index_make_new;
    uint8_t slot_index_print;
    uint8_t slot_index_call;
    uint8_t slot_index_unary_op;
    uint8_t slot_index_binary_op;
    uint8_t slot_index_attr;
    uint8_t slot_index_subscr;
    uint8_t slot_index_iter;
    uint8_t slot_index_buffer;
    uint8_t slot_index_protocol;
    uint8_t slot_index_parent;
    uint8_t slot_index_locals_dict;


    const void *slots[11];
} mp_obj_full_type_t;
# 805 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
extern const mp_obj_type_t mp_type_type;
extern const mp_obj_type_t mp_type_object;
extern const mp_obj_type_t mp_type_NoneType;
extern const mp_obj_type_t mp_type_bool;
extern const mp_obj_type_t mp_type_int;
extern const mp_obj_type_t mp_type_str;
extern const mp_obj_type_t mp_type_bytes;
extern const mp_obj_type_t mp_type_bytearray;
extern const mp_obj_type_t mp_type_memoryview;
extern const mp_obj_type_t mp_type_float;
extern const mp_obj_type_t mp_type_complex;
extern const mp_obj_type_t mp_type_tuple;
extern const mp_obj_type_t mp_type_list;
extern const mp_obj_type_t mp_type_map;
extern const mp_obj_type_t mp_type_enumerate;
extern const mp_obj_type_t mp_type_filter;
extern const mp_obj_type_t mp_type_deque;
extern const mp_obj_type_t mp_type_dict;
extern const mp_obj_type_t mp_type_ordereddict;
extern const mp_obj_type_t mp_type_range;
extern const mp_obj_type_t mp_type_set;
extern const mp_obj_type_t mp_type_frozenset;
extern const mp_obj_type_t mp_type_slice;
extern const mp_obj_type_t mp_type_zip;
extern const mp_obj_type_t mp_type_array;
extern const mp_obj_type_t mp_type_super;
extern const mp_obj_type_t mp_type_gen_wrap;
extern const mp_obj_type_t mp_type_native_gen_wrap;
extern const mp_obj_type_t mp_type_gen_instance;
extern const mp_obj_type_t mp_type_fun_builtin_0;
extern const mp_obj_type_t mp_type_fun_builtin_1;
extern const mp_obj_type_t mp_type_fun_builtin_2;
extern const mp_obj_type_t mp_type_fun_builtin_3;
extern const mp_obj_type_t mp_type_fun_builtin_var;
extern const mp_obj_type_t mp_type_fun_bc;
extern const mp_obj_type_t mp_type_fun_native;
extern const mp_obj_type_t mp_type_fun_viper;
extern const mp_obj_type_t mp_type_fun_asm;
extern const mp_obj_type_t mp_type_code;
extern const mp_obj_type_t mp_type_module;
extern const mp_obj_type_t mp_type_staticmethod;
extern const mp_obj_type_t mp_type_classmethod;
extern const mp_obj_type_t mp_type_bound_meth;
extern const mp_obj_type_t mp_type_property;
extern const mp_obj_type_t mp_type_stringio;
extern const mp_obj_type_t mp_type_bytesio;
extern const mp_obj_type_t mp_type_ringio;
extern const mp_obj_type_t mp_type_reversed;
extern const mp_obj_type_t mp_type_polymorph_iter;

extern const mp_obj_type_t mp_type_polymorph_iter_with_finaliser;



extern const mp_obj_type_t mp_type_BaseException;
extern const mp_obj_type_t mp_type_ArithmeticError;
extern const mp_obj_type_t mp_type_AssertionError;
extern const mp_obj_type_t mp_type_AttributeError;
extern const mp_obj_type_t mp_type_EOFError;
extern const mp_obj_type_t mp_type_Exception;
extern const mp_obj_type_t mp_type_GeneratorExit;
extern const mp_obj_type_t mp_type_ImportError;
extern const mp_obj_type_t mp_type_IndentationError;
extern const mp_obj_type_t mp_type_IndexError;
extern const mp_obj_type_t mp_type_KeyboardInterrupt;
extern const mp_obj_type_t mp_type_KeyError;
extern const mp_obj_type_t mp_type_LookupError;
extern const mp_obj_type_t mp_type_MemoryError;
extern const mp_obj_type_t mp_type_NameError;
extern const mp_obj_type_t mp_type_NotImplementedError;
extern const mp_obj_type_t mp_type_OSError;
extern const mp_obj_type_t mp_type_OverflowError;
extern const mp_obj_type_t mp_type_RuntimeError;
extern const mp_obj_type_t mp_type_StopAsyncIteration;
extern const mp_obj_type_t mp_type_StopIteration;
extern const mp_obj_type_t mp_type_SyntaxError;
extern const mp_obj_type_t mp_type_SystemExit;
extern const mp_obj_type_t mp_type_TypeError;
extern const mp_obj_type_t mp_type_UnicodeError;
extern const mp_obj_type_t mp_type_ValueError;
extern const mp_obj_type_t mp_type_ViperTypeError;
extern const mp_obj_type_t mp_type_ZeroDivisionError;
# 909 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
extern const struct _mp_obj_str_t mp_const_empty_bytes_obj;
extern const struct _mp_obj_tuple_t mp_const_empty_tuple_obj;
extern const struct _mp_obj_dict_t mp_const_empty_dict_obj;
extern const struct _mp_obj_singleton_t mp_const_ellipsis_obj;
extern const struct _mp_obj_singleton_t mp_const_notimplemented_obj;
extern const struct _mp_obj_exception_t mp_const_GeneratorExit_obj;
# 926 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
void *mp_obj_malloc_helper(size_t num_bytes, const mp_obj_type_t *type);





void *mp_obj_malloc_with_finaliser_helper(size_t num_bytes, const mp_obj_type_t *type);
# 966 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"

# 966 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 966 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_dict_or_ordereddict(mp_obj_t o);


mp_obj_t mp_obj_new_type(qstr name, mp_obj_t bases_tuple, mp_obj_t locals_dict);
static inline mp_obj_t mp_obj_new_bool(mp_int_t x) {
    return x ? ((mp_obj_t)(((3) << 3) | 6)) : ((mp_obj_t)(((1) << 3) | 6));
}
mp_obj_t mp_obj_new_cell(mp_obj_t obj);
mp_obj_t mp_obj_new_int(mp_int_t value);
mp_obj_t mp_obj_new_int_from_uint(mp_uint_t value);
mp_obj_t mp_obj_new_int_from_str_len(const char **str, size_t len, 
# 976 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
                                                                  _Bool 
# 976 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                                                                       neg, unsigned int base);
mp_obj_t mp_obj_new_int_from_ll(long long val);
mp_obj_t mp_obj_new_int_from_ull(unsigned long long val);
mp_obj_t mp_obj_new_str(const char *data, size_t len);
mp_obj_t mp_obj_new_str_from_cstr(const char *str);
mp_obj_t mp_obj_new_str_via_qstr(const char *data, size_t len);
mp_obj_t mp_obj_new_str_from_vstr(vstr_t *vstr);

mp_obj_t mp_obj_new_str_from_utf8_vstr(vstr_t *vstr);



mp_obj_t mp_obj_new_bytes_from_vstr(vstr_t *vstr);
mp_obj_t mp_obj_new_bytes(const byte *data, size_t len);
mp_obj_t mp_obj_new_bytearray(size_t n, const void *items);
mp_obj_t mp_obj_new_bytearray_by_ref(size_t n, void *items);

mp_obj_t mp_obj_new_int_from_float(mp_float_t val);
mp_obj_t mp_obj_new_complex(mp_float_t real, mp_float_t imag);

mp_obj_t mp_obj_new_exception(const mp_obj_type_t *exc_type);
mp_obj_t mp_obj_new_exception_args(const mp_obj_type_t *exc_type, size_t n_args, const mp_obj_t *args);




mp_obj_t mp_obj_new_exception_msg(const mp_obj_type_t *exc_type, mp_rom_error_text_t msg);
mp_obj_t mp_obj_new_exception_msg_varg(const mp_obj_type_t *exc_type, mp_rom_error_text_t fmt, ...);




mp_obj_t mp_obj_new_gen_wrap(mp_obj_t fun);
mp_obj_t mp_obj_new_closure(mp_obj_t fun, size_t n_closed, const mp_obj_t *closed);
mp_obj_t mp_obj_new_tuple(size_t n, const mp_obj_t *items);
mp_obj_t mp_obj_new_list(size_t n, mp_obj_t *items);
mp_obj_t mp_obj_new_dict(size_t n_args);
mp_obj_t mp_obj_new_set(size_t n_args, mp_obj_t *items);
mp_obj_t mp_obj_new_slice(mp_obj_t start, mp_obj_t stop, mp_obj_t step);
mp_obj_t mp_obj_new_bound_meth(mp_obj_t meth, mp_obj_t self);
mp_obj_t mp_obj_new_getitem_iter(mp_obj_t *args, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_obj_new_module(qstr module_name);
mp_obj_t mp_obj_new_memoryview(byte typecode, size_t nitems, void *items);

const mp_obj_type_t *mp_obj_get_type(mp_const_obj_t o_in);
const char *mp_obj_get_type_str(mp_const_obj_t o_in);

# 1022 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1022 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_subclass_fast(mp_const_obj_t object, mp_const_obj_t classinfo);
mp_obj_t mp_obj_cast_to_native_base(mp_obj_t self_in, mp_const_obj_t native_type);

void mp_obj_print_helper(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
void mp_obj_print(mp_obj_t o, mp_print_kind_t kind);
void mp_obj_print_exception(const mp_print_t *print, mp_obj_t exc);


# 1029 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1029 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_true(mp_obj_t arg);

# 1030 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1030 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_callable(mp_obj_t o_in);
mp_obj_t mp_obj_equal_not_equal(mp_binary_op_t op, mp_obj_t o1, mp_obj_t o2);

# 1032 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1032 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_equal(mp_obj_t o1, mp_obj_t o2);


static inline 
# 1035 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
             _Bool 
# 1035 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                  mp_obj_is_integer(mp_const_obj_t o) {
    return (mp_obj_is_small_int(o) || (mp_obj_is_obj(o) && (((mp_obj_base_t *)((void *)(o)))->type == (&mp_type_int)))) || ((o) == ((mp_obj_t)(((1) << 3) | 6)) || (o) == ((mp_obj_t)(((3) << 3) | 6)));
}

mp_int_t mp_obj_get_int(mp_const_obj_t arg);
mp_int_t mp_obj_get_int_truncated(mp_const_obj_t arg);

# 1041 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1041 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_get_int_maybe(mp_const_obj_t arg, mp_int_t *value);

mp_float_t mp_obj_get_float(mp_obj_t self_in);

# 1044 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1044 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_get_float_maybe(mp_obj_t arg, mp_float_t *value);
void mp_obj_get_complex(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);

# 1046 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1046 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_get_complex_maybe(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);

void mp_obj_get_array(mp_obj_t o, size_t *len, mp_obj_t **items);
void mp_obj_get_array_fixed_n(mp_obj_t o, size_t len, mp_obj_t **items);
size_t mp_get_index(const mp_obj_type_t *type, size_t len, mp_obj_t index, 
# 1050 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
                                                                          _Bool 
# 1050 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                                                                               is_slice);
mp_obj_t mp_obj_id(mp_obj_t o_in);
mp_obj_t mp_obj_len(mp_obj_t o_in);
mp_obj_t mp_obj_len_maybe(mp_obj_t o_in);
mp_obj_t mp_obj_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t val);



typedef struct _mp_obj_cell_t {
    mp_obj_base_t base;
    mp_obj_t obj;
} mp_obj_cell_t;

static inline mp_obj_t mp_obj_cell_get(mp_obj_t self_in) {
    mp_obj_cell_t *self = (mp_obj_cell_t *)((void *)(self_in));
    return self->obj;
}

static inline void mp_obj_cell_set(mp_obj_t self_in, mp_obj_t obj) {
    mp_obj_cell_t *self = (mp_obj_cell_t *)((void *)(self_in));
    self->obj = obj;
}



mp_int_t mp_obj_int_get_truncated(mp_const_obj_t self_in);

mp_int_t mp_obj_int_get_checked(mp_const_obj_t self_in);

mp_uint_t mp_obj_int_get_uint_checked(mp_const_obj_t self_in);



# 1082 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1082 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_native_exception_instance(mp_obj_t self_in);

# 1083 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1083 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_exception_type(mp_obj_t self_in);

# 1084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_is_exception_instance(mp_obj_t self_in);

# 1085 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1085 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_exception_match(mp_obj_t exc, mp_const_obj_t exc_type);
void mp_obj_exception_clear_traceback(mp_obj_t self_in);
void mp_obj_exception_add_traceback(mp_obj_t self_in, qstr file, size_t line, qstr block);
void mp_obj_exception_get_traceback(mp_obj_t self_in, size_t *n, size_t **values);
mp_obj_t mp_obj_exception_get_value(mp_obj_t self_in);
mp_obj_t mp_obj_exception_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_alloc_emergency_exception_buf(mp_obj_t size_in);
void mp_init_emergency_exception_buf(void);
static inline mp_obj_t mp_obj_new_exception_arg1(const mp_obj_type_t *exc_type, mp_obj_t arg) {
    
# 1094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3
   ((void)0)
# 1094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                                                                                        ;
    return mp_obj_exception_make_new(exc_type, 1, 0, &arg);
}



# 1099 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1099 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_obj_str_equal(mp_obj_t s1, mp_obj_t s2);
qstr mp_obj_str_get_qstr(mp_obj_t self_in);
const char *mp_obj_str_get_str(mp_obj_t self_in);
const char *mp_obj_str_get_data(mp_obj_t self_in, size_t *len);
mp_obj_t mp_obj_str_intern(mp_obj_t str);
mp_obj_t mp_obj_str_intern_checked(mp_obj_t obj);
void mp_str_print_quoted(const mp_print_t *print, const byte *str_data, size_t str_len, 
# 1105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
                                                                                       _Bool 
# 1105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
                                                                                            is_bytes);




static inline float mp_obj_get_float_to_f(mp_obj_t o) {
    return mp_obj_get_float(o);
}

static inline double mp_obj_get_float_to_d(mp_obj_t o) {
    return (double)mp_obj_get_float(o);
}

static inline mp_obj_t mp_obj_new_float_from_f(float o) {
    return mp_obj_new_float(o);
}

static inline mp_obj_t mp_obj_new_float_from_d(double o) {
    return mp_obj_new_float((mp_float_t)o);
}
# 1145 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
static inline mp_int_t mp_float_hash(mp_float_t val) {
    return (mp_int_t)val;
}

mp_obj_t mp_obj_float_binary_op(mp_binary_op_t op, mp_float_t lhs_val, mp_obj_t rhs);


void mp_obj_complex_get(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
mp_obj_t mp_obj_complex_binary_op(mp_binary_op_t op, mp_float_t lhs_real, mp_float_t lhs_imag, mp_obj_t rhs_in);





void mp_obj_tuple_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_tuple_del(mp_obj_t self_in);
mp_int_t mp_obj_tuple_hash(mp_obj_t self_in);


mp_obj_t mp_obj_list_append(mp_obj_t self_in, mp_obj_t arg);
mp_obj_t mp_obj_list_remove(mp_obj_t self_in, mp_obj_t value);
void mp_obj_list_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_list_set_len(mp_obj_t self_in, size_t len);
void mp_obj_list_store(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_list_sort(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);


typedef struct _mp_obj_dict_t {
    mp_obj_base_t base;
    mp_map_t map;
} mp_obj_dict_t;
mp_obj_t mp_obj_dict_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
void mp_obj_dict_init(mp_obj_dict_t *dict, size_t n_args);
size_t mp_obj_dict_len(mp_obj_t self_in);
mp_obj_t mp_obj_dict_get(mp_obj_t self_in, mp_obj_t index);
mp_obj_t mp_obj_dict_store(mp_obj_t self_in, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_obj_dict_delete(mp_obj_t self_in, mp_obj_t key);
mp_obj_t mp_obj_dict_copy(mp_obj_t self_in);
static inline mp_map_t *mp_obj_dict_get_map(mp_obj_t dict) {
    return &((mp_obj_dict_t *)((void *)(dict)))->map;
}


void mp_obj_set_store(mp_obj_t self_in, mp_obj_t item);


typedef struct {
    mp_int_t start;
    mp_int_t stop;
    mp_int_t step;
} mp_bound_slice_t;


typedef struct _mp_obj_slice_t {
    mp_obj_base_t base;
    mp_obj_t start;
    mp_obj_t stop;
    mp_obj_t step;
} mp_obj_slice_t;
void mp_obj_slice_indices(mp_obj_t self_in, mp_int_t length, mp_bound_slice_t *result);



typedef struct _mp_obj_fun_builtin_fixed_t {
    mp_obj_base_t base;
    union {
        mp_fun_0_t _0;
        mp_fun_1_t _1;
        mp_fun_2_t _2;
        mp_fun_3_t _3;
    } fun;
} mp_obj_fun_builtin_fixed_t;

typedef struct _mp_obj_fun_builtin_var_t {
    mp_obj_base_t base;
    uint32_t sig;
    union {
        mp_fun_var_t var;
        mp_fun_kw_t kw;
    } fun;
} mp_obj_fun_builtin_var_t;

qstr mp_obj_fun_get_name(mp_const_obj_t fun);

mp_obj_t mp_identity(mp_obj_t self);
extern const mp_obj_fun_builtin_fixed_t mp_identity_obj;


typedef struct _mp_obj_module_t {
    mp_obj_base_t base;
    mp_obj_dict_t *globals;
} mp_obj_module_t;
static inline mp_obj_dict_t *mp_obj_module_get_globals(mp_obj_t module) {
    return ((mp_obj_module_t *)((void *)(module)))->globals;
}



typedef struct _mp_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_obj_t fun;
} mp_obj_static_class_method_t;
typedef struct _mp_rom_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_rom_obj_t fun;
} mp_rom_obj_static_class_method_t;


const mp_obj_t *mp_obj_property_get(mp_obj_t self_in);



void mp_seq_multiply(const void *items, size_t item_sz, size_t len, size_t times, void *dest);


# 1259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_seq_get_fast_slice_indexes(mp_uint_t len, mp_obj_t slice, mp_bound_slice_t *indexes);




# 1263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_seq_cmp_bytes(mp_uint_t op, const byte *data1, size_t len1, const byte *data2, size_t len2);

# 1264 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h" 3 4
_Bool 
# 1264 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/obj.h"
    mp_seq_cmp_objs(mp_uint_t op, const mp_obj_t *items1, size_t len1, const mp_obj_t *items2, size_t len2);
mp_obj_t mp_seq_index_obj(const mp_obj_t *items, size_t len, size_t n_args, const mp_obj_t *args);
mp_obj_t mp_seq_count_obj(const mp_obj_t *items, size_t len, mp_obj_t value);
mp_obj_t mp_seq_extract_slice(const mp_obj_t *seq, mp_bound_slice_t *indexes);
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objlist.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objlist.h"
typedef struct _mp_obj_list_t {
    mp_obj_base_t base;
    size_t alloc;
    size_t len;
    mp_obj_t *items;
} mp_obj_list_t;

void mp_obj_list_init(mp_obj_list_t *o, size_t n);
mp_obj_t mp_obj_list_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objarray.h" 1
# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objarray.h"
typedef struct _mp_obj_array_t {
    mp_obj_base_t base;
    size_t typecode : 8;






    size_t free : (8 * sizeof(size_t) - 8);
    size_t len;
    void *items;
} mp_obj_array_t;






static inline void mp_obj_memoryview_init(mp_obj_array_t *self, size_t typecode, size_t offset, size_t len, void *items) {
    self->base.type = &mp_type_memoryview;
    self->typecode = typecode;
    self->free = offset;
    self->len = len;
    self->items = items;
}




extern const mp_obj_fun_builtin_fixed_t mp_obj_array_append_obj;
extern const mp_obj_fun_builtin_fixed_t mp_obj_array_extend_obj;
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h" 2

typedef struct _mp_obj_str_t {
    mp_obj_base_t base;
    size_t hash;

    size_t len;
    const byte *data;
} mp_obj_str_t;
# 87 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h"
mp_obj_t mp_obj_str_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
void mp_str_print_json(const mp_print_t *print, const byte *str_data, size_t str_len);
mp_obj_t mp_obj_str_format(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);
mp_obj_t mp_obj_str_split(size_t n_args, const mp_obj_t *args);
mp_obj_t mp_obj_new_str_copy(const mp_obj_type_t *type, const byte *data, size_t len);
mp_obj_t mp_obj_new_str_of_type(const mp_obj_type_t *type, const byte *data, size_t len);

mp_obj_t mp_obj_str_binary_op(mp_binary_op_t op, mp_obj_t lhs_in, mp_obj_t rhs_in);
mp_int_t mp_obj_str_get_buffer(mp_obj_t self_in, mp_buffer_info_t *bufinfo, mp_uint_t flags);

void mp_obj_str_set_data(mp_obj_str_t *str, const byte *data, size_t len);

const byte *str_index_to_ptr(const mp_obj_type_t *type, const byte *self_data, size_t self_len,
    mp_obj_t index, 
# 100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h" 3 4
                   _Bool 
# 100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objstr.h"
                        is_slice);
const byte *find_subbytes(const byte *haystack, size_t hlen, const byte *needle, size_t nlen, int direction);



mp_obj_t mp_obj_bytes_hex(size_t n_args, const mp_obj_t *args, const mp_obj_type_t *type);
mp_obj_t mp_obj_bytes_fromhex(mp_obj_t type_in, mp_obj_t data);

extern const mp_obj_dict_t mp_obj_str_locals_dict;


extern const mp_obj_dict_t mp_obj_memoryview_locals_dict;



extern const mp_obj_dict_t mp_obj_bytearray_locals_dict;



extern const mp_obj_dict_t mp_obj_array_locals_dict;
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtuple.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtuple.h"
typedef struct _mp_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_obj_t items[];
} mp_obj_tuple_t;

typedef struct _mp_rom_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_rom_obj_t items[];
} mp_rom_obj_tuple_t;

void mp_obj_tuple_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
mp_obj_t mp_obj_tuple_unary_op(mp_unary_op_t op, mp_obj_t self_in);
mp_obj_t mp_obj_tuple_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);
mp_obj_t mp_obj_tuple_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_tuple_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf);

extern const mp_obj_type_t mp_type_attrtuple;
# 59 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtuple.h"
void mp_obj_attrtuple_print_helper(const mp_print_t *print, const qstr *fields, mp_obj_tuple_t *o);


mp_obj_t mp_obj_new_attrtuple(const qstr *fields, size_t n, const mp_obj_t *items);
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtype.h" 1
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtype.h"
typedef struct _mp_obj_instance_t {
    mp_obj_base_t base;
    mp_map_t members;
    mp_obj_t subobj[];

} mp_obj_instance_t;



mp_obj_instance_t *mp_obj_new_instance(const mp_obj_type_t *cls, const mp_obj_type_t **native_base);




# 46 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtype.h" 3 4
_Bool 
# 46 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objtype.h"
    mp_obj_instance_is_callable(mp_obj_t self_in);
mp_obj_t mp_obj_instance_call(mp_obj_t self_in, size_t n_args, size_t n_kw, const mp_obj_t *args);





mp_obj_t mp_obj_instance_getiter(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf);
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpthread.h" 1
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h" 2




# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objexcept.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/objexcept.h"
typedef struct _mp_obj_exception_t {
    mp_obj_base_t base;
    size_t traceback_alloc : (8 * sizeof(size_t) / 2);
    size_t traceback_len : (8 * sizeof(size_t) / 2);
    size_t *traceback_data;
    mp_obj_tuple_t *args;
} mp_obj_exception_t;

void mp_obj_exception_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
void mp_obj_exception_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
# 38 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h" 2







enum {

    MP_SYS_MUTABLE_PATH,


    MP_SYS_MUTABLE_PS1,
    MP_SYS_MUTABLE_PS2,




    MP_SYS_MUTABLE_NUM,
};
# 75 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
typedef struct _mp_sched_item_t {
    mp_obj_t func;
    mp_obj_t arg;
} mp_sched_item_t;
# 94 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
typedef struct _mp_state_mem_area_t {

    struct _mp_state_mem_area_t *next;


    byte *gc_alloc_table_start;
    size_t gc_alloc_table_byte_len;

    byte *gc_finaliser_table_start;

    byte *gc_pool_start;
    byte *gc_pool_end;

    size_t gc_last_free_atb_index;
    size_t gc_last_used_block;
} mp_state_mem_area_t;


typedef struct _mp_state_mem_t {






    mp_state_mem_area_t area;

    int gc_stack_overflow;
    uint32_t gc_block_stack[(64)];


    mp_state_mem_area_t *gc_area_stack[(64)];





    uint16_t gc_auto_collect_enabled;


    size_t gc_alloc_amount;
    size_t gc_alloc_threshold;



    mp_state_mem_area_t *gc_last_free_area;
# 150 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
} mp_state_mem_t;



typedef struct _mp_state_vm_t {







    qstr_pool_t *last_pool;


    struct _m_tracked_node_t *m_tracked_head;



    mp_obj_exception_t mp_emergency_exception_obj;
# 178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
    byte *mp_emergency_exception_buf;





    mp_obj_exception_t mp_kbd_exception;



    mp_obj_dict_t mp_loaded_modules_dict;


    mp_obj_dict_t dict_main;



    mp_obj_dict_t *mp_module_builtins_override_dict;
# 211 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
    char *qstr_last_chunk;
    size_t qstr_last_alloc;
    size_t qstr_last_used;







    mp_uint_t mp_optimise_value;

    uint8_t default_emit_opt;





    mp_int_t mp_emergency_exception_buf_size;



    volatile int16_t sched_state;





    struct _mp_sched_node_t *sched_head;
    struct _mp_sched_node_t *sched_tail;



    uint8_t sched_len;
    uint8_t sched_idx;



    
# 249 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h" 3 4
   _Bool 
# 249 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
        vm_abort;
    nlr_buf_t *nlr_abort;
# 260 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
    uint8_t map_lookup_cache[(128)];

} mp_state_vm_t;





typedef struct _mp_state_thread_t {

    char *stack_top;


    size_t stack_limit;
# 284 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
    uint16_t gc_lock_depth;







    mp_obj_dict_t *dict_locals;
    mp_obj_dict_t *dict_globals;

    nlr_buf_t *nlr_top;
    nlr_jump_callback_node_t *nlr_jump_callback_top;


    volatile mp_obj_t mp_pending_exception;


    mp_obj_t stop_iteration_arg;
# 313 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mpstate.h"
} mp_state_thread_t;



typedef struct _mp_state_ctx_t {
    mp_state_thread_t thread;
    mp_state_vm_t vm;
    mp_state_mem_t mem;
} mp_state_ctx_t;

extern mp_state_ctx_t mp_state_ctx;
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/pystack.h" 1
# 80 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/pystack.h"
static inline void mp_local_free(void *ptr) {
    (void)ptr;
}

static inline void *mp_nonlocal_alloc(size_t n_bytes) {
    return ((uint8_t *)(m_malloc(sizeof(uint8_t) * (n_bytes))));
}

static inline void *mp_nonlocal_realloc(void *ptr, size_t old_n_bytes, size_t new_n_bytes) {
    return ((uint8_t *)(m_realloc((ptr), sizeof(uint8_t) * (new_n_bytes))));
}

static inline void mp_nonlocal_free(void *ptr, size_t n_bytes) {
    ((void)(n_bytes), m_free(ptr));
}
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/cstack.h" 1
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/cstack.h"
void mp_cstack_init_with_sp_here(size_t stack_size);

inline static void mp_cstack_init_with_top(void *top, size_t stack_size) {
    (mp_state_ctx.thread.stack_top) = (char *)top;


    
# 42 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/cstack.h" 3
   ((void)0)
# 42 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/cstack.h"
                                                  ;
    (mp_state_ctx.thread.stack_limit) = stack_size - (0);



}

mp_uint_t mp_cstack_usage(void);



void mp_cstack_check(void);
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 2
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
typedef enum {
    MP_VM_RETURN_NORMAL,
    MP_VM_RETURN_YIELD,
    MP_VM_RETURN_EXCEPTION,
} mp_vm_return_kind_t;

typedef enum {
    MP_ARG_BOOL = 0x001,
    MP_ARG_INT = 0x002,
    MP_ARG_OBJ = 0x003,
    MP_ARG_KIND_MASK = 0x0ff,
    MP_ARG_REQUIRED = 0x100,
    MP_ARG_KW_ONLY = 0x200,
} mp_arg_flag_t;

typedef union _mp_arg_val_t {
    
# 56 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
   _Bool 
# 56 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
        u_bool;
    mp_int_t u_int;
    mp_obj_t u_obj;
    mp_rom_obj_t u_rom_obj;
} mp_arg_val_t;

typedef struct _mp_arg_t {
    uint16_t qst;
    uint16_t flags;
    mp_arg_val_t defval;
} mp_arg_t;

struct _mp_sched_node_t;

typedef void (*mp_sched_callback_t)(struct _mp_sched_node_t *);

typedef struct _mp_sched_node_t {
    mp_sched_callback_t callback;
    struct _mp_sched_node_t *next;
} mp_sched_node_t;


typedef struct _nlr_jump_callback_node_globals_locals_t {
    nlr_jump_callback_node_t callback;
    mp_obj_dict_t *globals;
    mp_obj_dict_t *locals;
} nlr_jump_callback_node_globals_locals_t;


typedef struct _nlr_jump_callback_node_call_function_1_t {
    nlr_jump_callback_node_t callback;
    void (*func)(void *);
    void *arg;
} nlr_jump_callback_node_call_function_1_t;


extern const byte mp_unary_op_method_name[];
extern const byte mp_binary_op_method_name[];

void mp_init(void);
void mp_deinit(void);

void mp_sched_exception(mp_obj_t exc);
void mp_sched_keyboard_interrupt(void);

void mp_sched_vm_abort(void);

void mp_handle_pending(
# 103 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
                      _Bool 
# 103 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
                           raise_exc);


void mp_sched_lock(void);
void mp_sched_unlock(void);


# 109 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
_Bool 
# 109 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
    mp_sched_schedule(mp_obj_t function, mp_obj_t arg);

# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
_Bool 
# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
    mp_sched_schedule_node(mp_sched_node_t *node, mp_sched_callback_t callback);



void mp_event_handle_nowait(void);







void mp_event_wait_indefinite(void);





void mp_event_wait_ms(mp_uint_t timeout_ms);


int mp_print_mp_int(const mp_print_t *print, mp_obj_t x, int base, int base_char, int flags, char fill, int width, int prec);

void mp_arg_check_num_sig(size_t n_args, size_t n_kw, uint32_t sig);
static inline void mp_arg_check_num(size_t n_args, size_t n_kw, size_t n_args_min, size_t n_args_max, 
# 134 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
                                                                                                     _Bool 
# 134 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
                                                                                                          takes_kw) {
    mp_arg_check_num_sig(n_args, n_kw, ((uint32_t)((((uint32_t)(n_args_min)) << 17) | (((uint32_t)(n_args_max)) << 1) | ((takes_kw) ? 1 : 0))));
}
void mp_arg_parse_all(size_t n_pos, const mp_obj_t *pos, mp_map_t *kws, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
void mp_arg_parse_all_kw_array(size_t n_pos, size_t n_kw, const mp_obj_t *args, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
__attribute__((noreturn)) void mp_arg_error_terse_mismatch(void);
__attribute__((noreturn)) void mp_arg_error_unimpl_kw(void);

static inline mp_obj_dict_t *mp_locals_get(void) {
    return (mp_state_ctx.thread.dict_locals);
}
static inline void mp_locals_set(mp_obj_dict_t *d) {
    (mp_state_ctx.thread.dict_locals) = d;
}
static inline mp_obj_dict_t *mp_globals_get(void) {
    return (mp_state_ctx.thread.dict_globals);
}
static inline void mp_globals_set(mp_obj_dict_t *d) {
    (mp_state_ctx.thread.dict_globals) = d;
}

void mp_globals_locals_set_from_nlr_jump_callback(void *ctx_in);
void mp_call_function_1_from_nlr_jump_callback(void *ctx_in);
# 183 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
mp_obj_t mp_load_name(qstr qst);
mp_obj_t mp_load_global(qstr qst);
mp_obj_t mp_load_build_class(void);
void mp_store_name(qstr qst, mp_obj_t obj);
void mp_store_global(qstr qst, mp_obj_t obj);
void mp_delete_name(qstr qst);
void mp_delete_global(qstr qst);

mp_obj_t mp_unary_op(mp_unary_op_t op, mp_obj_t arg);
mp_obj_t mp_binary_op(mp_binary_op_t op, mp_obj_t lhs, mp_obj_t rhs);

mp_obj_t mp_call_function_0(mp_obj_t fun);
mp_obj_t mp_call_function_1(mp_obj_t fun, mp_obj_t arg);
mp_obj_t mp_call_function_2(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);
mp_obj_t mp_call_function_n_kw(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw(size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw_var(
# 199 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
                                _Bool 
# 199 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
                                     have_self, size_t n_args_n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_self_n_kw(mp_obj_t meth, mp_obj_t self, size_t n_args, size_t n_kw, const mp_obj_t *args);


mp_obj_t mp_call_function_1_protected(mp_obj_t fun, mp_obj_t arg);
mp_obj_t mp_call_function_2_protected(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);

typedef struct _mp_call_args_t {
    mp_obj_t fun;
    size_t n_args, n_kw, n_alloc;
    mp_obj_t *args;
} mp_call_args_t;
# 220 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
void mp_unpack_sequence(mp_obj_t seq, size_t num, mp_obj_t *items);
void mp_unpack_ex(mp_obj_t seq, size_t num, mp_obj_t *items);
mp_obj_t mp_store_map(mp_obj_t map, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_load_attr(mp_obj_t base, qstr attr);
void mp_convert_member_lookup(mp_obj_t obj, const mp_obj_type_t *type, mp_obj_t member, mp_obj_t *dest);
void mp_load_method(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_method_maybe(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_method_protected(mp_obj_t obj, qstr attr, mp_obj_t *dest, 
# 227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h" 3 4
                                                                      _Bool 
# 227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
                                                                           catch_all_exc);
void mp_load_super_method(qstr attr, mp_obj_t *dest);
void mp_store_attr(mp_obj_t base, qstr attr, mp_obj_t val);

mp_obj_t mp_getiter(mp_obj_t o, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_iternext_allow_raise(mp_obj_t o);
mp_obj_t mp_iternext(mp_obj_t o);
mp_vm_return_kind_t mp_resume(mp_obj_t self_in, mp_obj_t send_value, mp_obj_t throw_value, mp_obj_t *ret_val);

static inline mp_obj_t mp_make_stop_iteration(mp_obj_t o) {
    (mp_state_ctx.thread.stop_iteration_arg) = o;
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t mp_make_raise_obj(mp_obj_t o);

mp_obj_t mp_import_name(qstr name, mp_obj_t fromlist, mp_obj_t level);
mp_obj_t mp_import_from(mp_obj_t module, qstr name);
void mp_import_all(mp_obj_t module);
# 259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
__attribute__((noreturn)) void mp_raise_msg(const mp_obj_type_t *exc_type, mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_msg_varg(const mp_obj_type_t *exc_type, mp_rom_error_text_t fmt, ...);
__attribute__((noreturn)) void mp_raise_ValueError(mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_TypeError(mp_rom_error_text_t msg);
__attribute__((noreturn)) void mp_raise_NotImplementedError(mp_rom_error_text_t msg);


__attribute__((noreturn)) void mp_raise_type_arg(const mp_obj_type_t *exc_type, mp_obj_t arg);
__attribute__((noreturn)) void mp_raise_StopIteration(mp_obj_t arg);
__attribute__((noreturn)) void mp_raise_TypeError_int_conversion(mp_const_obj_t arg);
__attribute__((noreturn)) void mp_raise_OSError(int errno_);
__attribute__((noreturn)) void mp_raise_OSError_with_filename(int errno_, const char *filename);
__attribute__((noreturn)) void mp_raise_recursion_depth(void);
# 284 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/runtime.h"
int mp_native_type_from_qstr(qstr qst);
mp_uint_t mp_native_from_obj(mp_obj_t obj, mp_uint_t type);
mp_obj_t mp_native_to_obj(mp_uint_t val, mp_uint_t type);
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mphal.h" 1
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mphal.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/ticks.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/ticks.h"
void ticks_init(void);
uint32_t ticks_us32(void);
uint64_t ticks_us64(void);
uint32_t ticks_ms32(void);
void ticks_delay_us64(uint64_t us);
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/ringbuf.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/ringbuf.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/ringbuf.h" 2





typedef struct _ringbuf_t {
    uint8_t *buf;
    uint16_t size;
    uint16_t iget;
    uint16_t iput;
} ringbuf_t;
# 54 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/ringbuf.h"
static inline int ringbuf_get(ringbuf_t *r) {
    if (r->iget == r->iput) {
        return -1;
    }
    uint8_t v = r->buf[r->iget++];
    if (r->iget >= r->size) {
        r->iget = 0;
    }
    return v;
}

static inline int ringbuf_peek(ringbuf_t *r) {
    if (r->iget == r->iput) {
        return -1;
    }
    return r->buf[r->iget];
}

static inline int ringbuf_put(ringbuf_t *r, uint8_t v) {
    uint32_t iput_new = r->iput + 1;
    if (iput_new >= r->size) {
        iput_new = 0;
    }
    if (iput_new == r->iget) {
        return -1;
    }
    r->buf[r->iput] = v;
    r->iput = iput_new;
    return 0;
}

static inline size_t ringbuf_free(ringbuf_t *r) {
    return (r->size + r->iget - r->iput - 1) % r->size;
}

static inline size_t ringbuf_avail(ringbuf_t *r) {
    return (r->size + r->iput - r->iget) % r->size;
}

static inline void ringbuf_memcpy_get_internal(ringbuf_t *r, uint8_t *data, size_t data_len) {


    uint32_t iget = r->iget;
    uint32_t iget_a = (iget + data_len) % r->size;
    uint8_t *datap = data;
    if (iget_a < iget) {

        memcpy(datap, r->buf + iget, r->size - iget);
        datap += (r->size - iget);
        iget = 0;
    }
    memcpy(datap, r->buf + iget, iget_a - iget);
    r->iget = iget_a;
}

static inline void ringbuf_memcpy_put_internal(ringbuf_t *r, const uint8_t *data, size_t data_len) {


    uint32_t iput = r->iput;
    uint32_t iput_a = (iput + data_len) % r->size;
    const uint8_t *datap = data;
    if (iput_a < iput) {

        memcpy(r->buf + iput, datap, r->size - iput);
        datap += (r->size - iput);
        iput = 0;
    }
    memcpy(r->buf + iput, datap, iput_a - iput);
    r->iput = iput_a;
}


int ringbuf_get16(ringbuf_t *r);
int ringbuf_peek16(ringbuf_t *r);
int ringbuf_put16(ringbuf_t *r, uint16_t v);

int ringbuf_get_bytes(ringbuf_t *r, uint8_t *data, size_t data_len);
int ringbuf_put_bytes(ringbuf_t *r, const uint8_t *data, size_t data_len);
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/shared/runtime/mpirq.h" 1
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/shared/runtime/mpirq.h"
enum {
    MP_IRQ_ARG_INIT_handler = 0,
    MP_IRQ_ARG_INIT_trigger,
    MP_IRQ_ARG_INIT_hard,
    MP_IRQ_ARG_INIT_NUM_ARGS,
};





typedef mp_uint_t (*mp_irq_trigger_fun_t)(mp_obj_t self, mp_uint_t trigger);
typedef mp_uint_t (*mp_irq_info_fun_t)(mp_obj_t self, mp_uint_t info_type);

enum {
    MP_IRQ_INFO_FLAGS,
    MP_IRQ_INFO_TRIGGERS,
};

typedef struct _mp_irq_methods_t {
    mp_irq_trigger_fun_t trigger;
    mp_irq_info_fun_t info;
} mp_irq_methods_t;

typedef struct _mp_irq_obj_t {
    mp_obj_base_t base;
    mp_irq_methods_t *methods;
    mp_obj_t parent;
    mp_obj_t handler;
    
# 64 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/shared/runtime/mpirq.h" 3 4
   _Bool 
# 64 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/shared/runtime/mpirq.h"
        ishard;
} mp_irq_obj_t;





extern const mp_arg_t mp_irq_init_args[];
extern const mp_obj_type_t mp_irq_type;





mp_irq_obj_t *mp_irq_new(const mp_irq_methods_t *methods, mp_obj_t parent);
void mp_irq_init(mp_irq_obj_t *self, const mp_irq_methods_t *methods, mp_obj_t parent);
void mp_irq_handler(mp_irq_obj_t *self);
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
typedef enum _gpio_pin_direction
{
    kGPIO_DigitalInput = 0U,
    kGPIO_DigitalOutput = 1U,
} gpio_pin_direction_t;


typedef enum _gpio_interrupt_mode
{
    kGPIO_NoIntmode = 0U,
    kGPIO_IntLowLevel = 1U,
    kGPIO_IntHighLevel = 2U,
    kGPIO_IntRisingEdge = 3U,
    kGPIO_IntFallingEdge = 4U,
    kGPIO_IntRisingOrFallingEdge = 5U,
} gpio_interrupt_mode_t;


typedef struct _gpio_pin_config
{
    gpio_pin_direction_t direction;
    uint8_t outputLogic;
    gpio_interrupt_mode_t
        interruptMode;
} gpio_pin_config_t;
# 78 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
void GPIO_PinInit(GPIO_Type *base, uint32_t pin, const gpio_pin_config_t *Config);
# 95 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
void GPIO_PinWrite(GPIO_Type *base, uint32_t pin, uint8_t output);





static inline void GPIO_WritePinOutput(GPIO_Type *base, uint32_t pin, uint8_t output)
{
    GPIO_PinWrite(base, pin, output);
}







static inline void GPIO_PortSet(GPIO_Type *base, uint32_t mask)
{

    base->DR_SET = mask;



}





static inline void GPIO_SetPinsOutput(GPIO_Type *base, uint32_t mask)
{
    GPIO_PortSet(base, mask);
}







static inline void GPIO_PortClear(GPIO_Type *base, uint32_t mask)
{

    base->DR_CLEAR = mask;



}





static inline void GPIO_ClearPinsOutput(GPIO_Type *base, uint32_t mask)
{
    GPIO_PortClear(base, mask);
}







static inline void GPIO_PortToggle(GPIO_Type *base, uint32_t mask)
{

    base->DR_TOGGLE = mask;



}
# 176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
static inline uint32_t GPIO_PinRead(GPIO_Type *base, uint32_t pin)
{
    
# 178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h" 3
   ((void)0)
# 178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
                    ;

    return (((base->DR) >> pin) & 0x1U);
}





static inline uint32_t GPIO_ReadPinInput(GPIO_Type *base, uint32_t pin)
{
    return GPIO_PinRead(base, pin);
}
# 205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
static inline uint8_t GPIO_PinReadPadStatus(GPIO_Type *base, uint32_t pin)
{
    
# 207 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h" 3
   ((void)0)
# 207 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
                    ;

    return (uint8_t)(((base->PSR) >> pin) & 0x1U);
}





static inline uint8_t GPIO_ReadPadStatus(GPIO_Type *base, uint32_t pin)
{
    return GPIO_PinReadPadStatus(base, pin);
}
# 236 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
void GPIO_PinSetInterruptConfig(GPIO_Type *base, uint32_t pin, gpio_interrupt_mode_t pinInterruptMode);





static inline void GPIO_SetPinInterruptConfig(GPIO_Type *base, uint32_t pin, gpio_interrupt_mode_t pinInterruptMode)
{
    GPIO_PinSetInterruptConfig(base, pin, pinInterruptMode);
}







static inline void GPIO_PortEnableInterrupts(GPIO_Type *base, uint32_t mask)
{
    base->IMR |= mask;
}







static inline void GPIO_EnableInterrupts(GPIO_Type *base, uint32_t mask)
{
    GPIO_PortEnableInterrupts(base, mask);
}







static inline void GPIO_PortDisableInterrupts(GPIO_Type *base, uint32_t mask)
{
    base->IMR &= ~mask;
}





static inline void GPIO_DisableInterrupts(GPIO_Type *base, uint32_t mask)
{
    GPIO_PortDisableInterrupts(base, mask);
}







static inline uint32_t GPIO_PortGetInterruptFlags(GPIO_Type *base)
{
    return base->ISR;
}







static inline uint32_t GPIO_GetPinsInterruptFlags(GPIO_Type *base)
{
    return GPIO_PortGetInterruptFlags(base);
}
# 318 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
static inline void GPIO_PortClearInterruptFlags(GPIO_Type *base, uint32_t mask)
{
    base->ISR = mask;
}
# 330 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_gpio.h"
static inline void GPIO_ClearPinsInterruptFlags(GPIO_Type *base, uint32_t mask)
{
    GPIO_PortClearInterruptFlags(base, mask);
}
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h" 2
# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h"
enum {
    PIN_MODE_IN = 0,
    PIN_MODE_OUT,
    PIN_MODE_OPEN_DRAIN,
    PIN_MODE_ALT,
    PIN_MODE_SKIP,
    PIN_MODE_IT_RISING,
    PIN_MODE_IT_FALLING,
    PIN_MODE_IT_BOTH,
};

enum {
    PIN_AF_MODE_ALT0 = 0,
    PIN_AF_MODE_ALT1,
    PIN_AF_MODE_ALT2,
    PIN_AF_MODE_ALT3,
    PIN_AF_MODE_ALT4,
    PIN_AF_MODE_ALT5,
    PIN_AF_MODE_ALT6,
    PIN_AF_MODE_ALT7,
    PIN_AF_MODE_ALT8,
    PIN_AF_MODE_ALT9,
    PIN_AF_MODE_ALT10,
};

enum {
    PIN_PULL_DOWN_100K = 0,
    PIN_PULL_UP_47K,
    PIN_PULL_UP_100K,
    PIN_PULL_UP_22K,
    PIN_PULL_DISABLED,
    PIN_PULL_HOLD,
};

enum {
    PIN_DRIVE_OFF = 0b000,
    PIN_DRIVE_0,
    PIN_DRIVE_1,
    PIN_DRIVE_2,
    PIN_DRIVE_3,
    PIN_DRIVE_4,
    PIN_DRIVE_5,
    PIN_DRIVE_6,
};






typedef struct {
    mp_obj_base_t base;
    qstr name;
    uint8_t af_mode;
    uint8_t input_daisy;
    void *instance;
    uint32_t input_register;
    uint32_t pad_config;
} machine_pin_af_obj_t;

typedef struct {
    ADC_Type *instance;
    uint8_t channel;
} machine_pin_adc_obj_t;

typedef struct {
    mp_obj_base_t base;
    qstr name;
    GPIO_Type *gpio;
    uint32_t pin;
    uint32_t muxRegister;
    uint32_t configRegister;
    uint8_t af_list_len;
    uint8_t adc_list_len;
    const machine_pin_af_obj_t *af_list;
    const machine_pin_adc_obj_t *adc_list;
} machine_pin_obj_t;

typedef struct _machine_pin_irq_obj_t {
    mp_irq_obj_t base;
    uint32_t flags;
    uint32_t trigger;
} machine_pin_irq_obj_t;



extern const mp_obj_type_t machine_pin_af_type;




# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/build/lib/micropython/genhdr/pins.h" 1

extern const machine_pin_obj_t pin_GPIO_AD_B0_00_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_01_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_02_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_03_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_04_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_05_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_06_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_07_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_08_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_09_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_10_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_11_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_12_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_13_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_14_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B0_15_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_00_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_01_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_02_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_03_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_04_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_05_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_06_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_07_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_08_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_09_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_10_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_11_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_12_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_13_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_14_obj;
extern const machine_pin_obj_t pin_GPIO_AD_B1_15_obj;
extern const machine_pin_obj_t pin_GPIO_B0_00_obj;
extern const machine_pin_obj_t pin_GPIO_B0_01_obj;
extern const machine_pin_obj_t pin_GPIO_B0_02_obj;
extern const machine_pin_obj_t pin_GPIO_B0_03_obj;
extern const machine_pin_obj_t pin_GPIO_B0_04_obj;
extern const machine_pin_obj_t pin_GPIO_B0_05_obj;
extern const machine_pin_obj_t pin_GPIO_B0_06_obj;
extern const machine_pin_obj_t pin_GPIO_B0_07_obj;
extern const machine_pin_obj_t pin_GPIO_B0_08_obj;
extern const machine_pin_obj_t pin_GPIO_B0_09_obj;
extern const machine_pin_obj_t pin_GPIO_B0_10_obj;
extern const machine_pin_obj_t pin_GPIO_B0_11_obj;
extern const machine_pin_obj_t pin_GPIO_B0_12_obj;
extern const machine_pin_obj_t pin_GPIO_B0_13_obj;
extern const machine_pin_obj_t pin_GPIO_B0_14_obj;
extern const machine_pin_obj_t pin_GPIO_B0_15_obj;
extern const machine_pin_obj_t pin_GPIO_B1_00_obj;
extern const machine_pin_obj_t pin_GPIO_B1_01_obj;
extern const machine_pin_obj_t pin_GPIO_B1_02_obj;
extern const machine_pin_obj_t pin_GPIO_B1_03_obj;
extern const machine_pin_obj_t pin_GPIO_B1_04_obj;
extern const machine_pin_obj_t pin_GPIO_B1_05_obj;
extern const machine_pin_obj_t pin_GPIO_B1_06_obj;
extern const machine_pin_obj_t pin_GPIO_B1_07_obj;
extern const machine_pin_obj_t pin_GPIO_B1_08_obj;
extern const machine_pin_obj_t pin_GPIO_B1_09_obj;
extern const machine_pin_obj_t pin_GPIO_B1_10_obj;
extern const machine_pin_obj_t pin_GPIO_B1_11_obj;
extern const machine_pin_obj_t pin_GPIO_B1_12_obj;
extern const machine_pin_obj_t pin_GPIO_B1_13_obj;
extern const machine_pin_obj_t pin_GPIO_B1_14_obj;
extern const machine_pin_obj_t pin_GPIO_B1_15_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_00_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_01_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_02_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_03_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_04_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_05_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_06_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_07_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_08_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_09_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_10_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_11_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_12_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_13_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_14_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_15_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_16_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_17_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_18_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_19_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_20_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_21_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_22_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_23_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_24_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_25_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_26_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_27_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_28_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_29_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_30_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_31_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_32_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_33_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_34_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_35_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_36_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_37_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_38_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_39_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_40_obj;
extern const machine_pin_obj_t pin_GPIO_EMC_41_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_00_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_01_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_02_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_03_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_04_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B0_05_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_00_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_01_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_02_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_03_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_04_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_05_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_06_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_07_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_08_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_09_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_10_obj;
extern const machine_pin_obj_t pin_GPIO_SD_B1_11_obj;
extern const machine_pin_obj_t pin_WAKEUP_obj;
extern const machine_pin_obj_t pin_PMIC_ON_REQ_obj;
extern const machine_pin_obj_t pin_PMIC_STBY_REQ_obj;
# 149 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/pin.h" 2

extern const mp_obj_type_t machine_pin_board_pins_obj_type;
extern const mp_obj_type_t machine_pin_cpu_pins_obj_type;

extern const mp_obj_dict_t machine_pin_cpu_pins_locals_dict;
extern const mp_obj_dict_t machine_pin_board_pins_locals_dict;



void pin_init(void);
uint32_t pin_get_mode(const machine_pin_obj_t *pin);
uint32_t pin_get_af(const machine_pin_obj_t *pin);
const machine_pin_obj_t *pin_find(mp_obj_t user_obj);
const machine_pin_obj_t *pin_find_named_pin(const mp_obj_dict_t *named_pins, mp_obj_t name);
const machine_pin_af_obj_t *pin_find_af(const machine_pin_obj_t *pin, uint8_t fn);
const machine_pin_af_obj_t *pin_find_af_by_index(const machine_pin_obj_t *pin, mp_uint_t af_idx);
const machine_pin_af_obj_t *pin_find_af_by_name(const machine_pin_obj_t *pin, const char *name);
void machine_pin_set_mode(const machine_pin_obj_t *pin, uint8_t mode);
void machine_pin_config(const machine_pin_obj_t *self, uint8_t mode,
    uint8_t pull, uint8_t drive, uint8_t speed, uint8_t alt);
uint32_t pin_generate_config(const uint32_t pull, const uint32_t mode, const uint32_t drive, uint32_t config_register);
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/irq.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/irq.h"
static inline uint32_t query_irq(void) {
    return __get_PRIMASK();
}

static inline uint32_t raise_irq_pri(uint32_t pri) {
    uint32_t basepri = __get_BASEPRI();





    pri <<= (8 - 4);
    __asm volatile ("msr basepri_max, %0" : : "r" (pri) : "memory");
    return basepri;
}


static inline void restore_irq_pri(uint32_t basepri) {
    __set_BASEPRI(basepri);
}
# 35 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/mimxrt/MIMXRT1062/drivers/fsl_clock.h" 1
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h" 2
# 75 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h"
extern int mp_interrupt_char;
extern ringbuf_t stdin_ringbuf;
# 100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/ports/mimxrt/mphalport.h"
__attribute__((always_inline)) static inline void enable_irq(uint32_t state) {
    __set_PRIMASK(state);
}

__attribute__((always_inline)) static inline uint32_t disable_irq(void) {
    uint32_t state = __get_PRIMASK();
    __disable_irq();
    return state;
}

void mp_hal_set_interrupt_char(int c);

static inline void mp_hal_wake_main_task_from_isr(void) {

}

static inline mp_uint_t mp_hal_ticks_ms(void) {
    return ticks_ms32();
}

static inline mp_uint_t mp_hal_ticks_us(void) {
    return ticks_us32();
}

static inline void mp_hal_delay_ms(mp_uint_t ms) {
    uint64_t us = (uint64_t)ms * 1000;
    ticks_delay_us64(us);
}

static inline void mp_hal_delay_us(mp_uint_t us) {
    ticks_delay_us64(us);
}



static inline void mp_hal_ticks_cpu_enable(void) {
    ((CoreDebug_Type *) (0xE000EDF0UL))->DEMCR |= (1UL << 24U);
    ((DWT_Type *) (0xE0001000UL) )->LAR = 0xc5acce55;
    ((DWT_Type *) (0xE0001000UL) )->CYCCNT = 0;
    ((DWT_Type *) (0xE0001000UL) )->CTRL |= (0x1UL );
}

static inline mp_uint_t mp_hal_ticks_cpu(void) {
    return ((DWT_Type *) (0xE0001000UL) )->CYCCNT;
}

static inline mp_uint_t mp_hal_get_cpu_freq(void) {
    return CLOCK_GetCpuClkFreq();
}

enum {
    MP_HAL_MAC_WLAN0 = 0,
    MP_HAL_MAC_WLAN1,
    MP_HAL_MAC_BDADDR,
    MP_HAL_MAC_ETH0,
    MP_HAL_MAC_ETH1,
};

void mp_hal_generate_laa_mac(int idx, uint8_t buf[6]);
void mp_hal_get_mac(int idx, uint8_t buf[6]);
void mp_hal_get_mac_ascii(int idx, size_t chr_off, size_t chr_len, char *dest);
void mp_hal_get_unique_id(uint8_t id[]);
# 36 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mphal.h" 2
# 47 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/mphal.h"
uintptr_t mp_hal_stdio_poll(uintptr_t poll_flags);



int mp_hal_stdin_rx_chr(void);



void mp_hal_stdout_tx_str(const char *str);



mp_uint_t mp_hal_stdout_tx_strn(const char *str, size_t len);



void mp_hal_stdout_tx_strn_cooked(const char *str, size_t len);



void mp_hal_delay_ms(mp_uint_t ms);



void mp_hal_delay_us(mp_uint_t us);



mp_uint_t mp_hal_ticks_ms(void);



mp_uint_t mp_hal_ticks_us(void);



mp_uint_t mp_hal_ticks_cpu(void);




uint64_t mp_hal_time_ns(void);
# 38 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2



# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/limits.h" 1 3 4
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2



# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_extension.h" 1
# 187 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/cmsis/include/cmsis_extension.h"
__attribute__((always_inline)) static inline uint32_t __UXTB(uint32_t op1)
{
  uint32_t result;

  __asm volatile ("uxtb %0, %1" : "=r" (result) : "r" (op1));
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __UXTB_RORn(uint32_t op1, uint32_t rotate)
{
  uint32_t result;

  __asm volatile ("uxtb %0, %1, ROR %2" : "=r" (result) : "r" (op1), "i" (rotate) );
  return result;
}

__attribute__((always_inline)) static inline uint32_t __UXTB16_RORn(uint32_t op1, uint32_t rotate)
{
  uint32_t result;

  __asm volatile ("uxtb16 %0, %1, ROR %2" : "=r" (result) : "r" (op1), "i" (rotate) );
  return result;
}

__attribute__((always_inline)) static inline uint32_t __UXTAB_RORn(uint32_t op1, uint32_t op2, uint32_t rotate)
{
  uint32_t result;

  __asm volatile ("uxtab %0, %1, %2, ROR %3" : "=r" (result) : "r" (op1), "r" (op2), "i" (rotate) );
  return result;
}

__attribute__((always_inline)) static inline uint32_t __SXTB(uint32_t op1)
{
  uint32_t result;

  __asm volatile ("sxtb %0, %1" : "=r" (result) : "r" (op1));
  return(result);
}

__attribute__((always_inline)) static inline uint32_t __SXTB_RORn(uint32_t op1, uint32_t rotate)
{
  uint32_t result;

  __asm volatile ("sxtb %0, %1, ROR %2" : "=r" (result) : "r" (op1), "i" (rotate) );
  return result;
}
# 38 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/fb_alloc.h" 1
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/fb_alloc.h"
char *fb_alloc_stack_pointer();
void fb_alloc_fail();
void fb_alloc_init0();
uint32_t fb_avail();
void fb_alloc_mark();
void fb_alloc_free_till_mark();
void fb_alloc_mark_permanent();
void fb_alloc_free_till_mark_past_mark_permanent();
void *fb_alloc(uint32_t size, int hints);
void *fb_alloc0(uint32_t size, int hints);
void *fb_alloc_all(uint32_t *size, int hints);
void *fb_alloc0_all(uint32_t *size, int hints);
void fb_free();
void fb_free_all();
# 39 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/file_utils.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/file_utils.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h" 1
# 33 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ffconf.h" 1
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h" 2
# 49 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
typedef unsigned int UINT;
typedef unsigned char BYTE;
typedef uint16_t WORD;
typedef uint16_t WCHAR;
typedef uint32_t DWORD;
typedef uint64_t QWORD;
# 95 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
typedef char TCHAR;
# 110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
typedef QWORD FSIZE_t;
# 119 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
typedef struct {
    void *drv;

    BYTE part;

    BYTE fs_type;
    BYTE n_fats;
    BYTE wflag;
    BYTE fsi_flag;
    WORD id;
    WORD n_rootdir;
    WORD csize;

    WORD ssize;


    WCHAR* lfnbuf;


    BYTE* dirbuf;





    DWORD last_clst;
    DWORD free_clst;


    DWORD cdir;

    DWORD cdc_scl;
    DWORD cdc_size;
    DWORD cdc_ofs;


    DWORD n_fatent;
    DWORD fsize;
    DWORD volbase;
    DWORD fatbase;
    DWORD dirbase;
    DWORD database;

    DWORD bitbase;

    DWORD winsect;
    BYTE win[((4096))];
} FATFS;





typedef struct {
    FATFS* fs;
    WORD id;
    BYTE attr;
    BYTE stat;
    DWORD sclust;
    FSIZE_t objsize;

    DWORD n_cont;
    DWORD n_frag;
    DWORD c_scl;
    DWORD c_size;
    DWORD c_ofs;




} FFOBJID;





typedef struct {
    FFOBJID obj;
    BYTE flag;
    BYTE err;
    FSIZE_t fptr;
    DWORD clust;
    DWORD sect;

    DWORD dir_sect;
    BYTE* dir_ptr;







} FIL;





typedef struct {
    FFOBJID obj;
    DWORD dptr;
    DWORD clust;
    DWORD sect;
    BYTE* dir;
    BYTE fn[12];

    DWORD blk_ofs;




} FF_DIR;





typedef struct {
    FSIZE_t fsize;
    WORD fdate;
    WORD ftime;
    BYTE fattrib;

    TCHAR altname[12 + 1];
    TCHAR fname[255 + 1];



} FILINFO;





typedef enum {
    FR_OK = 0,
    FR_DISK_ERR,
    FR_INT_ERR,
    FR_NOT_READY,
    FR_NO_FILE,
    FR_NO_PATH,
    FR_INVALID_NAME,
    FR_DENIED,
    FR_EXIST,
    FR_INVALID_OBJECT,
    FR_WRITE_PROTECTED,
    FR_INVALID_DRIVE,
    FR_NOT_ENABLED,
    FR_NO_FILESYSTEM,
    FR_MKFS_ABORTED,
    FR_TIMEOUT,
    FR_LOCKED,
    FR_NOT_ENOUGH_CORE,
    FR_TOO_MANY_OPEN_FILES,
    FR_INVALID_PARAMETER
} FRESULT;






FRESULT f_open (FATFS *fs, FIL* fp, const TCHAR* path, BYTE mode);
FRESULT f_close (FIL* fp);
FRESULT f_read (FIL* fp, void* buff, UINT btr, UINT* br);
FRESULT f_write (FIL* fp, const void* buff, UINT btw, UINT* bw);
FRESULT f_lseek (FIL* fp, FSIZE_t ofs);
FRESULT f_truncate (FIL* fp);
FRESULT f_sync (FIL* fp);
FRESULT f_opendir (FATFS *fs, FF_DIR* dp, const TCHAR* path);
FRESULT f_closedir (FF_DIR* dp);
FRESULT f_readdir (FF_DIR* dp, FILINFO* fno);
FRESULT f_findfirst (FF_DIR* dp, FILINFO* fno, const TCHAR* path, const TCHAR* pattern);
FRESULT f_findnext (FF_DIR* dp, FILINFO* fno);
FRESULT f_mkdir (FATFS *fs, const TCHAR* path);
FRESULT f_unlink (FATFS *fs, const TCHAR* path);
FRESULT f_rename (FATFS *fs, const TCHAR* path_old, const TCHAR* path_new);
FRESULT f_stat (FATFS *fs, const TCHAR* path, FILINFO* fno);
FRESULT f_chmod (FATFS *fs, const TCHAR* path, BYTE attr, BYTE mask);
FRESULT f_utime (FATFS *fs, const TCHAR* path, const FILINFO* fno);
FRESULT f_chdir (FATFS *fs, const TCHAR* path);
FRESULT f_getcwd (FATFS *fs, TCHAR* buff, UINT len);
FRESULT f_getfree (FATFS *fs, DWORD* nclst);
FRESULT f_getlabel (FATFS *fs, TCHAR* label, DWORD* vsn);
FRESULT f_setlabel (FATFS *fs, const TCHAR* label);
FRESULT f_forward (FIL* fp, UINT(*func)(const BYTE*,UINT), UINT btf, UINT* bf);
FRESULT f_expand (FIL* fp, FSIZE_t szf, BYTE opt);
FRESULT f_mount (FATFS* fs);
FRESULT f_umount (FATFS* fs);
FRESULT f_mkfs (FATFS *fs, BYTE opt, DWORD au, void* work, UINT len);
FRESULT f_fdisk (void *pdrv, const DWORD* szt, void* work);
FRESULT f_setcp (WORD cp);
# 334 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/lib/oofatfs/ff.h"
DWORD get_fattime (void);




WCHAR ff_oem2uni (WCHAR oem, WORD cp);
WCHAR ff_uni2oem (DWORD uni, WORD cp);
DWORD ff_wtoupper (DWORD uni);
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/file_utils.h" 2
void file_raise_format(FIL *fp);
void file_raise_corrupted(FIL *fp);
void file_raise_error(FIL *fp, FRESULT res);




FRESULT file_ll_open(FIL *fp, const TCHAR *path, BYTE mode);
FRESULT file_ll_close(FIL *fp);
FRESULT file_ll_read(FIL *fp, void *buff, UINT btr, UINT *br);
FRESULT file_ll_write(FIL *fp, const void *buff, UINT btw, UINT *bw);
FRESULT file_ll_opendir(FF_DIR *dp, const TCHAR *path);
FRESULT file_ll_stat(const TCHAR *path, FILINFO *fno);
FRESULT file_ll_mkdir(const TCHAR *path);
FRESULT file_ll_unlink(const TCHAR *path);
FRESULT file_ll_rename(const TCHAR *path_old, const TCHAR *path_new);
FRESULT file_ll_touch(const TCHAR *path);


void file_buffer_init0();
void file_buffer_on(FIL *fp);
void file_buffer_off(FIL *fp);

void file_open(FIL *fp, const char *path, 
# 54 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/file_utils.h" 3 4
                                         _Bool 
# 54 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/file_utils.h"
                                              buffered, uint32_t flags);
void file_close(FIL *fp);
void file_seek(FIL *fp, UINT offset);
void file_truncate(FIL *fp);
void file_sync(FIL *fp);
uint32_t file_tell(FIL *fp);
uint32_t file_size(FIL *fp);
void file_read(FIL *fp, void *data, size_t size);
void file_write(FIL *fp, const void *data, size_t size);
void file_write_byte(FIL *fp, uint8_t value);
void file_write_short(FIL *fp, uint16_t value);
void file_write_long(FIL *fp, uint32_t value);
void file_read_check(FIL *fp, const void *data, size_t size);
const char *file_strerror(FRESULT res);
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/umm_malloc.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/umm_malloc.h"
void umm_alloc_fail();
void umm_init_x(size_t size);
void *umm_malloc(size_t size);
void *umm_calloc(size_t num, size_t size);
void *umm_realloc(void *ptr, size_t size);
void umm_free(void *ptr);
# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/xalloc.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/xalloc.h"
void *xalloc(uint32_t size);
void *xalloc_try_alloc(uint32_t size);
void *xalloc0(uint32_t size);
void xfree(void *mem);
void *xrealloc(void *mem, uint32_t size);
# 42 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/array.h" 1
# 28 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/array.h"
typedef void (*array_dtor_t) (void *);
typedef int (*array_comp_t) (const void *, const void *);



typedef struct {
    int index;
    int length;
    void **data;
    array_dtor_t dtor;
} array_t;
void array_alloc(array_t **a, array_dtor_t dtor);
void array_alloc_init(array_t **a, array_dtor_t dtor, int size);
void array_clear(array_t *array);
void array_free(array_t *array);
int array_length(array_t *array);
void *array_at(array_t *array, int idx);
void array_push_back(array_t *array, void *element);
void *array_pop_back(array_t *array);
void *array_take(array_t *array, int idx);
void array_erase(array_t *array, int idx);
void array_resize(array_t *array, int num);
void array_sort(array_t *array, array_comp_t comp);
void array_isort(array_t *array, array_comp_t comp);
# 43 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/fmath.h" 1
# 34 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/fmath.h"
float fast_atanf(float x);
float fast_atan2f(float y, float x);
float fast_expf(float x);
float fast_cbrtf(float d);
float fast_log(float x);
float fast_log2(float x);
float fast_powf(float a, float b);
void fast_get_min_max(float *data, size_t data_len, float *p_min, float *p_max);

static inline float fast_sqrtf(float x) {

    __asm__ volatile (
        "vsqrt.f32  %[r], %[x]\n"
        : [r] "=t" (x)
        : [x] "t" (x));
    return x;



}

static inline int fast_floorf(float x) {

    int i;
    __asm__ volatile (

        "vcvtm.S32.f32  %[r], %[x]\n"



        : [r] "=t" (i)
        : [x] "t" (x));
    return i;



}

static inline int fast_ceilf(float x) {

    int i;

    __asm__ volatile (
        "vcvtp.S32.f32  %[r], %[x]\n"
# 87 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/fmath.h"
        : [r] "=t" (i)
        : [x] "t" (x));
    return i;



}

static inline int fast_roundf(float x) {

    int i;
    __asm__ volatile (
        "vcvtr.S32.F32  %[r], %[x]\n"
        : [r] "=t" (i)
        : [x] "t" (x));
    return i;



}

static inline float fast_fabsf(float x) {

    __asm__ volatile (
        "vabs.f32  %[r], %[x]\n"
        : [r] "=t" (x)
        : [x] "t" (x));
    return x;



}

extern const float cos_table[360];
extern const float sin_table[360];
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
# 1 "/home/mcoder/cache/gcc/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h" 1 3 4
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 2


typedef struct bitmap {
    size_t size;
    char *data;
} bitmap_t;

void bitmap_alloc(bitmap_t *ptr, size_t size);
void bitmap_free(bitmap_t *ptr);
void bitmap_clear(bitmap_t *ptr);
void bitmap_bit_set(bitmap_t *ptr, size_t index);

# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 3 4
_Bool 
# 41 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
    bitmap_bit_get(bitmap_t *ptr, size_t index);




typedef struct lifo {
    size_t len;
    size_t size;
    size_t data_len;
    char *data;
} lifo_t;

void lifo_alloc(lifo_t *ptr, size_t size, size_t data_len);
void lifo_alloc_all(lifo_t *ptr, size_t *size, size_t data_len);
void lifo_free(lifo_t *ptr);
void lifo_clear(lifo_t *ptr);
size_t lifo_size(lifo_t *ptr);

# 58 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 3 4
_Bool 
# 58 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
    lifo_is_not_empty(lifo_t *ptr);

# 59 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 3 4
_Bool 
# 59 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
    lifo_is_not_full(lifo_t *ptr);
void lifo_enqueue(lifo_t *ptr, void *data);
void lifo_dequeue(lifo_t *ptr, void *data);
void lifo_poke(lifo_t *ptr, void *data);
void lifo_peek(lifo_t *ptr, void *data);


typedef struct fifo {
    size_t head;
    size_t tail;
    size_t len;
    size_t size;
    size_t data_len;
    char *data;
} fifo_t;

void fifo_alloc(fifo_t *ptr, size_t size, size_t data_len);
void fifo_alloc_all(fifo_t *ptr, size_t *size, size_t data_len);
void fifo_free(fifo_t *ptr);
void fifo_clear(fifo_t *ptr);
size_t fifo_size(fifo_t *ptr);

# 80 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 3 4
_Bool 
# 80 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
    fifo_is_not_empty(fifo_t *ptr);

# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h" 3 4
_Bool 
# 81 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/collections.h"
    fifo_is_not_full(fifo_t *ptr);
void fifo_enqueue(fifo_t *ptr, void *data);
void fifo_dequeue(fifo_t *ptr, void *data);
void fifo_poke(fifo_t *ptr, void *data);
void fifo_peek(fifo_t *ptr, void *data);


typedef struct list_lnk {
    struct list_lnk *next;
    struct list_lnk *prev;
    char data[];
} list_lnk_t;

typedef struct list {
    list_lnk_t *head;
    list_lnk_t *tail;
    size_t size;
    size_t data_len;
} list_t;

void list_init(list_t *ptr, size_t data_len);
void list_copy(list_t *dst, list_t *src);
void list_free(list_t *ptr);
void list_clear(list_t *ptr);
size_t list_size(list_t *ptr);
void list_insert(list_t *ptr, list_lnk_t *lnk, void *data);
void list_push_front(list_t *ptr, void *data);
void list_push_back(list_t *ptr, void *data);
void list_remove(list_t *ptr, list_lnk_t *lnk, void *data);
void list_pop_front(list_t *ptr, void *data);
void list_pop_back(list_t *ptr, void *data);
void list_move(list_t *dst, list_t *src, list_lnk_t *before, list_lnk_t *lnk);
void list_move_front(list_t *dst, list_t *src, list_lnk_t *lnk);
void list_move_back(list_t *dst, list_t *src, list_lnk_t *lnk);
# 45 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/boards/LUCIDCODE_INSPEC/imlib_config.h" 1
# 46 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/boards/LUCIDCODE_INSPEC/omv_boardconfig.h" 1
# 47 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/omv_common.h" 1
# 48 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 2
# 122 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
int imlib_ksize_to_n(int ksize);





typedef struct point {
    int16_t x;
    int16_t y;
} point_t;

void point_init(point_t *ptr, int x, int y);
void point_copy(point_t *dst, point_t *src);

# 135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    point_equal_fast(point_t *ptr0, point_t *ptr1);
int point_quadrance(point_t *ptr0, point_t *ptr1);
void point_rotate(int x, int y, float r, int center_x, int center_y, int16_t *new_x, int16_t *new_y);
void point_min_area_rectangle(point_t *corners, point_t *new_corners, int corners_len);





typedef struct line {
    int16_t x1;
    int16_t y1;
    int16_t x2;
    int16_t y2;
} line_t;


# 151 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 151 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    lb_clip_line(line_t *l, int x, int y, int w, int h);





typedef struct rectangle {
    int16_t x;
    int16_t y;
    int16_t w;
    int16_t h;
} rectangle_t;

typedef struct bounding_box_lnk_data {
    rectangle_t rect;
    float score;
    int label_index;
} bounding_box_lnk_data_t;

void rectangle_init(rectangle_t *ptr, int x, int y, int w, int h);
void rectangle_copy(rectangle_t *dst, rectangle_t *src);

# 172 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 172 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    rectangle_equal_fast(rectangle_t *ptr0, rectangle_t *ptr1);

# 173 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 173 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    rectangle_overlap(rectangle_t *ptr0, rectangle_t *ptr1);
void rectangle_intersected(rectangle_t *dst, rectangle_t *src);
void rectangle_united(rectangle_t *dst, rectangle_t *src);
float rectangle_iou(rectangle_t *r1, rectangle_t *r2);
void rectangle_nms_add_bounding_box(list_t *bounding_boxes, bounding_box_lnk_data_t *box);
int rectangle_nms_get_bounding_boxes(list_t *bounding_boxes, float threshold, float sigma);
void rectangle_map_bounding_boxes(list_t *bounding_boxes, int window_w, int window_h, rectangle_t *roi);





typedef struct color_thresholds_list_lnk_data {
    uint8_t LMin, LMax;
    int8_t AMin, AMax;
    int8_t BMin, BMax;
}
color_thresholds_list_lnk_data_t;
# 352 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
extern const int8_t lab_table[196608 / 2];
# 375 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef enum {
    COLOR_PALETTE_RAINBOW,
    COLOR_PALETTE_IRONBOW,
    COLOR_PALETTE_DEPTH,
    COLOR_PALETTE_EVT_DARK,
    COLOR_PALETTE_EVT_LIGHT
} color_palette_t;


extern const uint16_t rainbow_table[256];
extern const uint16_t ironbow_table[256];
extern const uint16_t depth_table[256];
extern const uint16_t evt_dark_table[256];
extern const uint16_t evt_light_table[256];






typedef enum {
    PIXFORMAT_ID_BINARY = 1,
    PIXFORMAT_ID_GRAY = 2,
    PIXFORMAT_ID_RGB565 = 3,
    PIXFORMAT_ID_BAYER = 4,
    PIXFORMAT_ID_YUV422 = 5,
    PIXFORMAT_ID_JPEG = 6,
    PIXFORMAT_ID_PNG = 7,
    PIXFORMAT_ID_ARGB8 = 8,

} pixformat_id_t;
# 419 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef enum {
    SUBFORMAT_ID_GRAY8 = 0,
    SUBFORMAT_ID_GRAY16 = 1,
    SUBFORMAT_ID_BGGR = 0,
    SUBFORMAT_ID_GBRG = 1,
    SUBFORMAT_ID_GRBG = 2,
    SUBFORMAT_ID_RGGB = 3,
    SUBFORMAT_ID_YUV422 = 0,
    SUBFORMAT_ID_YVU422 = 1,

} subformat_id_t;


typedef enum {
    PIXFORMAT_BPP_BINARY = 0,
    PIXFORMAT_BPP_GRAY8 = 1,
    PIXFORMAT_BPP_GRAY16 = 2,
    PIXFORMAT_BPP_RGB565 = 2,
    PIXFORMAT_BPP_BAYER = 1,
    PIXFORMAT_BPP_YUV422 = 2,
    PIXFORMAT_BPP_ARGB8 = 4,

} pixformat_bpp_t;
# 460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef enum {
  PIXFORMAT_INVALID = (0x00000000U),
  PIXFORMAT_BINARY = ((1 << 27) | (PIXFORMAT_ID_BINARY << 16) | (0 << 8) | PIXFORMAT_BPP_BINARY ),
  PIXFORMAT_GRAYSCALE = ((1 << 27) | (PIXFORMAT_ID_GRAY << 16) | (SUBFORMAT_ID_GRAY8 << 8) | PIXFORMAT_BPP_GRAY8 ),
  PIXFORMAT_RGB565 = (((1 << 26) | (1 << 27)) | (PIXFORMAT_ID_RGB565 << 16) | (0 << 8) | PIXFORMAT_BPP_RGB565 ),
  PIXFORMAT_ARGB8 = (((1 << 26) | (1 << 27)) | (PIXFORMAT_ID_ARGB8 << 16) | (0 << 8) | PIXFORMAT_BPP_ARGB8 ),
  PIXFORMAT_BAYER = (((1 << 26) | (1 << 24)) | (PIXFORMAT_ID_BAYER << 16) | (SUBFORMAT_ID_BGGR << 8) | PIXFORMAT_BPP_BAYER ),
  PIXFORMAT_BAYER_BGGR = (((1 << 26) | (1 << 24)) | (PIXFORMAT_ID_BAYER << 16) | (SUBFORMAT_ID_BGGR << 8) | PIXFORMAT_BPP_BAYER ),
  PIXFORMAT_BAYER_GBRG = (((1 << 26) | (1 << 24)) | (PIXFORMAT_ID_BAYER << 16) | (SUBFORMAT_ID_GBRG << 8) | PIXFORMAT_BPP_BAYER ),
  PIXFORMAT_BAYER_GRBG = (((1 << 26) | (1 << 24)) | (PIXFORMAT_ID_BAYER << 16) | (SUBFORMAT_ID_GRBG << 8) | PIXFORMAT_BPP_BAYER ),
  PIXFORMAT_BAYER_RGGB = (((1 << 26) | (1 << 24)) | (PIXFORMAT_ID_BAYER << 16) | (SUBFORMAT_ID_RGGB << 8) | PIXFORMAT_BPP_BAYER ),
  PIXFORMAT_YUV = (((1 << 26) | (1 << 28)) | (PIXFORMAT_ID_YUV422 << 16) | (SUBFORMAT_ID_YUV422 << 8) | PIXFORMAT_BPP_YUV422 ),
  PIXFORMAT_YUV422 = (((1 << 26) | (1 << 28)) | (PIXFORMAT_ID_YUV422 << 16) | (SUBFORMAT_ID_YUV422 << 8) | PIXFORMAT_BPP_YUV422 ),
  PIXFORMAT_YVU422 = (((1 << 26) | (1 << 28)) | (PIXFORMAT_ID_YUV422 << 16) | (SUBFORMAT_ID_YVU422 << 8) | PIXFORMAT_BPP_YUV422 ),
  PIXFORMAT_JPEG = (((1 << 26) | (1 << 25)) | (PIXFORMAT_ID_JPEG << 16) | (0 << 8) | 0 ),
  PIXFORMAT_PNG = (((1 << 26) | (1 << 25)) | (PIXFORMAT_ID_PNG << 16) | (0 << 8) | 0 ),
  PIXFORMAT_LAST = (0xFFFFFFFFU),
} pixformat_t;
# 558 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef struct image {
    int32_t w;
    int32_t h;
    struct { union { struct { uint32_t bpp :8; uint32_t subfmt_id :8; uint32_t pixfmt_id :8; uint32_t is_bayer :1; uint32_t is_compressed :1; uint32_t is_color :1; uint32_t is_mutable :1; uint32_t is_yuv :1; uint32_t :3; }; uint32_t pixfmt; }; uint32_t size; };

    uint8_t *_raw;
    union {
        uint8_t *pixels;
        uint8_t *data;
    };
} image_t;

void image_xalloc(image_t *img, size_t size);
void image_xalloc0(image_t *img, size_t size);
void image_init(image_t *ptr, int w, int h, pixformat_t pixfmt, uint32_t size, void *pixels);
void image_copy(image_t *dst, image_t *src);
size_t image_line_size(image_t *ptr);
size_t image_size(image_t *ptr);

# 576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    image_get_mask_pixel(image_t *ptr, int x, int y);
# 803 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef enum jpeg_subsampling {
    JPEG_SUBSAMPLING_AUTO = 0,
    JPEG_SUBSAMPLING_444 = 0x11,
    JPEG_SUBSAMPLING_422 = 0x21,
    JPEG_SUBSAMPLING_420 = 0x22,
} jpeg_subsampling_t;




extern const int8_t kernel_gauss_3[9];
extern const int8_t kernel_gauss_5[25];
extern const int kernel_laplacian_3[9];
extern const int kernel_high_pass_3[9];
# 871 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
typedef struct simple_color {
    uint8_t G;
    union {
        int8_t L;
        uint8_t red;
    };
    union {
        int8_t A;
        uint8_t green;
    };
    union {
        int8_t B;
        uint8_t blue;
    };
} simple_color_t;

typedef struct integral_image {
    int w;
    int h;
    uint32_t *data;
} i_image_t;

typedef struct {
    int w;
    int h;
    int y_offs;
    int x_ratio;
    int y_ratio;
    uint32_t **data;
    uint32_t **swap;
} mw_image_t;

typedef struct _vector {
    float x;
    float y;
    float m;
    uint16_t cx, cy;
} vec_t;

typedef struct cluster {
    int x, y, w, h;
    array_t *points;
} cluster_t;


typedef float (*cluster_dist_t) (int cx, int cy, void *obj);


typedef struct kp {
    uint16_t x;
    uint16_t y;
    uint16_t score;
    uint16_t octave;
    uint16_t angle;
    uint16_t matched;
    uint8_t desc[32];
} kp_t;

typedef struct size {
    int w;
    int h;
} wsize_t;


typedef struct cascade {
    int std;
    int step;
    float threshold;
    float scale_factor;
    int n_stages;
    int n_features;
    int n_rectangles;
    struct size window;
    struct image *img;
    mw_image_t *sum;
    mw_image_t *ssq;
    uint8_t *stages_array;
    int16_t *stages_thresh_array;
    int16_t *tree_thresh_array;
    int16_t *alpha1_array;
    int16_t *alpha2_array;
    int8_t *num_rectangles_array;
    int8_t *weights_array;
    int8_t *rectangles_array;
} cascade_t;

typedef struct bmp_read_settings {
    int32_t bmp_w;
    int32_t bmp_h;
    uint16_t bmp_bpp;
    uint32_t bmp_fmt;
    uint32_t bmp_row_bytes;
} bmp_read_settings_t;

typedef struct ppm_read_settings {
    uint8_t read_int_c;
    
# 967 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
   _Bool 
# 967 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
        read_int_c_valid;
    uint8_t ppm_fmt;
} ppm_read_settings_t;

typedef struct jpg_read_settings {
    int32_t jpg_w;
    int32_t jpg_h;
    int32_t jpg_size;
} jpg_read_settings_t;

typedef struct png_read_settings {
    int32_t png_w;
    int32_t png_h;
    int32_t png_size;
} png_read_settings_t;

typedef enum save_image_format {
    FORMAT_DONT_CARE,
    FORMAT_BMP,
    FORMAT_PNM,
    FORMAT_JPG,
    FORMAT_PNG,
    FORMAT_RAW,
} save_image_format_t;

typedef struct img_read_settings {
    union {
        bmp_read_settings_t bmp_rs;
        ppm_read_settings_t ppm_rs;
        jpg_read_settings_t jpg_rs;
        png_read_settings_t png_rs;
    };
    save_image_format_t format;
} img_read_settings_t;

typedef void (*binary_morph_op_t) (image_t *, int, int, image_t *);
typedef void (*line_op_t) (image_t *, int, void *, void *, 
# 1003 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                          _Bool
# 1003 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                              );
typedef void (*flood_fill_call_back_t) (image_t *, int, int, int, void *);

typedef enum descriptor_type {
    DESC_LBP,
    DESC_ORB,
} descriptor_t;

typedef enum edge_detector_type {
    EDGE_CANNY,
    EDGE_SIMPLE,
} edge_detector_t;

typedef enum template_match {
    SEARCH_EX,
    SEARCH_DS,
} template_match_t;

typedef enum corner_detector_type {
    CORNER_FAST,
    CORNER_AGAST
} corner_detector_t;

typedef struct histogram {
    int LBinCount;
    float *LBins;
    int ABinCount;
    float *ABins;
    int BBinCount;
    float *BBins;
} histogram_t;

typedef struct percentile {
    uint8_t LValue;
    int8_t AValue;
    int8_t BValue;
} percentile_t;

typedef struct threshold {
    uint8_t LValue;
    int8_t AValue;
    int8_t BValue;
} threshold_t;

typedef struct statistics {
    uint8_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ;
    int8_t AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ;
    int8_t BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;
} statistics_t;




typedef struct find_blobs_list_lnk_data {
    point_t corners[20];
    rectangle_t rect;
    uint32_t pixels, perimeter, code, count;
    float centroid_x, centroid_y, rotation, roundness;
    uint16_t x_hist_bins_count, y_hist_bins_count, *x_hist_bins, *y_hist_bins;
    float centroid_x_acc, centroid_y_acc, rotation_acc_x, rotation_acc_y, roundness_acc;
} find_blobs_list_lnk_data_t;

typedef struct find_lines_list_lnk_data {
    line_t line;
    uint32_t magnitude;
    int16_t theta, rho;
} find_lines_list_lnk_data_t;

typedef struct find_circles_list_lnk_data {
    point_t p;
    uint16_t r, magnitude;
} find_circles_list_lnk_data_t;

typedef struct find_rects_list_lnk_data {
    point_t corners[4];
    rectangle_t rect;
    uint32_t magnitude;
} find_rects_list_lnk_data_t;

typedef struct find_qrcodes_list_lnk_data {
    point_t corners[4];
    rectangle_t rect;
    size_t payload_len;
    char *payload;
    uint8_t version, ecc_level, mask, data_type;
    uint32_t eci;
} find_qrcodes_list_lnk_data_t;

typedef enum apriltag_families {
    TAG16H5 = 1,
    TAG25H7 = 2,
    TAG25H9 = 4,
    TAG36H10 = 8,
    TAG36H11 = 16,
    ARTOOLKIT = 32
} apriltag_families_t;

typedef struct find_apriltags_list_lnk_data {
    point_t corners[4];
    rectangle_t rect;
    uint16_t id;
    uint8_t family, hamming;
    float centroid_x, centroid_y;
    float goodness, decision_margin;
    float x_translation, y_translation, z_translation;
    float x_rotation, y_rotation, z_rotation;
} find_apriltags_list_lnk_data_t;

typedef struct find_datamatrices_list_lnk_data {
    point_t corners[4];
    rectangle_t rect;
    size_t payload_len;
    char *payload;
    uint16_t rotation;
    uint8_t rows, columns;
    uint16_t capacity, padding;
} find_datamatrices_list_lnk_data_t;

typedef enum barcodes {
    BARCODE_EAN2,
    BARCODE_EAN5,
    BARCODE_EAN8,
    BARCODE_UPCE,
    BARCODE_ISBN10,
    BARCODE_UPCA,
    BARCODE_EAN13,
    BARCODE_ISBN13,
    BARCODE_I25,
    BARCODE_DATABAR,
    BARCODE_DATABAR_EXP,
    BARCODE_CODABAR,
    BARCODE_CODE39,
    BARCODE_PDF417,
    BARCODE_CODE93,
    BARCODE_CODE128
} barcodes_t;

typedef struct find_barcodes_list_lnk_data {
    point_t corners[4];
    rectangle_t rect;
    size_t payload_len;
    char *payload;
    uint16_t type, rotation;
    int quality;
} find_barcodes_list_lnk_data_t;

typedef enum image_hint {
    IMAGE_HINT_AREA = (1 << 0),
    IMAGE_HINT_BILINEAR = (1 << 1),
    IMAGE_HINT_BICUBIC = (1 << 2),
    IMAGE_HINT_HMIRROR = (1 << 4),
    IMAGE_HINT_VFLIP = (1 << 5),
    IMAGE_HINT_TRANSPOSE = (1 << 6),
    IMAGE_HINT_CENTER = (1 << 7),
    IMAGE_HINT_EXTRACT_RGB_CHANNEL_FIRST = (1 << 8),
    IMAGE_HINT_APPLY_COLOR_PALETTE_FIRST = (1 << 9),
    IMAGE_HINT_SCALE_ASPECT_KEEP = (1 << 10),
    IMAGE_HINT_SCALE_ASPECT_EXPAND = (1 << 11),
    IMAGE_HINT_SCALE_ASPECT_IGNORE = (1 << 12),
    IMAGE_HINT_BLACK_BACKGROUND = (1 << 31)
} image_hint_t;

typedef struct imlib_draw_row_data {
    image_t *dst_img;
    pixformat_t src_img_pixfmt;
    int rgb_channel;
    int alpha;
    const uint16_t *color_palette;
    const uint8_t *alpha_palette;
    
# 1172 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
   _Bool 
# 1172 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
        black_background;
    void *callback;
    void *callback_arg;
    void *dst_row_override;
    void *row_buffer;
    long smuad_alpha;
    uint32_t *smuad_alpha_palette;
} imlib_draw_row_data_t;

typedef void (*imlib_draw_row_callback_t) (int x_start, int x_end, int y_row, imlib_draw_row_data_t *data);


void imlib_init_all();
void imlib_deinit_all();


void imlib_fill_image_from_float(image_t *img, int w, int h, float *data, float min, float max,
                                 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                _Bool 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                     mirror, 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                             _Bool 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                  flip, 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                        _Bool 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                             dst_transpose, 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                            _Bool 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                 src_transpose);


pixformat_t imlib_bayer_shift(pixformat_t pixfmt, int x, int y, 
# 1192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                               _Bool 
# 1192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                    transpose);
void imlib_debayer_ycbcr(image_t *src, rectangle_t *roi, int8_t *Y0, int8_t *CB, int8_t *CR);
void imlib_debayer_line(int x_start, int x_end, int y_row, void *dst_row_ptr, pixformat_t pixfmt, image_t *src);
void imlib_debayer_image(image_t *dst, image_t *src);
void imlib_debayer_image_awb(image_t *dst, image_t *src, 
# 1196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                        _Bool 
# 1196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                             fast, uint32_t r_out, uint32_t g_out, uint32_t b_out);


pixformat_t imlib_yuv_shift(pixformat_t pixfmt, int x);
void imlib_deyuv_line(int x_start, int x_end, int y_row, void *dst_row_ptr, pixformat_t pixfmt, image_t *src);
void imlib_deyuv_image(image_t *dst, image_t *src);


int8_t imlib_rgb565_to_l(uint16_t pixel);
int8_t imlib_rgb565_to_a(uint16_t pixel);
int8_t imlib_rgb565_to_b(uint16_t pixel);
uint16_t imlib_lab_to_rgb(uint8_t l, int8_t a, int8_t b);
uint16_t imlib_yuv_to_rgb(uint8_t y, int8_t u, int8_t v);


void ppm_read_geometry(FIL *fp, image_t *img, const char *path, ppm_read_settings_t *rs);
void ppm_read_pixels(FIL *fp, image_t *img, int n_lines, ppm_read_settings_t *rs);
void ppm_read(image_t *img, const char *path);
void ppm_write_subimg(image_t *img, const char *path, rectangle_t *r);

# 1215 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1215 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    bmp_read_geometry(FIL *fp, image_t *img, const char *path, bmp_read_settings_t *rs);
void bmp_read_pixels(FIL *fp, image_t *img, int n_lines, bmp_read_settings_t *rs);
void bmp_read(image_t *img, const char *path);
void bmp_write_subimg(image_t *img, const char *path, rectangle_t *r);




void jpeg_get_mcu(image_t *src, int x_offset, int y_offset, int dx, int dy,
                  int8_t *Y0, int8_t *CB, int8_t *CR);
void jpeg_decompress(image_t *dst, image_t *src);

# 1226 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1226 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    jpeg_compress(image_t *src, image_t *dst, int quality, 
# 1226 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                           _Bool 
# 1226 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                realloc, jpeg_subsampling_t subsampling);

# 1227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    jpeg_is_valid(image_t *img);
int jpeg_clean_trailing_bytes(int bpp, uint8_t *data);
void jpeg_read_geometry(FIL *fp, image_t *img, const char *path, jpg_read_settings_t *rs);
void jpeg_read_pixels(FIL *fp, image_t *img);
void jpeg_read(image_t *img, const char *path);
void jpeg_write(image_t *img, const char *path, int quality);
void png_decompress(image_t *dst, image_t *src);

# 1234 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1234 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    png_compress(image_t *src, image_t *dst);
void png_read_geometry(FIL *fp, image_t *img, const char *path, png_read_settings_t *rs);
void png_read_pixels(FIL *fp, image_t *img);
void png_read(image_t *img, const char *path);
void png_write(image_t *img, const char *path);

# 1239 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1239 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    imlib_read_geometry(FIL *fp, image_t *img, const char *path, img_read_settings_t *rs);
void imlib_image_operation(image_t *img, const char *path, image_t *other, int scalar, line_op_t op, void *data);
void imlib_load_image(image_t *img, const char *path);
void imlib_save_image(image_t *img, const char *path, rectangle_t *roi, int quality);


void gif_open(FIL *fp, int width, int height, 
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                             _Bool 
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                  color, 
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                         _Bool 
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                              loop);
void gif_add_frame(FIL *fp, image_t *img, uint16_t delay);
void gif_close(FIL *fp);


void mjpeg_open(FIL *fp, int width, int height);
void mjpeg_write(FIL *fp, int width, int height, uint32_t *frames, uint32_t *bytes,
                 image_t *img, int quality, rectangle_t *roi, int rgb_channel, int alpha,
                 const uint16_t *color_palette, const uint8_t *alpha_palette, image_hint_t hint);
void mjpeg_sync(FIL *fp, uint32_t frames, uint32_t bytes, uint32_t us_avg);
void mjpeg_close(FIL *fp, uint32_t frames, uint32_t bytes, uint32_t us_avg);


point_t *point_alloc(int16_t x, int16_t y);

# 1259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1259 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    point_equal(point_t *p1, point_t *p2);
float point_distance(point_t *p1, point_t *p2);


rectangle_t *rectangle_alloc(int16_t x, int16_t y, int16_t w, int16_t h);

# 1264 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1264 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    rectangle_equal(rectangle_t *r1, rectangle_t *r2);

# 1265 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1265 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    rectangle_intersects(rectangle_t *r1, rectangle_t *r2);

# 1266 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1266 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    rectangle_subimg(image_t *img, rectangle_t *r, rectangle_t *r_out);
array_t *rectangle_merge(array_t *rectangles);
void rectangle_expand(rectangle_t *r, int x, int y);


void imlib_sepconv3(image_t *img, const int8_t *krn, const float m, const int b);


int imlib_image_mean(image_t *src, int *r_mean, int *g_mean, int *b_mean);
int imlib_image_std(image_t *src);


void imlib_midpoint_pool(image_t *img_i, image_t *img_o, int x_div, int y_div, const int bias);
void imlib_mean_pool(image_t *img_i, image_t *img_o, int x_div, int y_div);
float imlib_template_match_ds(image_t *image, image_t *t, rectangle_t *r);
float imlib_template_match_ex(image_t *image, image_t *t, rectangle_t *roi, int step, rectangle_t *r);


array_t *cluster_kmeans(array_t *points, int k, cluster_dist_t dist_func);


void imlib_integral_image_alloc(struct integral_image *sum, int w, int h);
void imlib_integral_image_free(struct integral_image *sum);
void imlib_integral_image(struct image *src, struct integral_image *sum);
void imlib_integral_image_sq(struct image *src, struct integral_image *sum);
void imlib_integral_image_scaled(struct image *src, struct integral_image *sum);
uint32_t imlib_integral_lookup(struct integral_image *src, int x, int y, int w, int h);


void imlib_integral_mw_alloc(mw_image_t *sum, int w, int h);
void imlib_integral_mw_free(mw_image_t *sum);
void imlib_integral_mw_scale(rectangle_t *roi, mw_image_t *sum, int w, int h);
void imlib_integral_mw(image_t *src, mw_image_t *sum);
void imlib_integral_mw_sq(image_t *src, mw_image_t *sum);
void imlib_integral_mw_shift(image_t *src, mw_image_t *sum, int n);
void imlib_integral_mw_shift_sq(image_t *src, mw_image_t *sum, int n);
void imlib_integral_mw_ss(image_t *src, mw_image_t *sum, mw_image_t *ssq, rectangle_t *roi);
void imlib_integral_mw_shift_ss(image_t *src, mw_image_t *sum, mw_image_t *ssq, rectangle_t *roi, int n);
long imlib_integral_mw_lookup(mw_image_t *sum, int x, int y, int w, int h);


int imlib_load_cascade(struct cascade *cascade, const char *path);
array_t *imlib_detect_objects(struct image *image, struct cascade *cascade, struct rectangle *roi);


void fast_detect(image_t *image, array_t *keypoints, int threshold, rectangle_t *roi);
void agast_detect(image_t *image, array_t *keypoints, int threshold, rectangle_t *roi);


array_t *orb_find_keypoints(image_t *image, 
# 1315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                           _Bool 
# 1315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                normalized, int threshold,
                            float scale_factor, int max_keypoints, corner_detector_t corner_detector, rectangle_t *roi);
int orb_match_keypoints(array_t *kpts1, array_t *kpts2, int *match, int threshold, rectangle_t *r, point_t *c, int *angle);
int orb_filter_keypoints(array_t *kpts, rectangle_t *r, point_t *c);
int orb_save_descriptor(FIL *fp, array_t *kpts);
int orb_load_descriptor(FIL *fp, array_t *kpts);
float orb_cluster_dist(int cx, int cy, void *kp);


uint8_t *imlib_lbp_desc(image_t *image, rectangle_t *roi);
int imlib_lbp_desc_distance(uint8_t *d0, uint8_t *d1);
int imlib_lbp_desc_save(FIL *fp, uint8_t *desc);
int imlib_lbp_desc_load(FIL *fp, uint8_t **desc);


void imlib_find_iris(image_t *src, point_t *iris, rectangle_t *roi);


void im_filter_bw(uint8_t *src, uint8_t *dst, int size, int bpp, void *args);
void im_filter_skin(uint8_t *src, uint8_t *dst, int size, int bpp, void *args);


void imlib_edge_simple(image_t *src, rectangle_t *roi, int low_thresh, int high_thresh);
void imlib_edge_canny(image_t *src, rectangle_t *roi, int low_thresh, int high_thresh);


void imlib_find_hog(image_t *src, rectangle_t *roi, int cell_size);


void imlib_zero(image_t *img, image_t *mask, 
# 1344 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                            _Bool 
# 1344 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                 invert);
void imlib_draw_row_setup(imlib_draw_row_data_t *data);
void imlib_draw_row_teardown(imlib_draw_row_data_t *data);
void imlib_draw_row(int x_start, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_draw_image_get_bounds(image_t *dst_img,
                                 image_t *src_img,
                                 int dst_x_start,
                                 int dst_y_start,
                                 float x_scale,
                                 float y_scale,
                                 rectangle_t *roi,
                                 int alpha,
                                 const uint8_t *alpha_palette,
                                 image_hint_t hint,
                                 point_t *p0,
                                 point_t *p1);
void imlib_flood_fill_int(image_t *out, image_t *img, int x, int y,
                          int seed_threshold, int floating_threshold,
                          flood_fill_call_back_t cb, void *data);

int imlib_get_pixel(image_t *img, int x, int y);
int imlib_get_pixel_fast(image_t *img, const void *row_ptr, int x);
void imlib_set_pixel(image_t *img, int x, int y, int p);
void imlib_draw_line(image_t *img, int x0, int y0, int x1, int y1, int c, int thickness);
void imlib_draw_rectangle(image_t *img, int rx, int ry, int rw, int rh, int c, int thickness, 
# 1368 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                             _Bool 
# 1368 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                                  fill);
void imlib_draw_circle(image_t *img, int cx, int cy, int r, int c, int thickness, 
# 1369 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                 _Bool 
# 1369 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                      fill);
void imlib_draw_ellipse(image_t *img, int cx, int cy, int rx, int ry, int rotation, int c, int thickness, 
# 1370 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                                         _Bool 
# 1370 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                                              fill);
void imlib_draw_string(image_t *img,
                       int x_off,
                       int y_off,
                       const char *str,
                       int c,
                       float scale,
                       int x_spacing,
                       int y_spacing,
                       
# 1379 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                      _Bool 
# 1379 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                           mono_space,
                       int char_rotation,
                       
# 1381 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                      _Bool 
# 1381 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                           char_hmirror,
                       
# 1382 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                      _Bool 
# 1382 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                           char_vflip,
                       int string_rotation,
                       
# 1384 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                      _Bool 
# 1384 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                           string_hmirror,
                       
# 1385 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                      _Bool 
# 1385 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                           string_hflip);
void imlib_draw_image(image_t *dst_img,
                      image_t *src_img,
                      int dst_x_start,
                      int dst_y_start,
                      float x_scale,
                      float y_scale,
                      rectangle_t *roi,
                      int rgb_channel,
                      int alpha,
                      const uint16_t *color_palette,
                      const uint8_t *alpha_palette,
                      image_hint_t hint,
                      imlib_draw_row_callback_t callback,
                      void *callback_arg,
                      void *dst_row_override);
void imlib_flood_fill(image_t *img, int x, int y,
                      float seed_threshold, float floating_threshold,
                      int c, 
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                            _Bool 
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                 invert, 
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                         _Bool 
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                              clear_background, image_t *mask);

void imlib_awb_rgb_avg(image_t *img, uint32_t *r_out, uint32_t *g_out, uint32_t *b_out);
void imlib_awb_rgb_max(image_t *img, uint32_t *r_out, uint32_t *g_out, uint32_t *b_out);
void imlib_awb(image_t *img, uint32_t r_out, uint32_t g_out, uint32_t b_out);
void imlib_ccm(image_t *img, float *ccm, 
# 1408 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                        _Bool 
# 1408 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                             offset);
void imlib_gamma(image_t *img, float gamma, float scale, float offset);

void imlib_zero_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_mask_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_binary(image_t *out, image_t *img, list_t *thresholds, 
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                 _Bool 
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                      invert, 
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                              _Bool 
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                   zero, image_t *mask);
void imlib_invert(image_t *img);
void imlib_b_and_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_b_nand_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_b_or_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_b_nor_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_b_xor_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_b_xnor_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_erode(image_t *img, int ksize, int threshold, image_t *mask);
void imlib_dilate(image_t *img, int ksize, int threshold, image_t *mask);
void imlib_open(image_t *img, int ksize, int threshold, image_t *mask);
void imlib_close(image_t *img, int ksize, int threshold, image_t *mask);
void imlib_top_hat(image_t *img, int ksize, int threshold, image_t *mask);
void imlib_black_hat(image_t *img, int ksize, int threshold, image_t *mask);

void imlib_add_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_sub_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_rsub_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_min_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_max_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);
void imlib_difference_line_op(int x, int x_end, int y_row, imlib_draw_row_data_t *data);

void imlib_histeq(image_t *img, image_t *mask);
void imlib_clahe_histeq(image_t *img, float clip_limit, image_t *mask);
void imlib_mean_filter(image_t *img, const int ksize, 
# 1437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                     _Bool 
# 1437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                          threshold, int offset, 
# 1437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                 _Bool 
# 1437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                      invert, image_t *mask);
void imlib_median_filter(image_t *img, const int ksize, float percentile, 
# 1438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                         _Bool 
# 1438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                              threshold, int offset, 
# 1438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                                     _Bool 
# 1438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                                          invert,
                         image_t *mask);
void imlib_mode_filter(image_t *img, const int ksize, 
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                     _Bool 
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                          threshold, int offset, 
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                 _Bool 
# 1440 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                      invert, image_t *mask);
void imlib_midpoint_filter(image_t *img, const int ksize, float bias, 
# 1441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                     _Bool 
# 1441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                          threshold, int offset, 
# 1441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                                 _Bool 
# 1441 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                                      invert, image_t *mask);
void imlib_morph(image_t *img,
                 const int ksize,
                 const int *krn,
                 const float m,
                 const float b,
                 
# 1447 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                _Bool 
# 1447 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                     threshold,
                 int offset,
                 
# 1449 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                _Bool 
# 1449 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                     invert,
                 image_t *mask);
void imlib_bilateral_filter(image_t *img,
                            const int ksize,
                            float color_sigma,
                            float space_sigma,
                            
# 1455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                           _Bool 
# 1455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                threshold,
                            int offset,
                            
# 1457 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                           _Bool 
# 1457 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                invert,
                            image_t *mask);

void imlib_logpolar_int(image_t *dst, image_t *src, rectangle_t *roi, 
# 1460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                     _Bool 
# 1460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                          linear, 
# 1460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                  _Bool 
# 1460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                       reverse);
void imlib_logpolar(image_t *img, 
# 1461 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                 _Bool 
# 1461 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                      linear, 
# 1461 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                              _Bool 
# 1461 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                   reverse);

void imlib_lens_corr(image_t *img, float strength, float zoom, float x_corr, float y_corr);
void imlib_rotation_corr(image_t *img, float x_rotation, float y_rotation,
                         float z_rotation, float x_translation, float y_translation,
                         float zoom, float fov, float *corners);

void imlib_get_similarity(image_t *img,
                          image_t *other,
                          int x_start,
                          int y_start,
                          float x_scale,
                          float y_scale,
                          rectangle_t *roi,
                          int rgb_channel,
                          int alpha,
                          const uint16_t *color_palette,
                          const uint8_t *alpha_palette,
                          image_hint_t hint,
                          
# 1480 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                         _Bool 
# 1480 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                              dssim,
                          float *avg,
                          float *std,
                          float *min,
                          float *max);
void imlib_get_histogram(histogram_t *out, image_t *ptr, rectangle_t *roi, list_t *thresholds, 
# 1485 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                                                                              _Bool 
# 1485 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                                                                                   invert, image_t *other);
void imlib_get_percentile(percentile_t *out, pixformat_t pixfmt, histogram_t *ptr, float percentile);
void imlib_get_threshold(threshold_t *out, pixformat_t pixfmt, histogram_t *ptr);
void imlib_get_statistics(statistics_t *out, pixformat_t pixfmt, histogram_t *ptr);

# 1489 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
_Bool 
# 1489 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
    imlib_get_regression(find_lines_list_lnk_data_t *out,
                          image_t *ptr,
                          rectangle_t *roi,
                          unsigned int x_stride,
                          unsigned int y_stride,
                          list_t *thresholds,
                          
# 1495 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                         _Bool 
# 1495 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                              invert,
                          unsigned int area_threshold,
                          unsigned int pixels_threshold,
                          
# 1498 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                         _Bool 
# 1498 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                              robust);

void imlib_find_blobs(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,
                      list_t *thresholds, 
# 1501 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                         _Bool 
# 1501 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                              invert, unsigned int area_threshold, unsigned int pixels_threshold,
                      
# 1502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                     _Bool 
# 1502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                          merge, int margin,
                      
# 1503 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                     _Bool 
# 1503 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                          (*threshold_cb) (void *, find_blobs_list_lnk_data_t *), void *threshold_cb_arg,
                      
# 1504 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                     _Bool 
# 1504 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                          (*merge_cb) (void *, find_blobs_list_lnk_data_t *, find_blobs_list_lnk_data_t *), void *merge_cb_arg,
                      unsigned int x_hist_bins_max, unsigned int y_hist_bins_max);

size_t trace_line(image_t *ptr, line_t *l, int *theta_buffer, uint32_t *mag_buffer, point_t *point_buffer);
void merge_alot(list_t *out, int threshold, int theta_threshold);
void imlib_find_lines(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,
                      uint32_t threshold, unsigned int theta_margin, unsigned int rho_margin);
void imlib_lsd_find_line_segments(list_t *out,
                                  image_t *ptr,
                                  rectangle_t *roi,
                                  unsigned int merge_distance,
                                  unsigned int max_theta_diff);
void imlib_find_line_segments(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,
                              uint32_t threshold, unsigned int theta_margin, unsigned int rho_margin,
                              uint32_t segment_threshold);
void imlib_find_circles(list_t *out, image_t *ptr, rectangle_t *roi, unsigned int x_stride, unsigned int y_stride,
                        uint32_t threshold, unsigned int x_margin, unsigned int y_margin, unsigned int r_margin,
                        unsigned int r_min, unsigned int r_max, unsigned int r_step);
void imlib_find_rects(list_t *out, image_t *ptr, rectangle_t *roi,
                      uint32_t threshold);

void imlib_find_qrcodes(list_t *out, image_t *ptr, rectangle_t *roi);
void imlib_find_apriltags(list_t *out, image_t *ptr, rectangle_t *roi, apriltag_families_t families,
                          float fx, float fy, float cx, float cy);
void imlib_find_datamatrices(list_t *out, image_t *ptr, rectangle_t *roi, int effort);
void imlib_find_barcodes(list_t *out, image_t *ptr, rectangle_t *roi);

void imlib_phasecorrelate(image_t *img0,
                          image_t *img1,
                          rectangle_t *roi0,
                          rectangle_t *roi1,
                          
# 1535 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                         _Bool 
# 1535 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                              logpolar,
                          
# 1536 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                         _Bool 
# 1536 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                              fix_rotation_scale,
                          float *x_translation,
                          float *y_translation,
                          float *rotation,
                          float *scale,
                          float *response);

void imlib_stereo_disparity(image_t *img, 
# 1543 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 3 4
                                         _Bool 
# 1543 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h"
                                              reversed, int max_disparity, int threshold);

array_t *imlib_selective_search(image_t *src, float t, int min_size, float a1, float a2, float a3);
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2




# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/imlib.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/mutex.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/common/mutex.h"
typedef volatile struct {
    uint32_t tid;
    uint32_t lock;
    uint32_t last_tid;
} omv_mutex_t;

void mutex_init0(omv_mutex_t *mutex);
void mutex_lock(omv_mutex_t *mutex, uint32_t tid);
int mutex_try_lock(omv_mutex_t *mutex, uint32_t tid);
int mutex_try_lock_alternate(omv_mutex_t *mutex, uint32_t tid);
int mutex_lock_timeout(omv_mutex_t *mutex, uint32_t tid, uint32_t timeout);
void mutex_unlock(omv_mutex_t *mutex, uint32_t tid);
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 2
# 40 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
typedef struct framebuffer {
    int32_t x, y;
    int32_t w, h;
    int32_t u, v;
    struct { union { struct { uint32_t bpp :8; uint32_t subfmt_id :8; uint32_t pixfmt_id :8; uint32_t is_bayer :1; uint32_t is_compressed :1; uint32_t is_color :1; uint32_t is_mutable :1; uint32_t is_yuv :1; uint32_t :3; }; uint32_t pixfmt; }; uint32_t size; };
    int32_t streaming_enabled;
    uint32_t buff_size;
    uint32_t n_buffers;
    uint32_t frame_size;
    int32_t head;
    volatile int32_t tail;
    
# 51 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
   _Bool 
# 51 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
        check_head;
    int32_t sampled_head;
    uint8_t data[] __attribute__((aligned(32U)));
} framebuffer_t;

typedef enum {
    FB_NO_FLAGS = (0 << 0),
    FB_PEEK = (1 << 0),
    FB_INVALIDATE = (1 << 1),
} framebuffer_flags_t;

typedef struct vbuffer {

    int32_t offset;
    
# 65 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
   _Bool 
# 65 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
        jpeg_buffer_overflow;

    volatile 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
            _Bool 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
                 waiting_for_data;
    
# 68 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
   _Bool 
# 68 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
        reset_state;

    uint8_t data[] __attribute__((aligned(32U)));
} vbuffer_t;

typedef struct jpegbuffer {
    int32_t w, h;
    int32_t size;
    int32_t enabled;
    int32_t quality;
    omv_mutex_t lock;
    uint8_t pixels[] __attribute__((aligned(32U)));
} jpegbuffer_t;

extern jpegbuffer_t *jpegbuffer;

void framebuffer_init0();

framebuffer_t *framebuffer_get(size_t id);

int32_t framebuffer_get_x(framebuffer_t *fb);
int32_t framebuffer_get_y(framebuffer_t *fb);
int32_t framebuffer_get_u(framebuffer_t *fb);
int32_t framebuffer_get_v(framebuffer_t *fb);

int32_t framebuffer_get_width(framebuffer_t *fb);
int32_t framebuffer_get_height(framebuffer_t *fb);
int32_t framebuffer_get_depth(framebuffer_t *fb);


void framebuffer_set_streaming(framebuffer_t *fb, 
# 98 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
                                                 _Bool 
# 98 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
                                                      enable);

# 99 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
_Bool 
# 99 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
    framebuffer_get_streaming(framebuffer_t *fb);


void framebuffer_encode(framebuffer_t *fb, uint8_t *ptr, image_t *img);
int framebuffer_encoded_size(framebuffer_t *fb, image_t *img);


uint32_t framebuffer_get_buffer_size(framebuffer_t *fb);


vbuffer_t *framebuffer_get_buffer(framebuffer_t *fb, int32_t index);


void framebuffer_init_image(framebuffer_t *fb, image_t *img);


void framebuffer_init_from_image(framebuffer_t *fb, image_t *img);



void framebuffer_update_jpeg_buffer(framebuffer_t *fb);



void framebuffer_flush_buffers(framebuffer_t *fb, 
# 123 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h" 3 4
                                                 _Bool 
# 123 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/imlib/framebuffer.h"
                                                      fifo_flush);




int framebuffer_set_buffers(framebuffer_t *fb, int32_t n_buffers);


void framebuffer_free_current_buffer(framebuffer_t *fb);


void framebuffer_setup_buffers(framebuffer_t *fb);




vbuffer_t *framebuffer_get_head(framebuffer_t *fb, framebuffer_flags_t flags);



vbuffer_t *framebuffer_get_tail(framebuffer_t *fb, framebuffer_flags_t flags);


char *framebuffer_get_buffers_end(framebuffer_t *fb);
# 45 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_assert.h" 1
# 46 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h" 1
# 30 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h"
typedef enum py_helper_arg_image_flags {
    ARG_IMAGE_ANY = (0 << 0),
    ARG_IMAGE_MUTABLE = (1 << 0),
    ARG_IMAGE_UNCOMPRESSED = (1 << 1),
    ARG_IMAGE_GRAYSCALE = (1 << 2),
    ARG_IMAGE_ALLOC = (1 << 3)
} py_helper_arg_image_flags_t;

extern const mp_obj_fun_builtin_var_t py_func_unavailable_obj;
image_t *py_helper_arg_to_image(const mp_obj_t arg, uint32_t flags);
const void *py_helper_arg_to_palette(const mp_obj_t arg, uint32_t pixfmt);
rectangle_t py_helper_arg_to_roi(const mp_obj_t arg, const image_t *img);
void py_helper_arg_to_scale(const mp_obj_t arg_x_scale, const mp_obj_t arg_y_scale,
                            float *x_scale, float *y_scale);
void py_helper_arg_to_minmax(const mp_obj_t minmax, float *min, float *max,
                             const mp_obj_t *array, size_t array_size);
float py_helper_arg_to_float(const mp_obj_t arg, float default_value);
void py_helper_arg_to_float_array(const mp_obj_t arg, float *array, size_t size);

image_t *py_helper_keyword_to_image(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                    mp_map_t *kw_args, mp_obj_t kw, image_t *default_val);
void py_helper_keyword_rectangle(image_t *img, size_t n_args, const mp_obj_t *args, size_t arg_index,
                                 mp_map_t *kw_args, mp_obj_t kw, rectangle_t *r);
void py_helper_keyword_rectangle_roi(image_t *img, size_t n_args, const mp_obj_t *args, size_t arg_index,
                                     mp_map_t *kw_args, rectangle_t *r);
int py_helper_keyword_int(size_t n_args, const mp_obj_t *args, size_t arg_index,
                          mp_map_t *kw_args, mp_obj_t kw, int default_val);

# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h" 3 4
_Bool 
# 57 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h"
    py_helper_keyword_int_maybe(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                 mp_map_t *kw_args, mp_obj_t kw, int *value);
float py_helper_keyword_float(size_t n_args, const mp_obj_t *args, size_t arg_index,
                              mp_map_t *kw_args, mp_obj_t kw, float default_val);

# 61 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h" 3 4
_Bool 
# 61 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h"
    py_helper_keyword_float_maybe(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                   mp_map_t *kw_args, mp_obj_t kw, float *value);
void py_helper_keyword_int_array(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                 mp_map_t *kw_args, mp_obj_t kw, int *x, int size);
void py_helper_keyword_float_array(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                   mp_map_t *kw_args, mp_obj_t kw, float *x, int size);
float *py_helper_keyword_corner_array(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                      mp_map_t *kw_args, mp_obj_t kw);
uint py_helper_consume_array(size_t n_args, const mp_obj_t *args, size_t arg_index, size_t len, const mp_obj_t **items);
int py_helper_keyword_color(image_t *img, size_t n_args, const mp_obj_t *args, size_t arg_index,
                            mp_map_t *kw_args, int default_val);
void py_helper_arg_to_thresholds(const mp_obj_t arg, list_t *thresholds);
void py_helper_keyword_thresholds(size_t n_args, const mp_obj_t *args, size_t arg_index,
                                  mp_map_t *kw_args, list_t *thresholds);
int py_helper_arg_to_ksize(const mp_obj_t arg);
mp_obj_t py_helper_keyword_object(size_t n_args, const mp_obj_t *args,
                                  size_t arg_index, mp_map_t *kw_args, mp_obj_t kw, mp_obj_t default_val);
const uint16_t *py_helper_keyword_color_palette(size_t n_args, const mp_obj_t *args,
                                                size_t arg_index, mp_map_t *kw_args, const uint16_t *default_color_palette);
const uint8_t *py_helper_keyword_alpha_palette(size_t n_args, const mp_obj_t *args,
                                               size_t arg_index, mp_map_t *kw_args, const uint8_t *default_alpha_palette);

# 82 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h" 3 4
_Bool 
# 82 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_helper.h"
    py_helper_is_equal_to_framebuffer(image_t *img);
void py_helper_update_framebuffer(image_t *img);
void py_helper_set_to_framebuffer(image_t *img);
# 47 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.h" 1
# 29 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.h"
extern const mp_obj_type_t py_image_type;
mp_obj_t py_image(int width, int height, pixformat_t pixfmt, uint32_t size, void *pixels);
mp_obj_t py_image_from_struct(image_t *img);
void *py_image_cobj(mp_obj_t img_obj);
int py_image_descriptor_from_roi(image_t *img, const char *path, rectangle_t *roi);
# 48 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2


# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_imageio.h" 1
# 28 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_imageio.h"
extern const mp_obj_type_t py_imageio_type;
# 51 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2

# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 1
# 17 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h" 1
# 37 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h"
size_t mp_binary_get_size(char struct_type, char val_type, size_t *palign);
mp_obj_t mp_binary_get_val_array(char typecode, void *p, size_t index);
void mp_binary_set_val_array(char typecode, void *p, size_t index, mp_obj_t val_in);
void mp_binary_set_val_array_from_int(char typecode, void *p, size_t index, mp_int_t val);
mp_obj_t mp_binary_get_val(char struct_type, char val_type, byte *p_base, byte **ptr);
void mp_binary_set_val(char struct_type, char val_type, mp_obj_t val_in, byte *p_base, byte **ptr);
long long mp_binary_get_int(size_t size, 
# 43 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h" 3 4
                                        _Bool 
# 43 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h"
                                             is_signed, 
# 43 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h" 3 4
                                                        _Bool 
# 43 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h"
                                                             big_endian, const byte *src);
void mp_binary_set_int(size_t val_sz, 
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h" 3 4
                                     _Bool 
# 44 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/lib/micropython/py/binary.h"
                                          big_endian, byte *dest, mp_uint_t val);
# 18 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 2



# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ulab.h" 1
# 31 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ulab.h"
# 1 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/boards/LUCIDCODE_INSPEC//ulab_config.h" 1
# 32 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ulab.h" 2
# 22 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 2
# 55 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
typedef struct _mp_obj_float_t {
    mp_obj_base_t base;
    mp_float_t value;
} mp_obj_float_t;
# 115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
void ndarray_set_complex_value(void *, size_t , mp_obj_t );







extern const mp_obj_type_t ulab_ndarray_type;

enum NDARRAY_TYPE {
    NDARRAY_BOOL = '?',
    NDARRAY_UINT8 = 'B',
    NDARRAY_INT8 = 'b',
    NDARRAY_UINT16 = 'H',
    NDARRAY_INT16 = 'h',



    NDARRAY_FLOAT = 'f',
};

typedef struct _ndarray_obj_t {
    mp_obj_base_t base;
    uint8_t dtype;
    uint8_t itemsize;
    uint8_t boolean;
    uint8_t ndim;
    size_t len;
    size_t shape[(4)];
    int32_t strides[(4)];
    void *array;
    void *origin;
} ndarray_obj_t;
# 163 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
extern const mp_obj_type_t ndarray_flatiter_type;

mp_obj_t ndarray_new_ndarray_iterator(mp_obj_t , mp_obj_iter_buf_t *);

mp_obj_t ndarray_get_item(ndarray_obj_t *, void *);
mp_float_t ndarray_get_float_value(void *, uint8_t );
mp_float_t ndarray_get_float_index(void *, uint8_t , size_t );

# 170 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 3 4
_Bool 
# 170 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
    ndarray_object_is_array_like(mp_obj_t );
void fill_array_iterable(mp_float_t *, mp_obj_t );
size_t *ndarray_shape_vector(size_t , size_t , size_t , size_t );

void ndarray_print(const mp_print_t *, mp_obj_t , mp_print_kind_t );


mp_obj_t ndarray_set_printoptions(size_t , const mp_obj_t *, mp_map_t *);
extern const mp_obj_fun_builtin_var_t ndarray_set_printoptions_obj;

mp_obj_t ndarray_get_printoptions(void);
extern const mp_obj_fun_builtin_fixed_t ndarray_get_printoptions_obj;


void ndarray_assign_elements(ndarray_obj_t *, mp_obj_t , uint8_t , size_t *);
size_t *ndarray_contract_shape(ndarray_obj_t *, uint8_t );
int32_t *ndarray_contract_strides(ndarray_obj_t *, uint8_t );

ndarray_obj_t *ndarray_from_iterable(mp_obj_t , uint8_t );
ndarray_obj_t *ndarray_new_dense_ndarray(uint8_t , size_t *, uint8_t );
ndarray_obj_t *ndarray_new_ndarray_from_tuple(mp_obj_tuple_t *, uint8_t );
ndarray_obj_t *ndarray_new_ndarray(uint8_t , size_t *, int32_t *, uint8_t , uint8_t *);
ndarray_obj_t *ndarray_new_linear_array(size_t , uint8_t );
ndarray_obj_t *ndarray_new_view(ndarray_obj_t *, uint8_t , size_t *, int32_t *, int32_t );

# 194 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 3 4
_Bool 
# 194 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
    ndarray_is_dense(ndarray_obj_t *);
ndarray_obj_t *ndarray_copy_view(ndarray_obj_t *);
ndarray_obj_t *ndarray_copy_view_convert_type(ndarray_obj_t *, uint8_t );
void ndarray_copy_array(ndarray_obj_t *, ndarray_obj_t *, uint8_t );

extern const mp_obj_fun_builtin_var_t ndarray_array_constructor_obj;
mp_obj_t ndarray_make_new(const mp_obj_type_t *, size_t , size_t , const mp_obj_t *);
mp_obj_t ndarray_subscr(mp_obj_t , mp_obj_t , mp_obj_t );
mp_obj_t ndarray_getiter(mp_obj_t , mp_obj_iter_buf_t *);

# 203 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 3 4
_Bool 
# 203 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
    ndarray_can_broadcast(ndarray_obj_t *, ndarray_obj_t *, uint8_t *, size_t *, int32_t *, int32_t *);

# 204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 3 4
_Bool 
# 204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
    ndarray_can_broadcast_inplace(ndarray_obj_t *, ndarray_obj_t *, int32_t *);
mp_obj_t ndarray_binary_op(mp_binary_op_t , mp_obj_t , mp_obj_t );
mp_obj_t ndarray_unary_op(mp_unary_op_t , mp_obj_t );

size_t *ndarray_new_coords(uint8_t );
void ndarray_rewind_array(uint8_t , uint8_t *, size_t *, int32_t *, size_t *);



mp_obj_t ndarray_byteswap(size_t , const mp_obj_t *, mp_map_t *);
extern const mp_obj_fun_builtin_var_t ndarray_byteswap_obj;



mp_obj_t ndarray_copy(mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_copy_obj;



mp_obj_t ndarray_flatten(size_t , const mp_obj_t *, mp_map_t *);
extern const mp_obj_fun_builtin_var_t ndarray_flatten_obj;



mp_obj_t ndarray_dtype(mp_obj_t );



mp_obj_t ndarray_itemsize(mp_obj_t );



mp_obj_t ndarray_size(mp_obj_t );



mp_obj_t ndarray_shape(mp_obj_t );



mp_obj_t ndarray_strides(mp_obj_t );



mp_obj_t ndarray_reshape_core(mp_obj_t , mp_obj_t , 
# 248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h" 3 4
                                                   _Bool 
# 248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/ulab/code/ndarray.h"
                                                        );
mp_obj_t ndarray_reshape(mp_obj_t , mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_reshape_obj;



mp_obj_t ndarray_tobytes(mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_tobytes_obj;



mp_obj_t ndarray_tolist(mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_tolist_obj;



mp_obj_t ndarray_transpose(mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_transpose_obj;



mp_obj_t ndarray_info(mp_obj_t );
extern const mp_obj_fun_builtin_fixed_t ndarray_info_obj;


mp_int_t ndarray_get_buffer(mp_obj_t , mp_buffer_info_t *, mp_uint_t );


ndarray_obj_t *ndarray_from_mp_obj(mp_obj_t , uint8_t );
# 53 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 2

const mp_obj_type_t py_image_type;




static const mp_obj_type_t py_cascade_type;

typedef struct _py_cascade_obj_t {
    mp_obj_base_t base;
    struct cascade _cobj;
} py_cascade_obj_t;

void *py_cascade_cobj(mp_obj_t cascade) {
    do { __typeof__ (cascade) _a = (cascade); __typeof__ (&py_cascade_type) _b = (&py_cascade_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 67 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
    return &((py_cascade_obj_t *) cascade)->_cobj;
}

static void py_cascade_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_cascade_obj_t *self = self_in;
    mp_printf(print, "{\"width\":%d, \"height\":%d, \"n_stages\":%d, \"n_features\":%d, \"n_rectangles\":%d}",
              self->_cobj.window.w, self->_cobj.window.h, self->_cobj.n_stages,
              self->_cobj.n_features, self->_cobj.n_rectangles);
}

static const mp_obj_type_t py_cascade_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_Cascade, .slot_index_print = 1, .slots = { py_cascade_print, } }




     ;






typedef struct _py_kp_obj_t {
    mp_obj_base_t base;
    array_t *kpts;
    int threshold;
    
# 94 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 94 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        normalized;
} py_kp_obj_t;

static void py_kp_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_kp_obj_t *self = self_in;
    mp_printf(print,
              "{\"size\":%d, \"threshold\":%d, \"normalized\":%d}",
              array_length(self->kpts),
              self->threshold,
              self->normalized);
}

mp_obj_t py_kp_unary_op(mp_unary_op_t op, mp_obj_t self_in) {
    py_kp_obj_t *self = ((void *)(self_in));
    switch (op) {
        case MP_UNARY_OP_LEN:
            return ((mp_obj_t)((((mp_uint_t)(array_length(self->kpts))) << 1) | 1));

        default:
            return (((mp_obj_t)((void *)0)));
    }
}

static mp_obj_t py_kp_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_kp_obj_t *self = self_in;
        int size = array_length(self->kpts);
        int i = mp_get_index(self->base.type, size, index, 
# 122 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                          0
# 122 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                               );
        kp_t *kp = array_at(self->kpts, i);
        return mp_obj_new_tuple(5, (mp_obj_t []) {mp_obj_new_int(kp->x),
                                                  mp_obj_new_int(kp->y),
                                                  mp_obj_new_int(kp->score),
                                                  mp_obj_new_int(kp->octave),
                                                  mp_obj_new_int(kp->angle)});
    }

    return (((mp_obj_t)((void *)0)));
}

static const mp_obj_type_t py_kp_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_kp_desc, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_unary_op = 3, .slots = { py_kp_print, py_kp_subscr, py_kp_unary_op, } }






     ;

py_kp_obj_t *py_kpts_obj(mp_obj_t kpts_obj) {
    do { __typeof__ (kpts_obj) _a = (kpts_obj); __typeof__ (&py_kp_type) _b = (&py_kp_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
    return kpts_obj;
}







typedef struct _py_lbp_obj_t {
    mp_obj_base_t base;
    uint8_t *hist;
} py_lbp_obj_t;

static void py_lbp_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    mp_printf(print, "{}");
}

static const mp_obj_type_t py_lbp_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_lbp_desc, .slot_index_print = 1, .slots = { py_lbp_print, } }




     ;







typedef struct _py_kptmatch_obj_t {
    mp_obj_base_t base;
    mp_obj_t cx, cy;
    mp_obj_t x, y, w, h;
    mp_obj_t count;
    mp_obj_t theta;
    mp_obj_t match;
} py_kptmatch_obj_t;

static void py_kptmatch_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_kptmatch_obj_t *self = self_in;
    mp_printf(print, "{\"cx\":%d, \"cy\":%d, \"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"count\":%d, \"theta\":%d}",
              mp_obj_get_int(self->cx), mp_obj_get_int(self->cy), mp_obj_get_int(self->x), mp_obj_get_int(self->y),
              mp_obj_get_int(self->w), mp_obj_get_int(self->h), mp_obj_get_int(self->count), mp_obj_get_int(self->theta));
}

static mp_obj_t py_kptmatch_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_kptmatch_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(9, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 9, index, 
# 205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                       0
# 205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                            )) {
            case 0: return self->cx;
            case 1: return self->cy;
            case 2: return self->x;
            case 3: return self->y;
            case 4: return self->w;
            case 5: return self->h;
            case 6: return self->count;
            case 7: return self->theta;
            case 8: return self->match;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_kptmatch_cx(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->cx;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_cx_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_cx};

mp_obj_t py_kptmatch_cy(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->cy;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_cy_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_cy};

mp_obj_t py_kptmatch_x(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_x};

mp_obj_t py_kptmatch_y(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_y};

mp_obj_t py_kptmatch_w(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_w};

mp_obj_t py_kptmatch_h(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_h};

mp_obj_t py_kptmatch_count(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->count;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_count_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_count};

mp_obj_t py_kptmatch_theta(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->theta;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_theta_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_theta};

mp_obj_t py_kptmatch_match(mp_obj_t self_in) {
    return ((py_kptmatch_obj_t *) self_in)->match;
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_match_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_match};

mp_obj_t py_kptmatch_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_kptmatch_obj_t *) self_in)->x,
                                              ((py_kptmatch_obj_t *) self_in)->y,
                                              ((py_kptmatch_obj_t *) self_in)->w,
                                              ((py_kptmatch_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_kptmatch_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_kptmatch_rect};

static const mp_rom_map_elem_t py_kptmatch_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cx)) << 3) | 2)), (&py_kptmatch_cx_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cy)) << 3) | 2)), (&py_kptmatch_cy_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_kptmatch_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_kptmatch_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_kptmatch_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_kptmatch_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_count)) << 3) | 2)), (&py_kptmatch_count_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_theta)) << 3) | 2)), (&py_kptmatch_theta_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_match)) << 3) | 2)), (&py_kptmatch_match_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_kptmatch_rect_obj) }
};

static const mp_obj_dict_t py_kptmatch_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_kptmatch_locals_dict_table) / sizeof((py_kptmatch_locals_dict_table)[0])), .alloc = (sizeof(py_kptmatch_locals_dict_table) / sizeof((py_kptmatch_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_kptmatch_locals_dict_table, }, };

static const mp_obj_type_t py_kptmatch_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_kptmatch, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_kptmatch_print, py_kptmatch_subscr, &py_kptmatch_locals_dict, } }






     ;






typedef struct _py_image_obj_t {
    mp_obj_base_t base;
    image_t _cobj;
} py_image_obj_t;

typedef struct _mp_obj_py_image_it_t {
    mp_obj_base_t base;
    mp_fun_1_t iternext;
    mp_obj_t py_image;
    size_t cur;
} mp_obj_py_image_it_t;

void *py_image_cobj(mp_obj_t img_obj) {
    do { __typeof__ (img_obj) _a = (img_obj); __typeof__ (&py_image_type) _b = (&py_image_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 315 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
   , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
    return &((py_image_obj_t *) img_obj)->_cobj;
}

mp_obj_t py_image_unary_op(mp_unary_op_t op, mp_obj_t self_in) {
    py_image_obj_t *self = ((void *)(self_in));
    switch (op) {
        case MP_UNARY_OP_LEN: {
            image_t *img = &self->_cobj;
            if (img->is_compressed) {

                return mp_obj_new_int(img->size);
            } else {

                return mp_obj_new_int(img->h);
            }
        }
        default:
            return (((mp_obj_t)((void *)0)));
    }
}


static mp_obj_t py_image_it_iternext(mp_obj_t self_in) {
    mp_obj_py_image_it_t *self = ((void *)(self_in));
    py_image_obj_t *image = ((void *)(self->py_image));
    image_t *img = &image->_cobj;
    switch (img->pixfmt) {
        case PIXFORMAT_BINARY: {
            if (self->cur >= img->h) {
                return (((mp_obj_t)((void *)0)));
            } else {
                mp_obj_t row = mp_obj_new_list(0, 
# 347 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                 ((void *)0)
# 347 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                     );
                for (int i = 0; i < img->w; i++) {
                    mp_obj_list_append(row, mp_obj_new_int(({ __typeof__ (img) _image = (img); __typeof__ (i) _x = (i); __typeof__ (self->cur) _y = (self->cur); (((uint32_t *) _image->data)[(((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1)))))))] >> (_x & ((sizeof(uint32_t) * 8) - 1))) & 1; })));
                }
                self->cur++;
                return row;
            }
        }
        case PIXFORMAT_GRAYSCALE:
        case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB: {
            if (self->cur >= img->h) {
                return (((mp_obj_t)((void *)0)));
            } else {
                mp_obj_t row = mp_obj_new_list(0, 
# 360 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                 ((void *)0)
# 360 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                     );
                for (int i = 0; i < img->w; i++) {
                    mp_obj_list_append(row, mp_obj_new_int(({ __typeof__ (img) _image = (img); __typeof__ (i) _x = (i); __typeof__ (self->cur) _y = (self->cur); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; })));
                }
                self->cur++;
                return row;
            }
        }
        case PIXFORMAT_RGB565:
        case PIXFORMAT_YUV422: case PIXFORMAT_YVU422: {
            if (self->cur >= img->h) {
                return (((mp_obj_t)((void *)0)));
            } else {
                mp_obj_t row = mp_obj_new_list(0, 
# 373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                 ((void *)0)
# 373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                     );
                for (int i = 0; i < img->w; i++) {
                    mp_obj_list_append(row, mp_obj_new_int(({ __typeof__ (img) _image = (img); __typeof__ (i) _x = (i); __typeof__ (self->cur) _y = (self->cur); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; })));
                }
                self->cur++;
                return row;
            }
        }
        default: {

            if (self->cur >= img->size) {
                return (((mp_obj_t)((void *)0)));
            } else {
                return mp_obj_new_int(img->pixels[self->cur++]);
            }
        }
    }
}

static mp_obj_t py_image_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf) {
    
# 393 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
   ((void)0)
# 393 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                    ;
    mp_obj_py_image_it_t *o = (mp_obj_py_image_it_t *) iter_buf;
    o->base.type = &mp_type_polymorph_iter;
    o->iternext = py_image_it_iternext;
    o->py_image = o_in;
    o->cur = 0;
    return ((mp_obj_t)(o));
}

static void py_image_print(const mp_print_t *print, mp_obj_t self, mp_print_kind_t kind) {
    image_t *image = py_image_cobj(self);
    if (image->is_compressed
        && image->pixels[0] == 0xFE
        && image->pixels[image->size - 1] == 0xFE) {

        print->print_strn(print->data, (const char *) image->pixels, image->size);
    } else {
        mp_printf(print, "{\"w\":%d, \"h\":%d, \"type\":\"%s\", \"size\":%d}",
                  image->w,
                  image->h,
                  (image->pixfmt == PIXFORMAT_BINARY) ? "binary" :
                  (image->pixfmt == PIXFORMAT_GRAYSCALE) ? "grayscale" :
                  (image->pixfmt == PIXFORMAT_RGB565) ? "rgb565" :
                  (image->pixfmt == PIXFORMAT_BAYER_BGGR) ? "bayer_bggr" :
                  (image->pixfmt == PIXFORMAT_BAYER_GBRG) ? "bayer_gbrg" :
                  (image->pixfmt == PIXFORMAT_BAYER_GRBG) ? "bayer_grbg" :
                  (image->pixfmt == PIXFORMAT_BAYER_RGGB) ? "bayer_rggb" :
                  (image->pixfmt == PIXFORMAT_YUV422) ? "yuv422" :
                  (image->pixfmt == PIXFORMAT_YVU422) ? "yvu422" :
                  (image->pixfmt == PIXFORMAT_JPEG) ? "jpeg" :
                  (image->pixfmt == PIXFORMAT_PNG) ? "png" : "unknown",
                  image_size(image));
    }
}

static mp_obj_t py_image_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    py_image_obj_t *self = self_in;
    image_t *image = py_image_cobj(self);
    if (value == (((mp_obj_t)((void *)0)))) {

    } else if (value == (((mp_obj_t)((void *)4)))) {

        switch (image->pixfmt) {
            case PIXFORMAT_BINARY: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 437 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 442 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       ((void *)0)
# 442 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );
                    for (mp_uint_t i = 0; i < result->len; i++) {
                        result->items[i] =
                            mp_obj_new_int(({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); (((uint32_t *) _image->data)[(((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1)))))))] >> (_x & ((sizeof(uint32_t) * 8) - 1))) & 1; })
                                                                                               );
                    }
                    return result;
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 450 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 450 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                return mp_obj_new_int(({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); (((uint32_t *) _image->data)[(((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1)))))))] >> (_x & ((sizeof(uint32_t) * 8) - 1))) & 1; }));
            }
            case PIXFORMAT_GRAYSCALE:
            case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 455 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       ((void *)0)
# 460 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );
                    for (mp_uint_t i = 0; i < result->len; i++) {
                        uint8_t p =
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; });
                        result->items[i] = mp_obj_new_int(p);
                    }
                    return result;
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 468 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 468 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                uint8_t p = ({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; });
                return mp_obj_new_int(p);
            }
            case PIXFORMAT_RGB565:
            case PIXFORMAT_YUV422: case PIXFORMAT_YVU422: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 474 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 479 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       ((void *)0)
# 479 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );
                    for (mp_uint_t i = 0; i < result->len; i++) {
                        uint16_t p = ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; });
                        if (image->is_yuv) {
                            result->items[i] = mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(p & 0xff),
                                                                                  mp_obj_new_int((p >> 8) & 0xff)});
                        } else {
                            result->items[i] = mp_obj_new_tuple(3, (mp_obj_t []) {mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                                                                                  mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                                                                                  mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
                        }
                    }
                    return result;
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 493 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 493 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                uint16_t p = ({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; });
                if (image->is_yuv) {
                    return mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(p & 0xff),
                                                              mp_obj_new_int((p >> 8) & 0xff)});
                } else {
                    return mp_obj_new_tuple(3, (mp_obj_t []) {mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                                                              mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                                                              mp_obj_new_int(({ __typeof__ (p) __pixel = (p); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
                }
            }
            case PIXFORMAT_JPEG:
            case PIXFORMAT_PNG: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 506 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->size, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 511 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       ((void *)0)
# 511 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );
                    for (mp_uint_t i = 0; i < result->len; i++) {
                        result->items[i] = mp_obj_new_int(image->data[slice.start + i]);
                    }
                    return result;
                }
                mp_uint_t i = mp_get_index(self->base.type, image->size, index, 
# 517 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               0
# 517 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                    );
                return mp_obj_new_int(image->data[i]);
            }
            default:
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Invalid pixel format"));
        }
    } else {

        switch (image->pixfmt) {
            case PIXFORMAT_BINARY: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 532 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , 1) && (mp_obj_is_obj(value) && (((mp_obj_base_t *)((void *)(value)))->type == (&mp_type_list))))) {
                        mp_uint_t value_l_len;
                        mp_obj_t *value_l;
                        mp_obj_get_array(value, &value_l_len, &value_l);
                        do { if ((value_l_len == (slice.stop - slice.start)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("cannot grow or shrink image")); } } while (0);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (mp_obj_get_int(value_l[i])) _v = (mp_obj_get_int(value_l[i])); size_t _i = (((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))); size_t _j = _x & ((sizeof(uint32_t) * 8) - 1); ((uint32_t *) _image->data)[_i] = (((uint32_t *) _image->data)[_i] & (~(1 << _j))) | ((_v & 1) << _j); })


                                                                              ;
                        }
                    } else {
                        mp_int_t v = mp_obj_get_int(value);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (v) _v = (v); size_t _i = (((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))); size_t _j = _x & ((sizeof(uint32_t) * 8) - 1); ((uint32_t *) _image->data)[_i] = (((uint32_t *) _image->data)[_i] & (~(1 << _j))) | ((_v & 1) << _j); });
                        }
                    }
                    return ((mp_obj_t)(((0) << 3) | 6));
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 551 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 551 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                ({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); __typeof__ (mp_obj_get_int(value)) _v = (mp_obj_get_int(value)); size_t _i = (((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))); size_t _j = _x & ((sizeof(uint32_t) * 8) - 1); ((uint32_t *) _image->data)[_i] = (((uint32_t *) _image->data)[_i] & (~(1 << _j))) | ((_v & 1) << _j); });
                return ((mp_obj_t)(((0) << 3) | 6));
            }
            case PIXFORMAT_GRAYSCALE:
            case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 562 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , 1) && (mp_obj_is_obj(value) && (((mp_obj_base_t *)((void *)(value)))->type == (&mp_type_list))))) {
                        mp_uint_t value_l_len;
                        mp_obj_t *value_l;
                        mp_obj_get_array(value, &value_l_len, &value_l);
                        do { if ((value_l_len == (slice.stop - slice.start)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("cannot grow or shrink image")); } } while (0);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            uint8_t p = mp_obj_get_int(value_l[i]);
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (p) _v = (p); ((uint8_t *) _image->data)[(_image->w * _y) + _x] = _v; });
                        }
                    } else {
                        uint8_t p = mp_obj_get_int(value);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (p) _v = (p); ((uint8_t *) _image->data)[(_image->w * _y) + _x] = _v; });
                        }
                    }
                    return ((mp_obj_t)(((0) << 3) | 6));
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 579 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 579 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                uint8_t p = mp_obj_get_int(value);
                ({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); __typeof__ (p) _v = (p); ((uint8_t *) _image->data)[(_image->w * _y) + _x] = _v; });
                return ((mp_obj_t)(((0) << 3) | 6));
            }
            case PIXFORMAT_RGB565:
            case PIXFORMAT_YUV422: case PIXFORMAT_YVU422: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 586 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->w * image->h, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , 1) && (mp_obj_is_obj(value) && (((mp_obj_base_t *)((void *)(value)))->type == (&mp_type_list))))) {
                        mp_uint_t value_l_len;
                        mp_obj_t *value_l;
                        mp_obj_get_array(value, &value_l_len, &value_l);
                        do { if ((value_l_len == (slice.stop - slice.start)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("cannot grow or shrink image")); } } while (0);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            mp_obj_t *value_2;
                            uint16_t p;
                            if (image->is_yuv) {
                                mp_obj_get_array_fixed_n(value_l[i], 2, &value_2);
                                p = (mp_obj_get_int(value_2[0]) & 0xff) |
                                    (mp_obj_get_int(value_2[1]) & 0xff) << 8;
                            } else {
                                mp_obj_get_array_fixed_n(value_l[i], 3, &value_2);
                                p = ((((mp_obj_get_int(value_2[0])) & 0xF8) << 8) | (((mp_obj_get_int(value_2[1])) & 0xFC) << 3) | ((mp_obj_get_int(value_2[2])) >> 3))

                                                                                        ;
                            }
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (p) _v = (p); ((uint16_t *) _image->data)[(_image->w * _y) + _x] = _v; })
                                                                                   ;
                        }
                    } else {
                        mp_obj_t *value_2;
                        uint16_t p;
                        if (image->is_yuv) {
                            mp_obj_get_array_fixed_n(value, 2, &value_2);
                            p = (mp_obj_get_int(value_2[0]) & 0xff) |
                                (mp_obj_get_int(value_2[1]) & 0xff) << 8;
                        } else {
                            mp_obj_get_array_fixed_n(value, 3, &value_2);
                            p = ((((mp_obj_get_int(value_2[0])) & 0xF8) << 8) | (((mp_obj_get_int(value_2[1])) & 0xFC) << 3) | ((mp_obj_get_int(value_2[2])) >> 3))

                                                                                    ;
                        }
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            ({ __typeof__ (image) _image = (image); __typeof__ ((slice.start + i) % image->w) _x = ((slice.start + i) % image->w); __typeof__ ((slice.start + i) / image->w) _y = ((slice.start + i) / image->w); __typeof__ (p) _v = (p); ((uint16_t *) _image->data)[(_image->w * _y) + _x] = _v; })
                                                                                   ;
                        }
                    }
                    return ((mp_obj_t)(((0) << 3) | 6));
                }
                mp_uint_t i = mp_get_index(self->base.type, image->w * image->h, index, 
# 632 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 632 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
                mp_obj_t *value_2;
                mp_obj_get_array_fixed_n(value, 3, &value_2);
                uint16_t p =
                    ((((mp_obj_get_int(value_2[0])) & 0xF8) << 8) | (((mp_obj_get_int(value_2[1])) & 0xFC) << 3) | ((mp_obj_get_int(value_2[2])) >> 3))
                                                                        ;
                ({ __typeof__ (image) _image = (image); __typeof__ (i % image->w) _x = (i % image->w); __typeof__ (i / image->w) _y = (i / image->w); __typeof__ (p) _v = (p); ((uint16_t *) _image->data)[(_image->w * _y) + _x] = _v; });
                return ((mp_obj_t)(((0) << 3) | 6));
            }
            case PIXFORMAT_JPEG:
            case PIXFORMAT_PNG: {
                if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                   ((void)0)
# 643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                   , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
                    mp_bound_slice_t slice;
                    if (!mp_seq_get_fast_slice_indexes(image->size, index, &slice)) {
                        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
                    }
                    if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                       ((void)0)
# 648 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       , 1) && (mp_obj_is_obj(value) && (((mp_obj_base_t *)((void *)(value)))->type == (&mp_type_list))))) {
                        mp_uint_t value_l_len;
                        mp_obj_t *value_l;
                        mp_obj_get_array(value, &value_l_len, &value_l);
                        do { if ((value_l_len == (slice.stop - slice.start)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("cannot grow or shrink image")); } } while (0);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            image->data[slice.start + i] = mp_obj_get_int(value_l[i]);
                        }
                    } else {
                        mp_int_t v = mp_obj_get_int(value);
                        for (mp_uint_t i = 0; i < (slice.stop - slice.start); i++) {
                            image->data[slice.start + i] = v;
                        }
                    }
                    return ((mp_obj_t)(((0) << 3) | 6));
                }
                mp_uint_t i = mp_get_index(self->base.type, image->size, index, 
# 664 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               0
# 664 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                    );
                image->data[i] = mp_obj_get_int(value);
                return ((mp_obj_t)(((0) << 3) | 6));
            }
            default:
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Invalid pixel format"));
        }
    }
    return (((mp_obj_t)((void *)0)));
}

static mp_int_t py_image_get_buffer(mp_obj_t self_in, mp_buffer_info_t *bufinfo, mp_uint_t flags) {
    py_image_obj_t *self = self_in;
    if (flags == (1)) {
        bufinfo->buf = self->_cobj.data;
        bufinfo->len = image_size(&self->_cobj);
        bufinfo->typecode = 'b';
        return 0;
    } else {

        bufinfo->buf = 
# 684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                      ((void *)0)
# 684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                          ;
        bufinfo->len = 0;
        bufinfo->typecode = -1;
        return 1;
    }
}





static mp_obj_t py_image_width(mp_obj_t img_obj) {
    return mp_obj_new_int(((image_t *) py_image_cobj(img_obj))->w);
}
static const mp_obj_fun_builtin_fixed_t py_image_width_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_width};

static mp_obj_t py_image_height(mp_obj_t img_obj) {
    return mp_obj_new_int(((image_t *) py_image_cobj(img_obj))->h);
}
static const mp_obj_fun_builtin_fixed_t py_image_height_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_height};

static mp_obj_t py_image_format(mp_obj_t img_obj) {
    image_t *image = py_image_cobj(img_obj);
    switch (image->pixfmt) {
        case PIXFORMAT_BINARY:
            return mp_obj_new_int(PIXFORMAT_BINARY);
        case PIXFORMAT_GRAYSCALE:
            return mp_obj_new_int(PIXFORMAT_GRAYSCALE);
        case PIXFORMAT_RGB565:
            return mp_obj_new_int(PIXFORMAT_RGB565);
        case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB:
            return mp_obj_new_int(PIXFORMAT_BAYER);
        case PIXFORMAT_YUV422: case PIXFORMAT_YVU422:
            return mp_obj_new_int(PIXFORMAT_YUV422);
        case PIXFORMAT_JPEG:
            return mp_obj_new_int(PIXFORMAT_JPEG);
        case PIXFORMAT_PNG:
            return mp_obj_new_int(PIXFORMAT_PNG);
        default:
            return mp_obj_new_int(PIXFORMAT_INVALID);
    }
}
static const mp_obj_fun_builtin_fixed_t py_image_format_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_format};

static mp_obj_t py_image_size(mp_obj_t img_obj) {
    return mp_obj_new_int(image_size((image_t *) py_image_cobj(img_obj)));
}
static const mp_obj_fun_builtin_fixed_t py_image_size_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_size};

static mp_obj_t py_image_bytearray(mp_obj_t img_obj) {
    image_t *arg_img = (image_t *) py_image_cobj(img_obj);
    return mp_obj_new_bytearray_by_ref(image_size(arg_img), arg_img->data);
}
static const mp_obj_fun_builtin_fixed_t py_image_bytearray_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_bytearray};


static mp_obj_t py_image_to_ndarray(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_dtype, ARG_buffer };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_dtype, MP_ARG_OBJ | MP_ARG_REQUIRED, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_buffer, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };

    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_ANY);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    int len = image->w * image->h;

    int dtype_code;
    int dtype_size;

    if (mp_obj_is_integer(args[ARG_dtype].u_obj)) {
        dtype_code = mp_obj_get_int(args[ARG_dtype].u_obj);
    } else {

        dtype_code = mp_obj_str_get_str(args[ARG_dtype].u_obj)[0];
    }

    switch (dtype_code) {
        case 'b':
        case 'B': {
            dtype_size = 1;
            break;
        }
        case 'f': {
            dtype_size = 4;
            break;
        }
        default: {
            mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unsupported dtype"));
            break;
        }
    }

    size_t shape[(4)];
    size_t strides[(4)];
    int channels;
    int ndim;

    switch (image->pixfmt) {
        case PIXFORMAT_GRAYSCALE: {
            memcpy(shape, (size_t []) {0, 0, image->h, image->w}, sizeof(shape));
            memcpy(strides, (size_t []) {0, 0, image->w * dtype_size, dtype_size}, sizeof(strides));
            channels = 1;
            ndim = 2;
            break;
        }
        case PIXFORMAT_RGB565: {
            memcpy(shape, (size_t []) {0, image->h, image->w, 3}, sizeof(shape));
            memcpy(strides, (size_t []) {0, image->w * dtype_size * 3, dtype_size * 3, dtype_size}, sizeof(strides));
            channels = 3;
            ndim = 3;
            break;
        }
        default: {
            mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unsupported pixformat"));
            break;
        }
    }

    ndarray_obj_t *ndarray;

    if (args[ARG_buffer].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mp_buffer_info_t bufinfo = {0};
        mp_get_buffer_raise(args[ARG_buffer].u_obj, &bufinfo, (2));

        if ((len * dtype_size * channels) > bufinfo.len) {
            mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Buffer is too small"));
        }

        ndarray = (((ndarray_obj_t *)(m_malloc(sizeof(ndarray_obj_t) * (1)))));
        ndarray->base.type = &ulab_ndarray_type;
        ndarray->dtype = dtype_code;
        ndarray->boolean = 0;
        ndarray->ndim = ndim;
        ndarray->len = len * channels;
        ndarray->itemsize = dtype_size;
        memcpy(ndarray->shape, shape, sizeof(shape));
        memcpy(ndarray->strides, strides, sizeof(strides));
        ndarray->array = bufinfo.buf;
        ndarray->origin = bufinfo.buf;
    } else {
        ndarray = ndarray_new_dense_ndarray(ndim, shape, dtype_code);
    }

    int shift = (dtype_code == 'b') ? 0x80808080 : 0x00000000;

    if (image->pixfmt == PIXFORMAT_GRAYSCALE) {
        uint8_t *input_u8 = (uint8_t *) image->data;
        if (dtype_code == 'f') {
            float *output_f32 = (float *) ndarray->array;
            for (int i = 0; i < len; i++) {
                output_f32[i] = input_u8[i];
            }
        } else {
            uint8_t *output_u8 = (uint8_t *) ndarray->array;

            int i = 0;

            for (; i < (len - 3); i += 4) {
                *((uint32_t *) (output_u8 + i)) = *((uint32_t *) (input_u8 + i)) ^ shift;
            }

            for (; i < len; i++) {
                output_u8[i] = input_u8[i] ^ shift;
            }
        }
    } else {
        uint16_t *input_u16 = (uint16_t *) image->data;
        if (dtype_code == 'f') {
            float *output_f32 = (float *) ndarray->array;
            for (int i = 0, j = 0; i < len; i++, j += 3) {
                int pixel = input_u16[i];
                output_f32[j + 0] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); });
                output_f32[j + 1] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); });
                output_f32[j + 2] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); });
            }
        } else {
            uint8_t *output_u8 = (uint8_t *) ndarray->array;
            for (int i = 0, j = 0; i < len; i++, j += 3) {
                int pixel = input_u16[i];
                output_u8[j + 0] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }) ^ shift;
                output_u8[j + 1] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }) ^ shift;
                output_u8[j + 2] = ({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }) ^ shift;
            }
        }
    }

    return ((mp_obj_t)(ndarray));
}
static const mp_obj_fun_builtin_var_t py_image_to_ndarray_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 875 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 875 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_ndarray};


static mp_obj_t py_image_get_pixel(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_UNCOMPRESSED);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 2, &arg_vec);
    int arg_x = mp_obj_get_int(arg_vec[0]);
    int arg_y = mp_obj_get_int(arg_vec[1]);

    
# 886 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 886 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_rgbtuple = py_helper_keyword_int(n_args, args, offset, kw_args,
                                              ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rgbtuple)) << 3) | 2)), arg_img->pixfmt == PIXFORMAT_RGB565);

    if ((!({ __typeof__ (arg_img) _img = (arg_img); __typeof__ (arg_x) _x = (arg_x); (0 <= _x) && (_x < _img->w); })) || (!({ __typeof__ (arg_img) _img = (arg_img); __typeof__ (arg_y) _y = (arg_y); (0 <= _y) && (_y < _img->h); }))) {
        return ((mp_obj_t)(((0) << 3) | 6));
    }

    switch (arg_img->pixfmt) {
        case PIXFORMAT_BINARY: {
            if (arg_rgbtuple) {
                int pixel = ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); (((uint32_t *) _image->data)[(((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1)))))))] >> (_x & ((sizeof(uint32_t) * 8) - 1))) & 1; });
                mp_obj_t pixel_tuple[3];
                pixel_tuple[0] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }));
                pixel_tuple[1] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }));
                pixel_tuple[2] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) ? 127 : -128)) + 128, 0, 0)); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }));
                return mp_obj_new_tuple(3, pixel_tuple);
            } else {
                return mp_obj_new_int(({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); (((uint32_t *) _image->data)[(((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1)))))))] >> (_x & ((sizeof(uint32_t) * 8) - 1))) & 1; }));
            }
        }
        case PIXFORMAT_GRAYSCALE: {
            if (arg_rgbtuple) {
                int pixel = ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; });
                mp_obj_t pixel_tuple[3];
                pixel_tuple[0] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }));
                pixel_tuple[1] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }));
                pixel_tuple[2] = mp_obj_new_int(({ __typeof__ (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)) __pixel = (imlib_yuv_to_rgb((((pixel) - 128)) + 128, 0, 0)); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }));
                return mp_obj_new_tuple(3, pixel_tuple);
            } else {
                return mp_obj_new_int(({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; }));
            }
        }
        case PIXFORMAT_RGB565: {
            if (arg_rgbtuple) {
                int pixel = ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; });
                mp_obj_t pixel_tuple[3];
                pixel_tuple[0] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }));
                pixel_tuple[1] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }));
                pixel_tuple[2] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }));
                return mp_obj_new_tuple(3, pixel_tuple);
            } else {
                return mp_obj_new_int(({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; }));
            }
        }
        case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB:
            if (arg_rgbtuple) {
                uint16_t pixel; imlib_debayer_line(arg_x, arg_x + 1, arg_y, &pixel, PIXFORMAT_RGB565, arg_img);
                mp_obj_t pixel_tuple[3];
                pixel_tuple[0] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }));
                pixel_tuple[1] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }));
                pixel_tuple[2] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }));
                return mp_obj_new_tuple(3, pixel_tuple);
            } else {
                return mp_obj_new_int(({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint8_t *) _image->data)[(_image->w * _y) + _x]; }));
            }
        case PIXFORMAT_YUV422: case PIXFORMAT_YVU422:
            if (arg_rgbtuple) {
                uint16_t pixel; imlib_deyuv_line(arg_x, arg_x + 1, arg_y, &pixel, PIXFORMAT_RGB565, arg_img);
                mp_obj_t pixel_tuple[3];
                pixel_tuple[0] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }));
                pixel_tuple[1] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }));
                pixel_tuple[2] = mp_obj_new_int(({ __typeof__ (pixel) __pixel = (pixel); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }));
                return mp_obj_new_tuple(3, pixel_tuple);
            } else {
                return mp_obj_new_int(({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); ((uint16_t *) _image->data)[(_image->w * _y) + _x]; }));
            }
        default: return ((mp_obj_t)(((0) << 3) | 6));
    }
}
static const mp_obj_fun_builtin_var_t py_image_get_pixel_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 955 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 955 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_get_pixel};

static mp_obj_t py_image_set_pixel(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_UNCOMPRESSED);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 2, &arg_vec);
    int arg_x = mp_obj_get_int(arg_vec[0]);
    int arg_y = mp_obj_get_int(arg_vec[1]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset, kw_args, -1);

    if ((!({ __typeof__ (arg_img) _img = (arg_img); __typeof__ (arg_x) _x = (arg_x); (0 <= _x) && (_x < _img->w); })) || (!({ __typeof__ (arg_img) _img = (arg_img); __typeof__ (arg_y) _y = (arg_y); (0 <= _y) && (_y < _img->h); }))) {
        return args[0];
    }

    switch (arg_img->pixfmt) {
        case PIXFORMAT_BINARY: {
            ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); __typeof__ (arg_c) _v = (arg_c); size_t _i = (((_image->w + ((sizeof(uint32_t) * 8) - 1)) >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))) * _y) + (_x >> (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFFFFFF00000000ULL) ? (32 + ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFFFF0000ULL) ? (16 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xFF00ULL) ? (8 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xF0ULL) ? (4 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 16) & 0x2ULL) ? (2) : 1))))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 32) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 32) & 0x2ULL) ? (2) : 1)))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFFFF0000ULL) ? (16 + ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xFF00ULL) ? (8 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xF0ULL) ? (4 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0xCULL) ? (2 + (((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 8) & 0x2ULL) ? (2) : 1)))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 16) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 16) & 0x2ULL) ? (2) : 1))))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xFF00ULL) ? (8 + ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xF0ULL) ? (4 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0xCULL) ? (2 + ((((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 4) & 0x2ULL) ? (2) : 1))) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 8) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 8) & 0x2ULL) ? (2) : 1)))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xF0ULL) ? (4 + ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0xCULL) ? (2 + (((((((sizeof(uint32_t) * 8) - 1)) >> 4) >> 2) & 0x2ULL) ? (2) : 1)) : ((((((sizeof(uint32_t) * 8) - 1)) >> 4) & 0x2ULL) ? (2) : 1))) : (((((sizeof(uint32_t) * 8) - 1)) & 0xCULL) ? (2 + ((((((sizeof(uint32_t) * 8) - 1)) >> 2) & 0x2ULL) ? (2) : 1)) : (((((sizeof(uint32_t) * 8) - 1)) & 0x2ULL) ? (2) : 1))))))); size_t _j = _x & ((sizeof(uint32_t) * 8) - 1); ((uint32_t *) _image->data)[_i] = (((uint32_t *) _image->data)[_i] & (~(1 << _j))) | ((_v & 1) << _j); });
            return args[0];
        }
        case PIXFORMAT_GRAYSCALE:
        case PIXFORMAT_BAYER_BGGR: case PIXFORMAT_BAYER_GBRG: case PIXFORMAT_BAYER_GRBG: case PIXFORMAT_BAYER_RGGB: {

            ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); __typeof__ (arg_c) _v = (arg_c); ((uint8_t *) _image->data)[(_image->w * _y) + _x] = _v; });
            return args[0];
        }
        case PIXFORMAT_RGB565:
        case PIXFORMAT_YUV422: case PIXFORMAT_YVU422: {

            ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (arg_x) _x = (arg_x); __typeof__ (arg_y) _y = (arg_y); __typeof__ (arg_c) _v = (arg_c); ((uint16_t *) _image->data)[(_image->w * _y) + _x] = _v; });
            return args[0];
        }
        default: return args[0];
    }
}
static const mp_obj_fun_builtin_var_t py_image_set_pixel_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 992 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 992 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_set_pixel};

static mp_obj_t py_image_to(pixformat_t pixfmt, mp_rom_obj_t default_color_palette, 
# 994 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                   _Bool 
# 994 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                        default_copy,
                            size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum {
        ARG_x_scale, ARG_y_scale, ARG_roi, ARG_channel, ARG_alpha, ARG_color_palette, ARG_alpha_palette, ARG_hint,
        ARG_copy, ARG_copy_to_fb, ARG_quality, ARG_encode_for_ide, ARG_subsampling
    };
    const mp_arg_t allowed_args[] = {
        { MP_QSTR_x_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_y_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_roi, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_rgb_channel, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = -1 } },
        { MP_QSTR_alpha, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 255 } },
        { MP_QSTR_color_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = default_color_palette} },
        { MP_QSTR_alpha_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_hint, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_copy, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = default_copy} },
        { MP_QSTR_copy_to_fb, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1010 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0
# 1010 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                           } },
        { MP_QSTR_quality, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 90} },
        { MP_QSTR_encode_for_ide, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1012 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           0
# 1012 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                } },
        { MP_QSTR_subsampling, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = JPEG_SUBSAMPLING_AUTO} },
    };


    image_t *src_img = py_image_cobj(pos_args[0]);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    rectangle_t roi = py_helper_arg_to_roi(args[ARG_roi].u_obj, src_img);

    if (args[ARG_channel].u_int < -1 || args[ARG_channel].u_int > 2) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("RGB channel can be 0, 1, or 2"));
    }

    if (args[ARG_alpha].u_int < 0 || args[ARG_alpha].u_int > 255) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Alpha ranges between 0 and 255"));
    }

    if (args[ARG_quality].u_int < 1 || args[ARG_quality].u_int > 100) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Quality ranges between 0 and 100"));
    }

    float x_scale = 1.0f;
    float y_scale = 1.0f;
    py_helper_arg_to_scale(args[ARG_x_scale].u_obj, args[ARG_y_scale].u_obj, &x_scale, &y_scale);

    const uint16_t *color_palette = py_helper_arg_to_palette(args[ARG_color_palette].u_obj, PIXFORMAT_RGB565);
    const uint8_t *alpha_palette = py_helper_arg_to_palette(args[ARG_alpha_palette].u_obj, PIXFORMAT_GRAYSCALE);

    args[ARG_hint].u_int = (args[ARG_hint].u_int & ~(IMAGE_HINT_CENTER |
                                                     IMAGE_HINT_SCALE_ASPECT_KEEP |
                                                     IMAGE_HINT_SCALE_ASPECT_EXPAND |
                                                     IMAGE_HINT_SCALE_ASPECT_IGNORE)) | IMAGE_HINT_BLACK_BACKGROUND;

    if (args[ARG_copy_to_fb].u_bool) {
        framebuffer_t *fb = framebuffer_get(0);
        framebuffer_update_jpeg_buffer(fb);
    }

    image_t dst_img = {
        .w = fast_floorf(roi.w * x_scale),
        .h = fast_floorf(roi.h * y_scale),
        .pixfmt = (pixfmt == PIXFORMAT_INVALID) ? src_img->pixfmt : pixfmt,
        .size = src_img->size,
        .pixels = 
# 1057 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                 ((void *)0)
# 1057 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                     ,
    };

    
# 1060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        transposed = 
# 1060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                     0
# 1060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                          ;
    if (args[ARG_hint].u_int & IMAGE_HINT_TRANSPOSE) {
        int temp = dst_img.w;
        dst_img.w = dst_img.h;
        dst_img.h = temp;
        transposed = 
# 1065 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                    1
# 1065 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                        ;
    }

    image_t dst_img_tmp = dst_img;

    if ((dst_img.is_bayer || dst_img.is_yuv) &&
        (((x_scale != 1.0f) && (x_scale != -1.0f)) ||
         ((y_scale != 1.0f) && (y_scale != -1.0f)) ||
         (args[ARG_channel].u_int != -1) ||
         (args[ARG_alpha].u_int != 255) ||
         (color_palette != 
# 1075 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                          ((void *)0)
# 1075 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                              ) || (alpha_palette != 
# 1075 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                     ((void *)0)
# 1075 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                         ))) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Only copying/cropping is supported for Bayer/YUV!"));
    }

    if (dst_img.is_bayer) {
        dst_img.pixfmt = imlib_bayer_shift(dst_img.pixfmt, roi.x, roi.y, transposed);
        args[ARG_hint].u_int &= ~(IMAGE_HINT_AREA |
                                  IMAGE_HINT_BICUBIC |
                                  IMAGE_HINT_BILINEAR |
                                  IMAGE_HINT_EXTRACT_RGB_CHANNEL_FIRST |
                                  IMAGE_HINT_APPLY_COLOR_PALETTE_FIRST);
    } else if (dst_img.is_yuv) {
        if (transposed) {
            mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("YUV422 images cannot be tranposed/rotated!"));
        } else {
            dst_img.pixfmt = imlib_yuv_shift(dst_img.pixfmt, roi.x);
            args[ARG_hint].u_int &= ~(IMAGE_HINT_AREA |
                                      IMAGE_HINT_BICUBIC |
                                      IMAGE_HINT_BILINEAR |
                                      IMAGE_HINT_EXTRACT_RGB_CHANNEL_FIRST |
                                      IMAGE_HINT_APPLY_COLOR_PALETTE_FIRST);
        }
    } else if (dst_img.is_compressed) {
        fb_alloc_mark();

        
# 1100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 1100 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            simple = (x_scale == 1.0f) &&
                      (y_scale == 1.0f) &&
                      (roi.x == 0) &&
                      (roi.y == 0) &&
                      (roi.w == src_img->w) &&
                      (roi.h == src_img->h) &&
                      (args[ARG_channel].u_int == -1) &&
                      (args[ARG_alpha].u_int == 255) &&
                      (color_palette == 
# 1108 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                       ((void *)0)
# 1108 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                           ) &&
                      (alpha_palette == 
# 1109 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                       ((void *)0)
# 1109 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                           ) &&
                      (!transposed);

        if ((dst_img.pixfmt != src_img->pixfmt) || (!simple)) {
            image_t temp;
            memcpy(&temp, src_img, sizeof(image_t));

            if (src_img->is_compressed || (!simple)) {
                temp.w = dst_img.w;
                temp.h = dst_img.h;
                temp.pixfmt = src_img->is_color ? PIXFORMAT_RGB565 : PIXFORMAT_GRAYSCALE;
                temp.size = 0;
                temp.data = fb_alloc(image_size(&temp), 0);
                imlib_draw_image(&temp, src_img, 0, 0, x_scale, y_scale, &roi,
                                 args[ARG_channel].u_int, args[ARG_alpha].u_int, color_palette, alpha_palette,
                                 args[ARG_hint].u_int, 
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                      ((void *)0)
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                          , 
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                            ((void *)0)
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                , 
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 1124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
            }

            if (((dst_img.pixfmt == PIXFORMAT_JPEG) &&
                 jpeg_compress(&temp, &dst_img_tmp, args[ARG_quality].u_int, 
# 1128 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 1128 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 , args[ARG_subsampling].u_int))
                || ((dst_img.pixfmt == PIXFORMAT_PNG) && png_compress(&temp, &dst_img_tmp))) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Compression Failed!"));
            }
        } else if (args[ARG_encode_for_ide].u_bool) {
            dst_img_tmp.data = fb_alloc(image_size(&dst_img_tmp), 0);
            memcpy(dst_img_tmp.data, src_img->data, dst_img_tmp.size);
        } else {
            dst_img_tmp.data = src_img->data;
        }

        if (args[ARG_encode_for_ide].u_bool) {
            framebuffer_t *fb = framebuffer_get(0);
            dst_img.size = framebuffer_encoded_size(fb, &dst_img_tmp);
        } else {
            dst_img.size = dst_img_tmp.size;
        }
    }

    uint32_t size = image_size(&dst_img);

    if (args[ARG_copy_to_fb].u_bool) {

        py_helper_set_to_framebuffer(&dst_img);
    } else if (args[ARG_copy].u_bool) {

        image_xalloc(&dst_img, size);
    } else {

        framebuffer_t *fb = framebuffer_get(0);
        
# 1158 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 1158 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            is_fb = py_helper_is_equal_to_framebuffer(src_img);
        size_t buf_size = is_fb ? framebuffer_get_buffer_size(fb) : image_size(src_img);
        do { if (((size <= buf_size)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("The image doesn't fit in the frame buffer!")); } } while (0);
        dst_img.data = src_img->data;
    }

    if (dst_img.is_compressed) {
        if (args[ARG_encode_for_ide].u_bool) {
            framebuffer_t *fb = framebuffer_get(0);
            framebuffer_encode(fb, dst_img.data, &dst_img_tmp);
        } else if (dst_img.data != dst_img_tmp.data) {
            memcpy(dst_img.data, dst_img_tmp.data, dst_img.size);
        }
        fb_alloc_free_till_mark();
    } else {
        fb_alloc_mark();
        imlib_draw_image(&dst_img, src_img, 0, 0, x_scale, y_scale, &roi,
                         args[ARG_channel].u_int, args[ARG_alpha].u_int, color_palette, alpha_palette,
                         args[ARG_hint].u_int, 
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                              ((void *)0)
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  , 
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                    ((void *)0)
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                        , 
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                          ((void *)0)
# 1176 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                              );
        fb_alloc_free_till_mark();
    }

    if ((!args[ARG_copy_to_fb].u_bool) && (!args[ARG_copy].u_bool)) {
        py_helper_update_framebuffer(&dst_img);
        memcpy(src_img, &dst_img, sizeof(image_t));
    }

    return py_image_from_struct(&dst_img);
}

static mp_obj_t py_image_to_bitmap(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_BINARY, ((mp_obj_t)(((0) << 3) | 6)), 
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                     0
# 1189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                          , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_bitmap_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1191 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1191 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_bitmap};

static mp_obj_t py_image_to_grayscale(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_GRAYSCALE, ((mp_obj_t)(((0) << 3) | 6)), 
# 1194 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                        0
# 1194 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                             , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_grayscale_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1196 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_grayscale};

static mp_obj_t py_image_to_rgb565(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_RGB565, ((mp_obj_t)(((0) << 3) | 6)), 
# 1199 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                     0
# 1199 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                          , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_rgb565_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1201 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_rgb565};

static mp_obj_t py_image_to_rainbow(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_RGB565, ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_RAINBOW)) << 1) | 1)), 
# 1204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           0
# 1204 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_rainbow_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1206 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1206 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_rainbow};

static mp_obj_t py_image_to_ironbow(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_RGB565, ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_IRONBOW)) << 1) | 1)), 
# 1209 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           0
# 1209 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_ironbow_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1211 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1211 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_ironbow};
# 1221 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
static mp_obj_t py_image_to_evt_dark(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_RGB565, ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_EVT_DARK)) << 1) | 1)), 
# 1222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 1222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_evt_dark_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1224 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1224 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_evt_dark};

static mp_obj_t py_image_to_evt_light(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_RGB565, ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_EVT_LIGHT)) << 1) | 1)), 
# 1227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                             0
# 1227 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                  , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_evt_light_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1229 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1229 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_evt_light};


static mp_obj_t py_image_to_jpeg(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_JPEG, ((mp_obj_t)(((0) << 3) | 6)), 
# 1233 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                   0
# 1233 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                        , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_jpeg_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1235 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1235 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_jpeg};

static mp_obj_t py_image_to_png(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_PNG, ((mp_obj_t)(((0) << 3) | 6)), 
# 1238 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                  0
# 1238 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                       , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_to_png_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1240 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1240 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_to_png};

static mp_obj_t py_image_copy(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_INVALID, ((mp_obj_t)(((0) << 3) | 6)), 
# 1243 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                      1
# 1243 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                          , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_copy_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1245 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_copy};

static mp_obj_t py_image_crop(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    return py_image_to(PIXFORMAT_INVALID, ((mp_obj_t)(((0) << 3) | 6)), 
# 1248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                      0
# 1248 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                           , n_args, args, kw_args);
}
static const mp_obj_fun_builtin_var_t py_image_crop_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1250 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1250 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_crop};


static mp_obj_t py_image_save(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);
    const char *path = mp_obj_str_get_str(args[1]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 2, kw_args, &roi);

    int arg_q = py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_quality)) << 3) | 2)), 50);
    do { if (((1 <= arg_q) && (arg_q <= 100)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 1 <= quality <= 100!")); } } while (0);

    fb_alloc_mark();
    imlib_save_image(arg_img, path, &roi, arg_q);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_save_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1268 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1268 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_save};


static mp_obj_t py_image_flush(mp_obj_t img_obj) {
    framebuffer_t *fb = framebuffer_get(0);
    framebuffer_update_jpeg_buffer(fb);
    return ((mp_obj_t)(((0) << 3) | 6));
}
static const mp_obj_fun_builtin_fixed_t py_image_flush_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_flush};





static mp_obj_t py_image_clear(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_UNCOMPRESSED);

    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 1286 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 1286 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    if (!arg_msk) {
        memset(arg_img->data, 0, image_size(arg_img));
    } else {
        imlib_zero(arg_img, arg_msk, 
# 1291 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                    0
# 1291 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                         );
    }

    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_clear_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1296 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1296 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_clear};

static mp_obj_t py_image_draw_line(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 4, &arg_vec);
    int arg_x0 = mp_obj_get_int(arg_vec[0]);
    int arg_y0 = mp_obj_get_int(arg_vec[1]);
    int arg_x1 = mp_obj_get_int(arg_vec[2]);
    int arg_y1 = mp_obj_get_int(arg_vec[3]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);

    imlib_draw_line(arg_img, arg_x0, arg_y0, arg_x1, arg_y1, arg_c, arg_thickness);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_line_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_line};

static mp_obj_t py_image_draw_rectangle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 4, &arg_vec);
    int arg_rx = mp_obj_get_int(arg_vec[0]);
    int arg_ry = mp_obj_get_int(arg_vec[1]);
    int arg_rw = mp_obj_get_int(arg_vec[2]);
    int arg_rh = mp_obj_get_int(arg_vec[3]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);
    
# 1332 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1332 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_fill =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fill)) << 3) | 2)), 
# 1333 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                               0
# 1333 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                    );

    imlib_draw_rectangle(arg_img, arg_rx, arg_ry, arg_rw, arg_rh, arg_c, arg_thickness, arg_fill);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_rectangle_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_rectangle};

static mp_obj_t py_image_draw_circle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 3, &arg_vec);
    int arg_cx = mp_obj_get_int(arg_vec[0]);
    int arg_cy = mp_obj_get_int(arg_vec[1]);
    int arg_cr = mp_obj_get_int(arg_vec[2]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);
    
# 1353 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1353 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_fill =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fill)) << 3) | 2)), 
# 1354 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                               0
# 1354 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                    );

    imlib_draw_circle(arg_img, arg_cx, arg_cy, arg_cr, arg_c, arg_thickness, arg_fill);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_circle_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1359 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1359 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_circle};

static mp_obj_t py_image_draw_ellipse(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 5, &arg_vec);
    int arg_cx = mp_obj_get_int(arg_vec[0]);
    int arg_cy = mp_obj_get_int(arg_vec[1]);
    int arg_rx = mp_obj_get_int(arg_vec[2]);
    int arg_ry = mp_obj_get_int(arg_vec[3]);
    int arg_r = mp_obj_get_int(arg_vec[4]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 1, kw_args, -1);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);
    
# 1376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_fill =
        py_helper_keyword_int(n_args, args, offset + 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fill)) << 3) | 2)), 
# 1377 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                               0
# 1377 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                    );

    imlib_draw_ellipse(arg_img, arg_cx, arg_cy, arg_rx, arg_ry, arg_r, arg_c, arg_thickness, arg_fill);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_ellipse_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1382 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1382 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_ellipse};

static mp_obj_t py_image_draw_string(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 3, &arg_vec);
    int arg_x_off = mp_obj_get_int(arg_vec[0]);
    int arg_y_off = mp_obj_get_int(arg_vec[1]);
    const char *arg_str = mp_obj_str_get_str(arg_vec[2]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    float arg_scale =
        py_helper_keyword_float(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_scale)) << 3) | 2)), 1.0);
    do { if ((0 < arg_scale) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 0 < scale!")); } } while (0);
    int arg_x_spacing =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_spacing)) << 3) | 2)), 0);
    int arg_y_spacing =
        py_helper_keyword_int(n_args, args, offset + 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_spacing)) << 3) | 2)), 0);
    
# 1402 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1402 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_mono_space =
        py_helper_keyword_int(n_args, args, offset + 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mono_space)) << 3) | 2)), 
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                     1
# 1403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                         );
    int arg_char_rotation =
        py_helper_keyword_int(n_args, args, offset + 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_char_rotation)) << 3) | 2)), 0);
    int arg_char_hmirror =
        py_helper_keyword_int(n_args, args, offset + 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_char_hmirror)) << 3) | 2)), 
# 1407 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                       0
# 1407 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                            );
    int arg_char_vflip =
        py_helper_keyword_int(n_args, args, offset + 7, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_char_vflip)) << 3) | 2)), 
# 1409 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                     0
# 1409 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                          );
    int arg_string_rotation =
        py_helper_keyword_int(n_args, args, offset + 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_string_rotation)) << 3) | 2)), 0);
    int arg_string_hmirror =
        py_helper_keyword_int(n_args, args, offset + 9, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_string_hmirror)) << 3) | 2)), 
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                         0
# 1413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                              );
    int arg_string_vflip =
        py_helper_keyword_int(n_args, args, offset + 10, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_string_vflip)) << 3) | 2)), 
# 1415 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                        0
# 1415 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                             );

    imlib_draw_string(arg_img, arg_x_off, arg_y_off, arg_str,
                      arg_c, arg_scale, arg_x_spacing, arg_y_spacing, arg_mono_space,
                      arg_char_rotation, arg_char_hmirror, arg_char_vflip,
                      arg_string_rotation, arg_string_hmirror, arg_string_vflip);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_string_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1423 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1423 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_string};

static mp_obj_t py_image_draw_cross(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 2, &arg_vec);
    int arg_x = mp_obj_get_int(arg_vec[0]);
    int arg_y = mp_obj_get_int(arg_vec[1]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    int arg_s =
        py_helper_keyword_int(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_size)) << 3) | 2)), 5);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);

    imlib_draw_line(arg_img, arg_x - arg_s, arg_y, arg_x + arg_s, arg_y, arg_c, arg_thickness);
    imlib_draw_line(arg_img, arg_x, arg_y - arg_s, arg_x, arg_y + arg_s, arg_c, arg_thickness);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_cross_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1444 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1444 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_cross};

static mp_obj_t py_image_draw_arrow(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 4, &arg_vec);
    int arg_x0 = mp_obj_get_int(arg_vec[0]);
    int arg_y0 = mp_obj_get_int(arg_vec[1]);
    int arg_x1 = mp_obj_get_int(arg_vec[2]);
    int arg_y1 = mp_obj_get_int(arg_vec[3]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 0, kw_args, -1);
    int arg_s =
        py_helper_keyword_int(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_size)) << 3) | 2)), 10);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, offset + 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);

    int dx = (arg_x1 - arg_x0);
    int dy = (arg_y1 - arg_y0);
    float length = fast_sqrtf((dx * dx) + (dy * dy));

    float ux = ({ __typeof__ (dx) _a = (dx); __typeof__ (length) _b = (length); _b ? (_a / _b) : 0; });
    float uy = ({ __typeof__ (dy) _a = (dy); __typeof__ (length) _b = (length); _b ? (_a / _b) : 0; });
    float vx = -uy;
    float vy = ux;

    int a0x = fast_roundf(arg_x1 - (arg_s * ux) + (arg_s * vx * 0.5));
    int a0y = fast_roundf(arg_y1 - (arg_s * uy) + (arg_s * vy * 0.5));
    int a1x = fast_roundf(arg_x1 - (arg_s * ux) - (arg_s * vx * 0.5));
    int a1y = fast_roundf(arg_y1 - (arg_s * uy) - (arg_s * vy * 0.5));

    imlib_draw_line(arg_img, arg_x0, arg_y0, arg_x1, arg_y1, arg_c, arg_thickness);
    imlib_draw_line(arg_img, arg_x1, arg_y1, a0x, a0y, arg_c, arg_thickness);
    imlib_draw_line(arg_img, arg_x1, arg_y1, a1x, a1y, arg_c, arg_thickness);
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_arrow_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1482 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1482 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_arrow};

static mp_obj_t py_image_draw_edges(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(args[1], 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, 2, kw_args, -1);
    int arg_s =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_size)) << 3) | 2)), 0);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);
    
# 1510 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1510 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_fill =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fill)) << 3) | 2)), 
# 1511 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                      0
# 1511 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );

    imlib_draw_line(arg_img, x0, y0, x1, y1, arg_c, arg_thickness);
    imlib_draw_line(arg_img, x1, y1, x2, y2, arg_c, arg_thickness);
    imlib_draw_line(arg_img, x2, y2, x3, y3, arg_c, arg_thickness);
    imlib_draw_line(arg_img, x3, y3, x0, y0, arg_c, arg_thickness);

    if (arg_s >= 1) {
        imlib_draw_circle(arg_img, x0, y0, arg_s, arg_c, arg_thickness, arg_fill);
        imlib_draw_circle(arg_img, x1, y1, arg_s, arg_c, arg_thickness, arg_fill);
        imlib_draw_circle(arg_img, x2, y2, arg_s, arg_c, arg_thickness, arg_fill);
        imlib_draw_circle(arg_img, x3, y3, arg_s, arg_c, arg_thickness, arg_fill);
    }

    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_edges_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1527 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_edges};

static mp_obj_t py_image_draw_keypoints(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, 2, kw_args, -1);
    int arg_s =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_size)) << 3) | 2)), 10);
    int arg_thickness =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_thickness)) << 3) | 2)), 1);
    
# 1538 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1538 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_fill =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fill)) << 3) | 2)), 
# 1539 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                      0
# 1539 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                           );

    if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_bool)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_int)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_str)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_NoneType)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , 1) && (mp_obj_is_obj(args[1]) && (((mp_obj_base_t *)((void *)(args[1])))->type == (&mp_type_tuple)))) || (( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                                  ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                                  ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                                  ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                                  ((void)0)
# 1541 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  , 1) && (mp_obj_is_obj(args[1]) && (((mp_obj_base_t *)((void *)(args[1])))->type == (&mp_type_list))))) {
        size_t len;
        mp_obj_t *items;
        mp_obj_get_array(args[1], &len, &items);
        for (size_t i = 0; i < len; i++) {
            mp_obj_t *tuple;
            mp_obj_get_array_fixed_n(items[i], 3, &tuple);
            int cx = mp_obj_get_int(tuple[0]);
            int cy = mp_obj_get_int(tuple[1]);
            int angle = mp_obj_get_int(tuple[2]) % 360;
            int si = (int) (sin_table[angle] * arg_s);
            int co = (int) (cos_table[angle] * arg_s);
            imlib_draw_line(arg_img, cx, cy, cx + co, cy + si, arg_c, arg_thickness);
            imlib_draw_circle(arg_img, cx, cy, (arg_s - 2) / 2, arg_c, arg_thickness, arg_fill);
        }
    } else {

        py_kp_obj_t *kpts_obj = py_kpts_obj(args[1]);
        for (int i = 0, ii = array_length(kpts_obj->kpts); i < ii; i++) {
            kp_t *kp = array_at(kpts_obj->kpts, i);
            int cx = kp->x;
            int cy = kp->y;
            int angle = kp->angle % 360;
            int si = (int) (sin_table[angle] * arg_s);
            int co = (int) (cos_table[angle] * arg_s);
            imlib_draw_line(arg_img, cx, cy, cx + co, cy + si, arg_c, arg_thickness);
            imlib_draw_circle(arg_img, cx, cy, (arg_s - 2) / 2, arg_c, arg_thickness, arg_fill);
        }



    }

    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_draw_keypoints_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_keypoints};

static mp_obj_t py_image_mask_rectangle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_rx;
    int arg_ry;
    int arg_rw;
    int arg_rh;

    if (n_args > 1) {
        const mp_obj_t *arg_vec;
        py_helper_consume_array(n_args, args, 1, 4, &arg_vec);
        arg_rx = mp_obj_get_int(arg_vec[0]);
        arg_ry = mp_obj_get_int(arg_vec[1]);
        arg_rw = mp_obj_get_int(arg_vec[2]);
        arg_rh = mp_obj_get_int(arg_vec[3]);
    } else {
        arg_rx = arg_img->w / 4;
        arg_ry = arg_img->h / 4;
        arg_rw = arg_img->w / 2;
        arg_rh = arg_img->h / 2;
    }

    fb_alloc_mark();
    image_t temp;
    temp.w = arg_img->w;
    temp.h = arg_img->h;
    temp.pixfmt = PIXFORMAT_BINARY;
    temp.data = fb_alloc0(image_size(&temp), 0);

    imlib_draw_rectangle(&temp, arg_rx, arg_ry, arg_rw, arg_rh, -1, 0, 
# 1606 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      1
# 1606 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                          );
    imlib_zero(arg_img, &temp, 
# 1607 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              1
# 1607 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  );

    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_mask_rectangle_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1612 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1612 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_mask_rectangle};

static mp_obj_t py_image_mask_circle(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_cx;
    int arg_cy;
    int arg_cr;

    if (n_args > 1) {
        const mp_obj_t *arg_vec;
        py_helper_consume_array(n_args, args, 1, 3, &arg_vec);
        arg_cx = mp_obj_get_int(arg_vec[0]);
        arg_cy = mp_obj_get_int(arg_vec[1]);
        arg_cr = mp_obj_get_int(arg_vec[2]);
    } else {
        arg_cx = arg_img->w / 2;
        arg_cy = arg_img->h / 2;
        arg_cr = ({__typeof__ (arg_img->w) _a = (arg_img->w); __typeof__ (arg_img->h) _b = (arg_img->h); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); }) / 2;
    }

    fb_alloc_mark();
    image_t temp;
    temp.w = arg_img->w;
    temp.h = arg_img->h;
    temp.pixfmt = PIXFORMAT_BINARY;
    temp.data = fb_alloc0(image_size(&temp), 0);

    imlib_draw_circle(&temp, arg_cx, arg_cy, arg_cr, -1, 0, 
# 1639 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                           1
# 1639 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                               );
    imlib_zero(arg_img, &temp, 
# 1640 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              1
# 1640 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  );

    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_mask_circle_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1645 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1645 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_mask_circle};

static mp_obj_t py_image_mask_ellipse(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_cx;
    int arg_cy;
    int arg_rx;
    int arg_ry;
    int arg_r;

    if (n_args > 1) {
        const mp_obj_t *arg_vec;
        py_helper_consume_array(n_args, args, 1, 5, &arg_vec);
        arg_cx = mp_obj_get_int(arg_vec[0]);
        arg_cy = mp_obj_get_int(arg_vec[1]);
        arg_rx = mp_obj_get_int(arg_vec[2]);
        arg_ry = mp_obj_get_int(arg_vec[3]);
        arg_r = mp_obj_get_int(arg_vec[4]);
    } else {
        arg_cx = arg_img->w / 2;
        arg_cy = arg_img->h / 2;
        arg_rx = arg_img->w / 2;
        arg_ry = arg_img->h / 2;
        arg_r = 0;
    }

    fb_alloc_mark();
    image_t temp;
    temp.w = arg_img->w;
    temp.h = arg_img->h;
    temp.pixfmt = PIXFORMAT_BINARY;
    temp.data = fb_alloc0(image_size(&temp), 0);

    imlib_draw_ellipse(&temp, arg_cx, arg_cy, arg_rx, arg_ry, arg_r, -1, 0, 
# 1678 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           1
# 1678 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                               );
    imlib_zero(arg_img, &temp, 
# 1679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              1
# 1679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  );

    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_mask_ellipse_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_mask_ellipse};


static mp_obj_t py_image_flood_fill(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    const mp_obj_t *arg_vec;
    uint offset = py_helper_consume_array(n_args, args, 1, 2, &arg_vec);
    int arg_x_off = mp_obj_get_int(arg_vec[0]);
    int arg_y_off = mp_obj_get_int(arg_vec[1]);

    float arg_seed_threshold =
        py_helper_keyword_float(n_args, args, offset + 0, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_seed_threshold)) << 3) | 2)), 0.05);
    do { if (((0.0f <= arg_seed_threshold) && (arg_seed_threshold <= 1.0f)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 0.0 <= seed_threshold <= 1.0!")); } } while (0)
                                                              ;
    float arg_floating_threshold =
        py_helper_keyword_float(n_args, args, offset + 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_floating_threshold)) << 3) | 2)), 0.05);
    do { if (((0.0f <= arg_floating_threshold) && (arg_floating_threshold <= 1.0f)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 0.0 <= floating_threshold <= 1.0!")); } } while (0)
                                                                  ;
    int arg_c =
        py_helper_keyword_color(arg_img, n_args, args, offset + 2, kw_args, -1);
    
# 1705 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1705 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_float(n_args, args, offset + 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 1706 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                   0
# 1706 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                        );
    
# 1707 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1707 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        clear_background =
        py_helper_keyword_float(n_args, args, offset + 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_clear_background)) << 3) | 2)), 
# 1708 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                             0
# 1708 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                                  );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, offset + 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 1710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                    ((void *)0)
# 1710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                        );

    fb_alloc_mark();
    imlib_flood_fill(arg_img, arg_x_off, arg_y_off,
                     arg_seed_threshold, arg_floating_threshold,
                     arg_c, arg_invert, clear_background, arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_flood_fill_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1719 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1719 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_flood_fill};


static mp_obj_t py_image_line_op(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args,
                                 imlib_draw_row_callback_t callback) {
    enum {
        ARG_image, ARG_x, ARG_y, ARG_x_scale, ARG_y_scale, ARG_roi,
        ARG_channel, ARG_alpha, ARG_color_palette, ARG_alpha_palette, ARG_hint, ARG_mask
    };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_image, MP_ARG_OBJ | MP_ARG_REQUIRED, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_x, MP_ARG_INT, {.u_int = 0 } },
        { MP_QSTR_y, MP_ARG_INT, {.u_int = 0 } },
        { MP_QSTR_x_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_y_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_roi, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_rgb_channel, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = -1 } },
        { MP_QSTR_alpha, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 255 } },
        { MP_QSTR_color_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_alpha_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_hint, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();
    uint32_t data;
    image_t temp = {.w = 1, .h = 1, .pixfmt = image->pixfmt, .data = (uint8_t *) &data}, *other = &temp;


    if (mp_obj_is_integer(args[ARG_image].u_obj)) {
        data = mp_obj_get_int(args[ARG_image].u_obj);
        args[ARG_hint].u_int |= IMAGE_HINT_SCALE_ASPECT_IGNORE;

    } else if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_bool)])), 
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_int)])), 
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_str)])), 
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_tuple) != &mp_type_NoneType)])), 
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1757 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , 1) && (mp_obj_is_obj(args[ARG_image].u_obj) && (((mp_obj_base_t *)((void *)(args[ARG_image].u_obj)))->type == (&mp_type_tuple)))) ||
               (( ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_bool)])), 
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_int)])), 
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_str)])), 
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&mp_type_list) != &mp_type_NoneType)])), 
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 1758 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , 1) && (mp_obj_is_obj(args[ARG_image].u_obj) && (((mp_obj_base_t *)((void *)(args[ARG_image].u_obj)))->type == (&mp_type_list))))) {
        mp_obj_t *rgb888;
        mp_obj_get_array_fixed_n(args[ARG_image].u_obj, 3, &rgb888);
        int r = ({__typeof__ (({__typeof__ ((mp_obj_get_int(rgb888[0]))) _a = ((mp_obj_get_int(rgb888[0]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })) _a = (({__typeof__ ((mp_obj_get_int(rgb888[0]))) _a = ((mp_obj_get_int(rgb888[0]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })); __typeof__ ((0)) _b = ((0)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); });
        int g = ({__typeof__ (({__typeof__ ((mp_obj_get_int(rgb888[1]))) _a = ((mp_obj_get_int(rgb888[1]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })) _a = (({__typeof__ ((mp_obj_get_int(rgb888[1]))) _a = ((mp_obj_get_int(rgb888[1]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })); __typeof__ ((0)) _b = ((0)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); });
        int b = ({__typeof__ (({__typeof__ ((mp_obj_get_int(rgb888[2]))) _a = ((mp_obj_get_int(rgb888[2]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })) _a = (({__typeof__ ((mp_obj_get_int(rgb888[2]))) _a = ((mp_obj_get_int(rgb888[2]))); __typeof__ ((255)) _b = ((255)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })); __typeof__ ((0)) _b = ((0)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); });
        switch (image->pixfmt) {
            case PIXFORMAT_BINARY: {
                data = ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7) > 127;
                break;
            }
            case PIXFORMAT_GRAYSCALE: {
                data = ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7);
                break;
            }
            case PIXFORMAT_RGB565: {
                data = ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3));
                break;
            }
            default: {
                break;
            }
        }
        args[ARG_hint].u_int |= IMAGE_HINT_SCALE_ASPECT_IGNORE;
    } else {
        other = py_helper_arg_to_image(args[ARG_image].u_obj, ARG_IMAGE_ANY | ARG_IMAGE_ALLOC);
    }

    rectangle_t roi = py_helper_arg_to_roi(args[ARG_roi].u_obj, other);

    if (args[ARG_channel].u_int < -1 || args[ARG_channel].u_int > 2) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("RGB channel can be 0, 1, or 2"));
    }

    if (args[ARG_alpha].u_int < 0 || args[ARG_alpha].u_int > 255) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Alpha ranges between 0 and 255"));
    }

    float x_scale = 1.0f;
    float y_scale = 1.0f;
    py_helper_arg_to_scale(args[ARG_x_scale].u_obj, args[ARG_y_scale].u_obj, &x_scale, &y_scale);

    const uint16_t *color_palette = py_helper_arg_to_palette(args[ARG_color_palette].u_obj, PIXFORMAT_RGB565);
    const uint8_t *alpha_palette = py_helper_arg_to_palette(args[ARG_alpha_palette].u_obj, PIXFORMAT_GRAYSCALE);

    image_t *mask = 
# 1803 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 1803 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    if ((!callback) && mask) {
        callback = imlib_mask_line_op;
    }

    void *dst_row_override = 
# 1812 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                            ((void *)0)
# 1812 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                ;
    if (callback) {
        dst_row_override = fb_alloc0(image_line_size(image), 4);

        args[ARG_hint].u_int |= IMAGE_HINT_BLACK_BACKGROUND;
    }

    imlib_draw_image(image, other, args[ARG_x].u_int, args[ARG_y].u_int, x_scale, y_scale, &roi,
                     args[ARG_channel].u_int, args[ARG_alpha].u_int, color_palette, alpha_palette,
                     args[ARG_hint].u_int, callback, mask, dst_row_override);

    fb_alloc_free_till_mark();
    return pos_args[0];
}

static mp_obj_t py_image_draw_image(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, 
# 1828 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                      ((void *)0)
# 1828 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                          );
}
static const mp_obj_fun_builtin_var_t py_image_draw_image_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1830 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1830 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_draw_image};






static mp_obj_t py_awb(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_max };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_max, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1840 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                               0
# 1840 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                    } },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_UNCOMPRESSED);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    uint32_t r_out, g_out, b_out;

    if (args[ARG_max].u_bool) {
        imlib_awb_rgb_max(image, &r_out, &g_out, &b_out);
    } else {
        imlib_awb_rgb_avg(image, &r_out, &g_out, &b_out);
    }

    imlib_awb(image, r_out, g_out, b_out);
    return pos_args[0];
}
static const mp_obj_fun_builtin_var_t py_awb_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1859 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1859 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_awb};

static mp_obj_t py_ccm(mp_obj_t img_obj, mp_obj_t ccm_obj) {
    image_t *image = py_helper_arg_to_image(img_obj, ARG_IMAGE_MUTABLE);

    float ccm[12] = {};
    
# 1865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 1865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        offset = 
# 1865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                 0
# 1865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                      ;

    size_t len;
    mp_obj_t *items;
    mp_obj_get_array(ccm_obj, &len, &items);





    if ((len == 3) || (len == 4)) {
        for (size_t i = 0; i < 3; i++) {
            size_t row_len;
            mp_obj_t *row_items;
            mp_obj_get_array(items[i], &row_len, &row_items);
            offset = offset || (row_len == 4);
            if ((row_len == 3) || (row_len == 4)) {
                for (size_t j = 0; j < row_len; j++) {
                    ccm[(i * 4) + j] = mp_obj_get_float(row_items[j]);
                }
            } else {
                mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unexpected matrix dimensions!"));
            }
        }

    } else if (len == 9) {
        for (size_t i = 0; i < 3; i++) {
            for (size_t j = 0; j < 3; j++) {
                ccm[(i * 4) + j] = mp_obj_get_float(items[(i * 3) + j]);
            }
        }


    } else if (len == 12 || len == 16) {
        offset = 
# 1899 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                1
# 1899 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                    ;
        for (size_t i = 0; i < 12; i++) {
            ccm[i] = mp_obj_get_float(items[i]);
        }
    } else {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unexpected matrix dimensions!"));
    }

    imlib_ccm(image, ccm, offset);
    return img_obj;
}
static const mp_obj_fun_builtin_fixed_t py_ccm_obj = {{&mp_type_fun_builtin_2}, .fun._2 = py_ccm};

static mp_obj_t py_image_gamma(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_gamma, ARG_contrast, ARG_brightness };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_gamma, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_contrast, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_brightness, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_UNCOMPRESSED);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    float gamma = py_helper_arg_to_float(args[ARG_gamma].u_obj, 1.0f);
    float contrast = py_helper_arg_to_float(args[ARG_contrast].u_obj, 1.0f);
    float brightness = py_helper_arg_to_float(args[ARG_brightness].u_obj, 0.0f);

    fb_alloc_mark();
    imlib_gamma(image, gamma, contrast, brightness);
    fb_alloc_free_till_mark();
    return pos_args[0];
}
static const mp_obj_fun_builtin_var_t py_image_gamma_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 1934 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 1934 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_gamma};
# 1943 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
static mp_obj_t py_image_binary(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_thresholds, ARG_invert, ARG_zero, ARG_mask, ARG_to_bitmap, ARG_copy };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_thresholds, MP_ARG_OBJ | MP_ARG_REQUIRED, },
        { MP_QSTR_invert, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1947 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  0
# 1947 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                       } },
        { MP_QSTR_zero, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1948 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                0
# 1948 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                     } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_to_bitmap, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1950 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                     0
# 1950 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                          } },
        { MP_QSTR_copy, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 1951 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                0
# 1951 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                     } },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    if (args[ARG_to_bitmap].u_bool && (image->pixfmt != PIXFORMAT_BINARY) &&
        (args[ARG_zero].u_bool || (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))))) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Incompatible arguments!"));
    }

    if (args[ARG_to_bitmap].u_bool && (!args[ARG_copy].u_bool)) {
        switch (image->pixfmt) {
            case PIXFORMAT_GRAYSCALE: {
                do { if (((image->w >= 4)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert to bitmap in place!")); } } while (0);
                break;
            }
            case PIXFORMAT_RGB565: {
                do { if (((image->w >= 2)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert to bitmap in place!")); } } while (0);
                break;
            }
            default: {
                break;
            }
        }
    }

    list_t thresholds;
    list_init(&thresholds, sizeof(color_thresholds_list_lnk_data_t));
    py_helper_arg_to_thresholds(args[ARG_thresholds].u_obj, &thresholds);

    image_t out;
    out.w = image->w;
    out.h = image->h;
    out.pixfmt = args[ARG_to_bitmap].u_bool ? PIXFORMAT_BINARY : image->pixfmt;

    if (args[ARG_copy].u_bool) {
        image_xalloc(&out, image_size(&out));
    } else {
        out.data = image->data;
    }

    fb_alloc_mark();
    image_t *mask = 
# 1996 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 1996 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    imlib_binary(&out, image, &thresholds, args[ARG_invert].u_bool, args[ARG_zero].u_bool, mask);
    fb_alloc_free_till_mark();

    list_free(&thresholds);

    if (args[ARG_to_bitmap].u_bool && (!args[ARG_copy].u_bool)) {
        image->pixfmt = PIXFORMAT_BINARY;
        py_helper_update_framebuffer(&out);
    }

    return py_image_from_struct(&out);
}
static const mp_obj_fun_builtin_var_t py_image_binary_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2013 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2013 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_binary};

static mp_obj_t py_image_invert(mp_obj_t img_obj) {
    imlib_invert(py_helper_arg_to_image(img_obj, ARG_IMAGE_MUTABLE));
    return img_obj;
}
static const mp_obj_fun_builtin_fixed_t py_image_invert_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_invert};

static mp_obj_t py_image_b_and(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_and_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_and_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2024 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2024 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_and};

static mp_obj_t py_image_b_nand(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_nand_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_nand_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2029 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2029 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_nand};

static mp_obj_t py_image_b_or(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_or_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_or_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2034 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2034 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_or};

static mp_obj_t py_image_b_nor(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_nor_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_nor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2039 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2039 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_nor};

static mp_obj_t py_image_b_xor(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_xor_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_xor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2044 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2044 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_xor};

static mp_obj_t py_image_b_xnor(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_b_xnor_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_b_xnor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2049 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2049 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_b_xnor};

static mp_obj_t py_image_binary_morph_op(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args,
                                         binary_morph_op_t op) {
    enum { ARG_threshold, ARG_mask };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_threshold, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    int ksize = py_helper_arg_to_ksize(pos_args[1]);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 2, pos_args + 2, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();
    image_t *mask = 
# 2066 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 2066 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    op(image, ksize, args[ARG_threshold].u_int, mask);
    fb_alloc_free_till_mark();
    return pos_args[0];
}

static mp_obj_t py_image_erode(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_erode);
}
static const mp_obj_fun_builtin_var_t py_image_erode_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_erode};

static mp_obj_t py_image_dilate(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_dilate);
}
static const mp_obj_fun_builtin_var_t py_image_dilate_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_dilate};

static mp_obj_t py_image_open(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_open);
}
static const mp_obj_fun_builtin_var_t py_image_open_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2089 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2089 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_open};

static mp_obj_t py_image_close(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_close);
}
static const mp_obj_fun_builtin_var_t py_image_close_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_close};







static mp_obj_t py_image_add(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_add_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_add_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2105 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_add};

static mp_obj_t py_image_sub(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_sub_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_sub_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2110 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_sub};

static mp_obj_t py_image_rsub(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_rsub_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_rsub_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2115 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rsub};

static mp_obj_t py_image_min(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_min_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_min_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2120 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2120 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_min};

static mp_obj_t py_image_max(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_max_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_max_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_max};

static mp_obj_t py_image_difference(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_line_op(n_args, pos_args, kw_args, imlib_difference_line_op);
}
static const mp_obj_fun_builtin_var_t py_image_difference_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2130 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2130 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_difference};


static 
# 2133 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      _Bool 
# 2133 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           pixels_differ(int pixel1, int pixel2, int pixel_threshold) {
    if (abs(pixel1 - pixel2) >= pixel_threshold) {
        return 
# 2135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
              1
# 2135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                  ;
    }
    return 
# 2137 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
          0
# 2137 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
               ;
}

static 
# 2140 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      _Bool 
# 2140 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           grayscale_pixels_differ(uint8_t *row_ptr1, uint8_t *row_ptr2, int pixel, int width, int neighbors, int pixel_threshold) {
    int pixels = 0;

    for (int x = 1; x <= neighbors; x++) {
        
# 2144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 2144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            left_changed = 
# 2144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                           0
# 2144 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                ;
        int left_pixel = pixel - x;
        if (left_pixel >= 0) {
            int pixel1 = ({ __typeof__ (row_ptr1) _row_ptr = (row_ptr1); __typeof__ (left_pixel) _x = (left_pixel); _row_ptr[_x]; });
            int pixel2 = ({ __typeof__ (row_ptr2) _row_ptr = (row_ptr2); __typeof__ (left_pixel) _x = (left_pixel); _row_ptr[_x]; });
            if (pixels_differ(pixel1, pixel2, pixel_threshold)) {
                pixels++;
                left_changed = 
# 2151 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              1
# 2151 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  ;
            }
        }

        
# 2155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 2155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            right_changed = 
# 2155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                            0
# 2155 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                 ;
        int right_pixel = pixel + x;
        if (right_pixel <= width) {
            int pixel1 = ({ __typeof__ (row_ptr1) _row_ptr = (row_ptr1); __typeof__ (right_pixel) _x = (right_pixel); _row_ptr[_x]; });
            int pixel2 = ({ __typeof__ (row_ptr2) _row_ptr = (row_ptr2); __typeof__ (right_pixel) _x = (right_pixel); _row_ptr[_x]; });
            if (pixels_differ(pixel1, pixel2, pixel_threshold)) {
                pixels++;
                right_changed = 
# 2162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                               1
# 2162 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                   ;
            }
        }

        if (pixels >= neighbors) {
            return 
# 2167 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                  1
# 2167 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                      ;
        }

        if (!left_changed && !right_changed) {
            break;
        }
    }

    return 
# 2175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
          0
# 2175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
               ;
}

static 
# 2178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      _Bool 
# 2178 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           rgb565_pixels_differ(uint16_t *row_ptr1, uint16_t *row_ptr2, int pixel, int width, int neighbors, int pixel_threshold) {
    int pixels = 0;

    for (int x = 1; x <= neighbors; x++) {
        
# 2182 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 2182 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            left_changed = 
# 2182 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                           0
# 2182 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                ;
        int left_pixel = pixel - x;
        if (left_pixel >= 0) {
            int pixel1 = ({ __typeof__ (row_ptr1) _row_ptr = (row_ptr1); __typeof__ (left_pixel) _x = (left_pixel); _row_ptr[_x]; });
            int pixel2 = ({ __typeof__ (row_ptr2) _row_ptr = (row_ptr2); __typeof__ (left_pixel) _x = (left_pixel); _row_ptr[_x]; });
            if (pixels_differ(pixel1, pixel2, pixel_threshold)) {
                pixels++;
                left_changed = 
# 2189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              1
# 2189 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  ;
            }
        }

        
# 2193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
       _Bool 
# 2193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
            right_changed = 
# 2193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                            0
# 2193 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                 ;
        int right_pixel = pixel + x;
        if (right_pixel <= width) {
            int pixel1 = ({ __typeof__ (row_ptr1) _row_ptr = (row_ptr1); __typeof__ (right_pixel) _x = (right_pixel); _row_ptr[_x]; });
            int pixel2 = ({ __typeof__ (row_ptr2) _row_ptr = (row_ptr2); __typeof__ (right_pixel) _x = (right_pixel); _row_ptr[_x]; });
            if (pixels_differ(pixel1, pixel2, pixel_threshold)) {
                pixels++;
                right_changed = 
# 2200 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                               1
# 2200 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                   ;
            }
        }

        if (pixels >= neighbors) {
            return 
# 2205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                  1
# 2205 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                      ;
        }

        if (!left_changed && !right_changed) {
            break;
        }
    }

    return 
# 2213 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
          0
# 2213 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
               ;
}

static mp_obj_t py_image_variation(uint n_args, const mp_obj_t *args, mp_map_t *kw_args)
{
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2222 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();

    int pixel_threshold = mp_obj_get_int(args[2]);
    int neighbors = mp_obj_get_int(args[3]);
    int global_variances = 0;
    int regional_variances = 0;

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 4, kw_args, &roi);

    switch(arg_img->pixfmt) {
        case PIXFORMAT_GRAYSCALE: {
            for (int y = 0, yy = arg_img->h; y < yy; y++) {
                uint8_t *row_ptr1 = ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (y) _y = (y); ((uint8_t *) _image->data) + (_image->w * _y); });
                uint8_t *row_ptr2 = ({ __typeof__ (arg_msk) _image = (arg_msk); __typeof__ (y) _y = (y); ((uint8_t *) _image->data) + (_image->w * _y); });

                for (int x = 0, xx = arg_img->w; x < xx; x++) {
                    if (grayscale_pixels_differ(row_ptr1, row_ptr2, x, arg_img->w, neighbors, pixel_threshold)) {
                        global_variances++;
                        if (y >= roi.y && y <= roi.y + roi.h && x >= roi.x && x <= roi.x + roi.w) {
                            regional_variances++;
                        }
                    }
                }
            }
            break;
        }
        case PIXFORMAT_RGB565: {
            for (int y = 0, yy = arg_img->h; y < yy; y++) {
                uint16_t *row_ptr1 = ({ __typeof__ (arg_img) _image = (arg_img); __typeof__ (y) _y = (y); ((uint16_t *) _image->data) + (_image->w * _y); });
                uint16_t *row_ptr2 = ({ __typeof__ (arg_msk) _image = (arg_msk); __typeof__ (y) _y = (y); ((uint16_t *) _image->data) + (_image->w * _y); });

                for (int x = 0, xx = arg_img->w; x < xx; x++) {
                    if (rgb565_pixels_differ(row_ptr1, row_ptr2, x, arg_img->w, neighbors, pixel_threshold)) {
                        global_variances++;
                        if (y >= roi.y && y <= roi.y + roi.h && x >= roi.x && x <= roi.x + roi.w) {
                            regional_variances++;
                        }
                    }
                }
            }
            break;
        }
    }

    fb_alloc_free_till_mark();

    mp_obj_t variances_obj[2] = {
        mp_obj_new_int(global_variances),
        mp_obj_new_int(regional_variances),
    };

    return mp_obj_new_tuple(2, variances_obj);
}

static const mp_obj_fun_builtin_var_t py_image_variation_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(4)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2279 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2279 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_variation};


static mp_obj_t py_image_top_hat(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_top_hat);
}
static const mp_obj_fun_builtin_var_t py_image_top_hat_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2285 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2285 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_top_hat};

static mp_obj_t py_image_black_hat(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    return py_image_binary_morph_op(n_args, pos_args, kw_args, imlib_black_hat);
}
static const mp_obj_fun_builtin_var_t py_image_black_hat_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_black_hat};






static mp_obj_t py_image_histeq(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    
# 2300 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2300 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_adaptive =
        py_helper_keyword_int(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_adaptive)) << 3) | 2)), 
# 2301 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                          0
# 2301 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );
    float arg_clip_limit =
        py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_clip_limit)) << 3) | 2)), -1);
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2305 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2305 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    if (arg_adaptive) {
        imlib_clahe_histeq(arg_img, arg_clip_limit, arg_msk);
    } else{
        imlib_histeq(arg_img, arg_msk);
    }
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_histeq_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2316 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_histeq};


static mp_obj_t py_image_mean(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_ksize =
        py_helper_arg_to_ksize(args[1]);
    
# 2324 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2324 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_threshold =
        py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 2325 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           0
# 2325 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                );
    int arg_offset =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_offset)) << 3) | 2)), 0);
    
# 2328 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2328 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 2329 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                        0
# 2329 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                             );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2331 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2331 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    imlib_mean_filter(arg_img, arg_ksize, arg_threshold, arg_offset, arg_invert, arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_mean_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2338 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_mean};



static mp_obj_t py_image_median(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_ksize =
        py_helper_arg_to_ksize(args[1]);
    float arg_percentile =
        py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_percentile)) << 3) | 2)), 0.5f);
    do { if (((0 <= arg_percentile) && (arg_percentile <= 1)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 0 <= percentile <= 1!")); } } while (0);
    
# 2350 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2350 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_threshold =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 2351 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           0
# 2351 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                );
    int arg_offset =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_offset)) << 3) | 2)), 0);
    
# 2354 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2354 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 2355 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                        0
# 2355 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                             );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2357 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2357 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    imlib_median_filter(arg_img, arg_ksize, arg_percentile, arg_threshold, arg_offset, arg_invert, arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_median_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2364 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2364 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_median};



static mp_obj_t py_image_mode(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_ksize =
        py_helper_arg_to_ksize(args[1]);
    
# 2373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2373 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_threshold =
        py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 2374 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           0
# 2374 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                );
    int arg_offset =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_offset)) << 3) | 2)), 0);
    
# 2377 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2377 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 2378 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                        0
# 2378 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                             );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2380 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2380 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    imlib_mode_filter(arg_img, arg_ksize, arg_threshold, arg_offset, arg_invert, arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_mode_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2387 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2387 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_mode};



static mp_obj_t py_image_midpoint(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_ksize =
        py_helper_arg_to_ksize(args[1]);
    float arg_bias =
        py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bias)) << 3) | 2)), 0.5f);
    do { if (((0 <= arg_bias) && (arg_bias <= 1)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Error: 0 <= bias <= 1!")); } } while (0);
    
# 2399 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2399 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_threshold =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 2400 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           0
# 2400 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                );
    int arg_offset =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_offset)) << 3) | 2)), 0);
    
# 2403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2403 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 2404 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                        0
# 2404 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                             );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2406 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2406 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    imlib_midpoint_filter(arg_img, arg_ksize, arg_bias, arg_threshold, arg_offset, arg_invert, arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_midpoint_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2413 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_midpoint};



static mp_obj_t py_image_morph(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_mul, ARG_add, ARG_threshold, ARG_offset, ARG_invert, ARG_mask };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_mul, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_add, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_threshold, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2422 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0 
# 2422 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                            } },
        { MP_QSTR_offset, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_invert, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2424 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                   0 
# 2424 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                         } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    int ksize = py_helper_arg_to_ksize(pos_args[1]);
    int n = (ksize * 2) + 1;

    if (n > 31) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Kernel size too large!"));
    }

    size_t len;
    mp_obj_t *items;
    mp_obj_get_array(pos_args[2], &len, &items);

    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 3, pos_args + 3, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();

    int krn[n * n];
    int sum = 0;

    if (len == n) {
        for (int i = 0; i < n; i++) {
            size_t row_len;
            mp_obj_t *row_items;
            mp_obj_get_array(items[i], &row_len, &row_items);

            if (row_len == n) {
                for (int j = 0; j < n; j++) {
                    krn[(i * n) + j] = mp_obj_get_int(row_items[j]);
                    sum += krn[(i * n) + j];
                }
            } else {
                mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unexpected kernel dimensions!"));
            }
        }
    } else if (len == (n * n)) {
        for (int i = 0; i < (n * n); i++) {
            krn[i] = mp_obj_get_int(items[i]);
            sum += krn[i];
        }
    } else {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Unexpected kernel dimensions!"));
    }

    if (sum == 0) {
        sum = 1;
    }

    image_t *mask = 
# 2477 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 2477 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    float mul = py_helper_arg_to_float(args[ARG_mul].u_obj, 1.0f);
    float add = py_helper_arg_to_float(args[ARG_add].u_obj, 0.0f);

    imlib_morph(image, ksize, krn, mul / sum, add, args[ARG_threshold].u_bool,
                args[ARG_offset].u_int, args[ARG_invert].u_bool, mask);
    fb_alloc_free_till_mark();
    return pos_args[0];
}
static const mp_obj_fun_builtin_var_t py_image_morph_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(3)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2490 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2490 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_morph};



static mp_obj_t py_image_gaussian(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_unsharp, ARG_mul, ARG_add, ARG_threshold, ARG_offset, ARG_invert, ARG_mask };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_unsharp, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2497 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                   0 
# 2497 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                         } },
        { MP_QSTR_mul, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_add, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_threshold, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2500 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0 
# 2500 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                            } },
        { MP_QSTR_offset, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_invert, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                   0 
# 2502 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                         } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    int ksize = py_helper_arg_to_ksize(pos_args[1]);
    int n = (ksize * 2) + 1;

    if (n > 31) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Kernel size too large!"));
    }

    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 2, pos_args + 2, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();

    int pascal[n];
    pascal[0] = 1;

    for (int i = 0; i < (ksize * 2); i++) {

        pascal[i + 1] = (pascal[i] * ((ksize * 2) - i)) / (i + 1);
    }

    int krn[n * n];
    int sum = 0;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int temp = pascal[i] * pascal[j];
            krn[(i * n) + j] = temp;
            sum += temp;
        }
    }

    if (args[ARG_unsharp].u_bool) {
        krn[(n * n) / 2] -= sum * 2;
        sum = -sum;
    }

    image_t *mask = 
# 2544 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 2544 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    float mul = py_helper_arg_to_float(args[ARG_mul].u_obj, 1.0f);
    float add = py_helper_arg_to_float(args[ARG_add].u_obj, 0.0f);

    imlib_morph(image, ksize, krn, mul / sum, add, args[ARG_threshold].u_bool,
                args[ARG_offset].u_int, args[ARG_invert].u_bool, mask);
    fb_alloc_free_till_mark();
    return pos_args[0];
}
static const mp_obj_fun_builtin_var_t py_image_gaussian_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2557 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_gaussian};



static mp_obj_t py_image_laplacian(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum { ARG_sharpen, ARG_mul, ARG_add, ARG_threshold, ARG_offset, ARG_invert, ARG_mask };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_sharpen, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2564 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                   0 
# 2564 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                         } },
        { MP_QSTR_mul, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_add, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6)) } },
        { MP_QSTR_threshold, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2567 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0 
# 2567 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                            } },
        { MP_QSTR_offset, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_invert, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2569 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                   0 
# 2569 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                         } },
        { MP_QSTR_mask, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    int ksize = py_helper_arg_to_ksize(pos_args[1]);
    int n = (ksize * 2) + 1;

    if (n > 31) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Kernel size too large!"));
    }

    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 2, pos_args + 2, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();

    int pascal[n];
    pascal[0] = 1;

    for (int i = 0; i < (ksize * 2); i++) {

        pascal[i + 1] = (pascal[i] * ((ksize * 2) - i)) / (i + 1);
    }

    int krn[n * n];
    int sum = 0;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int temp = pascal[i] * pascal[j];
            krn[(i * n) + j] = -temp;
            sum += temp;
        }
    }

    krn[(n * n) / 2] += sum;

    if (args[ARG_sharpen].u_bool) {
        krn[(n * n) / 2] += sum;
    }

    image_t *mask = 
# 2612 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                   ((void *)0)
# 2612 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                       ;
    if (args[ARG_mask].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
        mask = py_helper_arg_to_image(args[ARG_mask].u_obj, ARG_IMAGE_MUTABLE | ARG_IMAGE_ALLOC);
    }

    float mul = py_helper_arg_to_float(args[ARG_mul].u_obj, 1.0f);
    float add = py_helper_arg_to_float(args[ARG_add].u_obj, 0.0f);

    imlib_morph(image, ksize, krn, mul / sum, add, args[ARG_threshold].u_bool,
                args[ARG_offset].u_int, args[ARG_invert].u_bool, mask);
    fb_alloc_free_till_mark();
    return pos_args[0];
}
static const mp_obj_fun_builtin_var_t py_image_laplacian_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2625 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2625 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_laplacian};



static mp_obj_t py_image_bilateral(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    int arg_ksize =
        py_helper_arg_to_ksize(args[1]);
    float arg_color_sigma =
        py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_color_sigma)) << 3) | 2)), 0.1);
    float arg_space_sigma =
        py_helper_keyword_float(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_space_sigma)) << 3) | 2)), 1);
    
# 2638 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2638 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_threshold =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 2639 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           0
# 2639 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                );
    int arg_offset =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_offset)) << 3) | 2)), 0);
    
# 2642 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2642 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_invert =
        py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 2643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                        0
# 2643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                             );
    image_t *arg_msk =
        py_helper_keyword_to_image(n_args, args, 7, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), 
# 2645 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                           ((void *)0)
# 2645 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                               );

    fb_alloc_mark();
    imlib_bilateral_filter(arg_img, arg_ksize, arg_color_sigma, arg_space_sigma, arg_threshold, arg_offset, arg_invert,
                           arg_msk);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_bilateral_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2653 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2653 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_bilateral};







static mp_obj_t py_image_linpolar(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    do { if ((arg_img->w % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Width must be even!")); } } while (0);
    do { if ((arg_img->h % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Height must be even!")); } } while (0);
    
# 2666 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2666 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_reverse =
        py_helper_keyword_int(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_reverse)) << 3) | 2)), 
# 2667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                         0
# 2667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                              );

    fb_alloc_mark();
    imlib_logpolar(arg_img, 
# 2670 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                           1
# 2670 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                               , arg_reverse);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_linpolar_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2674 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2674 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_linpolar};



static mp_obj_t py_image_logpolar(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    do { if ((arg_img->w % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Width must be even!")); } } while (0);
    do { if ((arg_img->h % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Height must be even!")); } } while (0);
    
# 2683 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 2683 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        arg_reverse =
        py_helper_keyword_int(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_reverse)) << 3) | 2)), 
# 2684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                         0
# 2684 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                              );

    fb_alloc_mark();
    imlib_logpolar(arg_img, 
# 2687 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                           0
# 2687 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                , arg_reverse);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_logpolar_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2691 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2691 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_logpolar};



static mp_obj_t py_image_lens_corr(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    do { if ((arg_img->w % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Width must be even!")); } } while (0);
    do { if ((arg_img->h % 2) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Height must be even!")); } } while (0);
    float arg_strength =
        py_helper_keyword_float(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_strength)) << 3) | 2)), 1.8f);
    do { if ((arg_strength > 0.0f) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Strength must be > 0!")); } } while (0);
    float arg_zoom =
        py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_zoom)) << 3) | 2)), 1.0f);
    do { if ((arg_zoom > 0.0f) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Zoom must be > 0!")); } } while (0);

    float arg_x_corr =
        py_helper_keyword_float(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_corr)) << 3) | 2)), 0.0f);
    float arg_y_corr =
        py_helper_keyword_float(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_corr)) << 3) | 2)), 0.0f);

    fb_alloc_mark();
    imlib_lens_corr(arg_img, arg_strength, arg_zoom, arg_x_corr, arg_y_corr);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_lens_corr_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2717 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2717 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_lens_corr};



static mp_obj_t py_image_rotation_corr(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img =
        py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    float arg_x_rotation =
        (((py_helper_keyword_float(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_rotation)) << 3) | 2)), 0.0f)) * 
# 2725 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       3.14159265358979323846
# 2725 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       ) / 180);
    float arg_y_rotation =
        (((py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_rotation)) << 3) | 2)), 0.0f)) * 
# 2727 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       3.14159265358979323846
# 2727 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       ) / 180);
    float arg_z_rotation =
        (((py_helper_keyword_float(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_z_rotation)) << 3) | 2)), 0.0f)) * 
# 2729 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       3.14159265358979323846
# 2729 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       ) / 180);
    float arg_x_translation =
        py_helper_keyword_float(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_translation)) << 3) | 2)), 0.0f);
    float arg_y_translation =
        py_helper_keyword_float(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_translation)) << 3) | 2)), 0.0f);
    float arg_zoom =
        py_helper_keyword_float(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_zoom)) << 3) | 2)), 1.0f);
    do { if ((arg_zoom > 0.0f) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Zoom must be > 0!")); } } while (0);
    float arg_fov =
        (((py_helper_keyword_float(n_args, args, 7, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fov)) << 3) | 2)), 60.0f)) * 
# 2738 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       3.14159265358979323846
# 2738 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       ) / 180);
    do { if (((0.0f < arg_fov) && (arg_fov < 180.0f)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("FOV must be > 0 and < 180!")); } } while (0);
    float *arg_corners = py_helper_keyword_corner_array(n_args, args, 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)));

    fb_alloc_mark();
    imlib_rotation_corr(arg_img,
                        arg_x_rotation, arg_y_rotation, arg_z_rotation,
                        arg_x_translation, arg_y_translation,
                        arg_zoom, arg_fov, arg_corners);
    fb_alloc_free_till_mark();
    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_rotation_corr_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2750 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2750 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rotation_corr};
# 2760 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
typedef struct py_similarity_obj {
    mp_obj_base_t base;
    mp_obj_t avg, std, min, max;
} py_similarity_obj_t;

static void py_similarity_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_similarity_obj_t *self = self_in;
    mp_printf(print,
              "{\"mean\":%f, \"stdev\":%f, \"min\":%f, \"max\":%f}",
              (double) mp_obj_get_float(self->avg),
              (double) mp_obj_get_float(self->std),
              (double) mp_obj_get_float(self->min),
              (double) mp_obj_get_float(self->max));
}

static mp_obj_t py_similarity_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_similarity_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(4, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 2784 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 2784 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->avg) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 4, index, 
# 2788 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 2788 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 )) {
            case 0: return self->avg;
            case 1: return self->std;
            case 2: return self->min;
            case 3: return self->max;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_similarity_mean(mp_obj_t self_in) {
    return ((py_similarity_obj_t *) self_in)->avg;
}
static const mp_obj_fun_builtin_fixed_t py_similarity_mean_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_similarity_mean};

mp_obj_t py_similarity_stdev(mp_obj_t self_in) {
    return ((py_similarity_obj_t *) self_in)->std;
}
static const mp_obj_fun_builtin_fixed_t py_similarity_stdev_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_similarity_stdev};

mp_obj_t py_similarity_min(mp_obj_t self_in) {
    return ((py_similarity_obj_t *) self_in)->min;
}
static const mp_obj_fun_builtin_fixed_t py_similarity_min_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_similarity_min};

mp_obj_t py_similarity_max(mp_obj_t self_in) {
    return ((py_similarity_obj_t *) self_in)->max;
}
static const mp_obj_fun_builtin_fixed_t py_similarity_max_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_similarity_max};

static const mp_rom_map_elem_t py_similarity_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mean)) << 3) | 2)), (&py_similarity_mean_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_stdev)) << 3) | 2)), (&py_similarity_stdev_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_min)) << 3) | 2)), (&py_similarity_min_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_max)) << 3) | 2)), (&py_similarity_max_obj) }
};

static const mp_obj_dict_t py_similarity_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_similarity_locals_dict_table) / sizeof((py_similarity_locals_dict_table)[0])), .alloc = (sizeof(py_similarity_locals_dict_table) / sizeof((py_similarity_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_similarity_locals_dict_table, }, };

static const mp_obj_type_t py_similarity_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_similarity, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_similarity_print, py_similarity_subscr, &py_similarity_locals_dict, } }






     ;

static mp_obj_t py_image_get_similarity(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {
    enum {
        ARG_image, ARG_x, ARG_y, ARG_x_scale, ARG_y_scale, ARG_roi,
        ARG_channel, ARG_alpha, ARG_color_palette, ARG_alpha_palette, ARG_hint, ARG_dssim
    };
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_image, MP_ARG_OBJ | MP_ARG_REQUIRED, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_x, MP_ARG_INT, {.u_int = 0 } },
        { MP_QSTR_y, MP_ARG_INT, {.u_int = 0 } },
        { MP_QSTR_x_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_y_scale, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_roi, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_rgb_channel, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = -1 } },
        { MP_QSTR_alpha, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 255 } },
        { MP_QSTR_color_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_alpha_palette, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_hint, MP_ARG_INT | MP_ARG_KW_ONLY, {.u_int = 0 } },
        { MP_QSTR_dssim, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 2853 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                 0 
# 2853 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                       } },
    };


    image_t *image = py_helper_arg_to_image(pos_args[0], ARG_IMAGE_MUTABLE);
    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args - 1, pos_args + 1, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    fb_alloc_mark();
    image_t *other = py_helper_arg_to_image(args[ARG_image].u_obj, ARG_IMAGE_ANY | ARG_IMAGE_ALLOC);
    rectangle_t roi = py_helper_arg_to_roi(args[ARG_roi].u_obj, other);

    if (args[ARG_channel].u_int < -1 || args[ARG_channel].u_int > 2) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("RGB channel can be 0, 1, or 2"));
    }

    if (args[ARG_alpha].u_int < 0 || args[ARG_alpha].u_int > 255) {
        mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Alpha ranges between 0 and 255"));
    }

    float x_scale = 1.0f;
    float y_scale = 1.0f;
    py_helper_arg_to_scale(args[ARG_x_scale].u_obj, args[ARG_y_scale].u_obj, &x_scale, &y_scale);

    const uint16_t *color_palette = py_helper_arg_to_palette(args[ARG_color_palette].u_obj, PIXFORMAT_RGB565);
    const uint8_t *alpha_palette = py_helper_arg_to_palette(args[ARG_alpha_palette].u_obj, PIXFORMAT_GRAYSCALE);

    float avg = 0.0f, std = 0.0f, min = 0.0f, max = 0.0f;
    imlib_get_similarity(image, other, args[ARG_x].u_int, args[ARG_y].u_int, x_scale, y_scale, &roi,
                         args[ARG_channel].u_int, args[ARG_alpha].u_int, color_palette, alpha_palette,
                         args[ARG_hint].u_int | IMAGE_HINT_BLACK_BACKGROUND, args[ARG_dssim].u_bool,
                         &avg, &std, &min, &max);

    fb_alloc_free_till_mark();
    py_similarity_obj_t *o = (((py_similarity_obj_t *)(m_malloc(sizeof(py_similarity_obj_t) * (1)))));
    o->base.type = &py_similarity_type;
    o->avg = mp_obj_new_float(avg);
    o->std = mp_obj_new_float(std);
    o->min = mp_obj_new_float(min);
    o->max = mp_obj_new_float(max);
    return o;
}
static const mp_obj_fun_builtin_var_t py_image_get_similarity_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 2895 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 2895 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_get_similarity};




typedef struct py_statistics_obj {
    mp_obj_base_t base;
    pixformat_t pixfmt;
    mp_obj_t LMean, LMedian, LMode, LSTDev, LMin, LMax, LLQ, LUQ,
             AMean, AMedian, AMode, ASTDev, AMin, AMax, ALQ, AUQ,
             BMean, BMedian, BMode, BSTDev, BMin, BMax, BLQ, BUQ;
} py_statistics_obj_t;

static void py_statistics_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_statistics_obj_t *self = self_in;
    switch (self->pixfmt) {
        case PIXFORMAT_BINARY: {
            mp_printf(print,
                      "{\"mean\":%d, \"median\":%d, \"mode\":%d, \"stdev\":%d, \"min\":%d, \"max\":%d, \"lq\":%d, \"uq\":%d}",
                      mp_obj_get_int(self->LMean),
                      mp_obj_get_int(self->LMedian),
                      mp_obj_get_int(self->LMode),
                      mp_obj_get_int(self->LSTDev),
                      mp_obj_get_int(self->LMin),
                      mp_obj_get_int(self->LMax),
                      mp_obj_get_int(self->LLQ),
                      mp_obj_get_int(self->LUQ));
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            mp_printf(print,
                      "{\"mean\":%d, \"median\":%d, \"mode\":%d, \"stdev\":%d, \"min\":%d, \"max\":%d, \"lq\":%d, \"uq\":%d}",
                      mp_obj_get_int(self->LMean),
                      mp_obj_get_int(self->LMedian),
                      mp_obj_get_int(self->LMode),
                      mp_obj_get_int(self->LSTDev),
                      mp_obj_get_int(self->LMin),
                      mp_obj_get_int(self->LMax),
                      mp_obj_get_int(self->LLQ),
                      mp_obj_get_int(self->LUQ));
            break;
        }
        case PIXFORMAT_RGB565: {
            mp_printf(print,
                      "{\"l_mean\":%d, \"l_median\":%d, \"l_mode\":%d, \"l_stdev\":%d, \"l_min\":%d, \"l_max\":%d, \"l_lq\":%d, \"l_uq\":%d,"
                      " \"a_mean\":%d, \"a_median\":%d, \"a_mode\":%d, \"a_stdev\":%d, \"a_min\":%d, \"a_max\":%d, \"a_lq\":%d, \"a_uq\":%d,"
                      " \"b_mean\":%d, \"b_median\":%d, \"b_mode\":%d, \"b_stdev\":%d, \"b_min\":%d, \"b_max\":%d, \"b_lq\":%d, \"b_uq\":%d}",
                      mp_obj_get_int(self->LMean),
                      mp_obj_get_int(self->LMedian),
                      mp_obj_get_int(self->LMode),
                      mp_obj_get_int(self->LSTDev),
                      mp_obj_get_int(self->LMin),
                      mp_obj_get_int(self->LMax),
                      mp_obj_get_int(self->LLQ),
                      mp_obj_get_int(self->LUQ),
                      mp_obj_get_int(self->AMean),
                      mp_obj_get_int(self->AMedian),
                      mp_obj_get_int(self->AMode),
                      mp_obj_get_int(self->ASTDev),
                      mp_obj_get_int(self->AMin),
                      mp_obj_get_int(self->AMax),
                      mp_obj_get_int(self->ALQ),
                      mp_obj_get_int(self->AUQ),
                      mp_obj_get_int(self->BMean),
                      mp_obj_get_int(self->BMedian),
                      mp_obj_get_int(self->BMode),
                      mp_obj_get_int(self->BSTDev),
                      mp_obj_get_int(self->BMin),
                      mp_obj_get_int(self->BMax),
                      mp_obj_get_int(self->BLQ),
                      mp_obj_get_int(self->BUQ));
            break;
        }
        default: {
            mp_printf(print, "{}");
            break;
        }
    }
}

static mp_obj_t py_statistics_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_statistics_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 2979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(24, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 2984 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 2984 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->LMean) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 24, index, 
# 2988 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 2988 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 )) {
            case 0: return self->LMean;
            case 1: return self->LMedian;
            case 2: return self->LMode;
            case 3: return self->LSTDev;
            case 4: return self->LMin;
            case 5: return self->LMax;
            case 6: return self->LLQ;
            case 7: return self->LUQ;
            case 8: return self->AMean;
            case 9: return self->AMedian;
            case 10: return self->AMode;
            case 11: return self->ASTDev;
            case 12: return self->AMin;
            case 13: return self->AMax;
            case 14: return self->ALQ;
            case 15: return self->AUQ;
            case 16: return self->BMean;
            case 17: return self->BMedian;
            case 18: return self->BMode;
            case 19: return self->BSTDev;
            case 20: return self->BMin;
            case 21: return self->BMax;
            case 22: return self->BLQ;
            case 23: return self->BUQ;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_statistics_mean(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMean;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_mean_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_mean};

mp_obj_t py_statistics_median(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMedian;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_median_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_median};

mp_obj_t py_statistics_mode(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMode;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_mode_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_mode};

mp_obj_t py_statistics_stdev(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LSTDev;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_stdev_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_stdev};

mp_obj_t py_statistics_min(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMin;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_min_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_min};

mp_obj_t py_statistics_max(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMax;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_max_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_max};

mp_obj_t py_statistics_lq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LLQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_lq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_lq};

mp_obj_t py_statistics_uq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LUQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_uq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_uq};

mp_obj_t py_statistics_l_mean(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMean;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_mean_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_mean};

mp_obj_t py_statistics_l_median(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMedian;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_median_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_median};

mp_obj_t py_statistics_l_mode(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMode;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_mode_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_mode};

mp_obj_t py_statistics_l_stdev(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LSTDev;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_stdev_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_stdev};

mp_obj_t py_statistics_l_min(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMin;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_min_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_min};

mp_obj_t py_statistics_l_max(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LMax;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_max_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_max};

mp_obj_t py_statistics_l_lq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LLQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_lq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_lq};

mp_obj_t py_statistics_l_uq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->LUQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_l_uq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_l_uq};

mp_obj_t py_statistics_a_mean(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AMean;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_mean_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_mean};

mp_obj_t py_statistics_a_median(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AMedian;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_median_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_median};

mp_obj_t py_statistics_a_mode(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AMode;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_mode_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_mode};

mp_obj_t py_statistics_a_stdev(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->ASTDev;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_stdev_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_stdev};

mp_obj_t py_statistics_a_min(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AMin;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_min_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_min};

mp_obj_t py_statistics_a_max(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AMax;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_max_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_max};

mp_obj_t py_statistics_a_lq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->ALQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_lq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_lq};

mp_obj_t py_statistics_a_uq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->AUQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_a_uq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_a_uq};

mp_obj_t py_statistics_b_mean(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BMean;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_mean_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_mean};

mp_obj_t py_statistics_b_median(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BMedian;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_median_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_median};

mp_obj_t py_statistics_b_mode(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BMode;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_mode_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_mode};

mp_obj_t py_statistics_b_stdev(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BSTDev;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_stdev_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_stdev};

mp_obj_t py_statistics_b_min(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BMin;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_min_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_min};

mp_obj_t py_statistics_b_max(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BMax;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_max_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_max};

mp_obj_t py_statistics_b_lq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BLQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_lq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_lq};

mp_obj_t py_statistics_b_uq(mp_obj_t self_in) {
    return ((py_statistics_obj_t *) self_in)->BUQ;
}
static const mp_obj_fun_builtin_fixed_t py_statistics_b_uq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_statistics_b_uq};

static const mp_rom_map_elem_t py_statistics_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mean)) << 3) | 2)), (&py_statistics_mean_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_median)) << 3) | 2)), (&py_statistics_median_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mode)) << 3) | 2)), (&py_statistics_mode_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_stdev)) << 3) | 2)), (&py_statistics_stdev_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_min)) << 3) | 2)), (&py_statistics_min_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_max)) << 3) | 2)), (&py_statistics_max_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_lq)) << 3) | 2)), (&py_statistics_lq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_uq)) << 3) | 2)), (&py_statistics_uq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_mean)) << 3) | 2)), (&py_statistics_l_mean_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_median)) << 3) | 2)), (&py_statistics_l_median_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_mode)) << 3) | 2)), (&py_statistics_l_mode_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_stdev)) << 3) | 2)), (&py_statistics_l_stdev_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_min)) << 3) | 2)), (&py_statistics_l_min_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_max)) << 3) | 2)), (&py_statistics_l_max_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_lq)) << 3) | 2)), (&py_statistics_l_lq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_uq)) << 3) | 2)), (&py_statistics_l_uq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_mean)) << 3) | 2)), (&py_statistics_a_mean_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_median)) << 3) | 2)), (&py_statistics_a_median_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_mode)) << 3) | 2)), (&py_statistics_a_mode_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_stdev)) << 3) | 2)), (&py_statistics_a_stdev_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_min)) << 3) | 2)), (&py_statistics_a_min_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_max)) << 3) | 2)), (&py_statistics_a_max_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_lq)) << 3) | 2)), (&py_statistics_a_lq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_uq)) << 3) | 2)), (&py_statistics_a_uq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_mean)) << 3) | 2)), (&py_statistics_b_mean_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_median)) << 3) | 2)), (&py_statistics_b_median_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_mode)) << 3) | 2)), (&py_statistics_b_mode_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_stdev)) << 3) | 2)), (&py_statistics_b_stdev_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_min)) << 3) | 2)), (&py_statistics_b_min_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_max)) << 3) | 2)), (&py_statistics_b_max_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_lq)) << 3) | 2)), (&py_statistics_b_lq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_uq)) << 3) | 2)), (&py_statistics_b_uq_obj) }
};

static const mp_obj_dict_t py_statistics_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_statistics_locals_dict_table) / sizeof((py_statistics_locals_dict_table)[0])), .alloc = (sizeof(py_statistics_locals_dict_table) / sizeof((py_statistics_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_statistics_locals_dict_table, }, };

static const mp_obj_type_t py_statistics_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_statistics, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_statistics_print, py_statistics_subscr, &py_statistics_locals_dict, } }






     ;



typedef struct py_percentile_obj {
    mp_obj_base_t base;
    pixformat_t pixfmt;
    mp_obj_t LValue, AValue, BValue;
} py_percentile_obj_t;

static void py_percentile_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_percentile_obj_t *self = self_in;
    switch (self->pixfmt) {
        case PIXFORMAT_BINARY: {
            mp_printf(print, "{\"value\":%d}",
                      mp_obj_get_int(self->LValue));
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            mp_printf(print, "{\"value\":%d}",
                      mp_obj_get_int(self->LValue));
            break;
        }
        case PIXFORMAT_RGB565: {
            mp_printf(print, "{\"l_value:%d\", \"a_value\":%d, \"b_value\":%d}",
                      mp_obj_get_int(self->LValue),
                      mp_obj_get_int(self->AValue),
                      mp_obj_get_int(self->BValue));
            break;
        }
        default: {
            mp_printf(print, "{}");
            break;
        }
    }
}

static mp_obj_t py_percentile_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_percentile_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3263 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(3, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 3268 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 3268 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->LValue) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 3, index, 
# 3272 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 3272 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 )) {
            case 0: return self->LValue;
            case 1: return self->AValue;
            case 2: return self->BValue;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_percentile_value(mp_obj_t self_in) {
    return ((py_percentile_obj_t *) self_in)->LValue;
}
static const mp_obj_fun_builtin_fixed_t py_percentile_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_percentile_value};

mp_obj_t py_percentile_l_value(mp_obj_t self_in) {
    return ((py_percentile_obj_t *) self_in)->LValue;
}
static const mp_obj_fun_builtin_fixed_t py_percentile_l_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_percentile_l_value};

mp_obj_t py_percentile_a_value(mp_obj_t self_in) {
    return ((py_percentile_obj_t *) self_in)->AValue;
}
static const mp_obj_fun_builtin_fixed_t py_percentile_a_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_percentile_a_value};

mp_obj_t py_percentile_b_value(mp_obj_t self_in) {
    return ((py_percentile_obj_t *) self_in)->BValue;
}
static const mp_obj_fun_builtin_fixed_t py_percentile_b_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_percentile_b_value};

static const mp_rom_map_elem_t py_percentile_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_value)) << 3) | 2)), (&py_percentile_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_value)) << 3) | 2)), (&py_percentile_l_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_value)) << 3) | 2)), (&py_percentile_a_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_value)) << 3) | 2)), (&py_percentile_b_value_obj) }
};

static const mp_obj_dict_t py_percentile_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_percentile_locals_dict_table) / sizeof((py_percentile_locals_dict_table)[0])), .alloc = (sizeof(py_percentile_locals_dict_table) / sizeof((py_percentile_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_percentile_locals_dict_table, }, };

static const mp_obj_type_t py_percentile_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_percentile, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_percentile_print, py_percentile_subscr, &py_percentile_locals_dict, } }






     ;



typedef struct py_threshold_obj {
    mp_obj_base_t base;
    pixformat_t pixfmt;
    mp_obj_t LValue, AValue, BValue;
} py_threshold_obj_t;

static void py_threshold_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_threshold_obj_t *self = self_in;
    switch (self->pixfmt) {
        case PIXFORMAT_BINARY: {
            mp_printf(print, "{\"value\":%d}",
                      mp_obj_get_int(self->LValue));
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            mp_printf(print, "{\"value\":%d}",
                      mp_obj_get_int(self->LValue));
            break;
        }
        case PIXFORMAT_RGB565: {
            mp_printf(print, "{\"l_value\":%d, \"a_value\":%d, \"b_value\":%d}",
                      mp_obj_get_int(self->LValue),
                      mp_obj_get_int(self->AValue),
                      mp_obj_get_int(self->BValue));
            break;
        }
        default: {
            mp_printf(print, "{}");
            break;
        }
    }
}

static mp_obj_t py_threshold_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_threshold_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3358 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(3, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 3363 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 3363 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->LValue) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 3, index, 
# 3367 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           0
# 3367 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                )) {
            case 0: return self->LValue;
            case 1: return self->AValue;
            case 2: return self->BValue;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_threshold_value(mp_obj_t self_in) {
    return ((py_threshold_obj_t *) self_in)->LValue;
}
static const mp_obj_fun_builtin_fixed_t py_threshold_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_threshold_value};

mp_obj_t py_threshold_l_value(mp_obj_t self_in) {
    return ((py_threshold_obj_t *) self_in)->LValue;
}
static const mp_obj_fun_builtin_fixed_t py_threshold_l_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_threshold_l_value};

mp_obj_t py_threshold_a_value(mp_obj_t self_in) {
    return ((py_threshold_obj_t *) self_in)->AValue;
}
static const mp_obj_fun_builtin_fixed_t py_threshold_a_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_threshold_a_value};

mp_obj_t py_threshold_b_value(mp_obj_t self_in) {
    return ((py_threshold_obj_t *) self_in)->BValue;
}
static const mp_obj_fun_builtin_fixed_t py_threshold_b_value_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_threshold_b_value};

static const mp_rom_map_elem_t py_threshold_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_value)) << 3) | 2)), (&py_threshold_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_value)) << 3) | 2)), (&py_threshold_l_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_value)) << 3) | 2)), (&py_threshold_a_value_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_value)) << 3) | 2)), (&py_threshold_b_value_obj) }
};

static const mp_obj_dict_t py_threshold_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_threshold_locals_dict_table) / sizeof((py_threshold_locals_dict_table)[0])), .alloc = (sizeof(py_threshold_locals_dict_table) / sizeof((py_threshold_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_threshold_locals_dict_table, }, };

static const mp_obj_type_t py_threshold_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_threshold, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_threshold_print, py_threshold_subscr, &py_threshold_locals_dict, } }






     ;



typedef struct py_histogram_obj {
    mp_obj_base_t base;
    pixformat_t pixfmt;
    mp_obj_t LBins, ABins, BBins;
} py_histogram_obj_t;

static void py_histogram_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_histogram_obj_t *self = self_in;
    switch (self->pixfmt) {
        case PIXFORMAT_BINARY: {
            mp_printf(print, "{\"bins\":");
            mp_obj_print_helper(print, self->LBins, kind);
            mp_printf(print, "}");
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            mp_printf(print, "{\"bins\":");
            mp_obj_print_helper(print, self->LBins, kind);
            mp_printf(print, "}");
            break;
        }
        case PIXFORMAT_RGB565: {
            mp_printf(print, "{\"l_bins\":");
            mp_obj_print_helper(print, self->LBins, kind);
            mp_printf(print, ", \"a_bins\":");
            mp_obj_print_helper(print, self->ABins, kind);
            mp_printf(print, ", \"b_bins\":");
            mp_obj_print_helper(print, self->BBins, kind);
            mp_printf(print, "}");
            break;
        }
        default: {
            mp_printf(print, "{}");
            break;
        }
    }
}

static mp_obj_t py_histogram_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_histogram_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3458 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(3, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 3463 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 3463 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->LBins) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 3, index, 
# 3467 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                           0
# 3467 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                )) {
            case 0: return self->LBins;
            case 1: return self->ABins;
            case 2: return self->BBins;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_histogram_bins(mp_obj_t self_in) {
    return ((py_histogram_obj_t *) self_in)->LBins;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_bins};

mp_obj_t py_histogram_l_bins(mp_obj_t self_in) {
    return ((py_histogram_obj_t *) self_in)->LBins;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_l_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_l_bins};

mp_obj_t py_histogram_a_bins(mp_obj_t self_in) {
    return ((py_histogram_obj_t *) self_in)->ABins;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_a_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_a_bins};

mp_obj_t py_histogram_b_bins(mp_obj_t self_in) {
    return ((py_histogram_obj_t *) self_in)->BBins;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_b_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_b_bins};

mp_obj_t py_histogram_get_percentile(mp_obj_t self_in, mp_obj_t percentile) {
    histogram_t hist;
    hist.LBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->len;
    hist.ABinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->len;
    hist.BBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->len;
    fb_alloc_mark();
    hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
    hist.ABins = fb_alloc(hist.ABinCount * sizeof(float), 0);
    hist.BBins = fb_alloc(hist.BBinCount * sizeof(float), 0);

    for (int i = 0; i < hist.LBinCount; i++) {
        hist.LBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->items[i]);
    }

    for (int i = 0; i < hist.ABinCount; i++) {
        hist.ABins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->items[i]);
    }

    for (int i = 0; i < hist.BBinCount; i++) {
        hist.BBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->items[i]);
    }

    percentile_t p;
    imlib_get_percentile(&p, ((py_histogram_obj_t *) self_in)->pixfmt, &hist, mp_obj_get_float(percentile));
    fb_alloc_free_till_mark();

    py_percentile_obj_t *o = (((py_percentile_obj_t *)(m_malloc(sizeof(py_percentile_obj_t) * (1)))));
    o->base.type = &py_percentile_type;
    o->pixfmt = ((py_histogram_obj_t *) self_in)->pixfmt;

    o->LValue = mp_obj_new_int(p.LValue);
    o->AValue = mp_obj_new_int(p.AValue);
    o->BValue = mp_obj_new_int(p.BValue);

    return o;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_get_percentile_obj = {{&mp_type_fun_builtin_2}, .fun._2 = py_histogram_get_percentile};

mp_obj_t py_histogram_get_threshold(mp_obj_t self_in) {
    histogram_t hist;
    hist.LBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->len;
    hist.ABinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->len;
    hist.BBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->len;
    fb_alloc_mark();
    hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
    hist.ABins = fb_alloc(hist.ABinCount * sizeof(float), 0);
    hist.BBins = fb_alloc(hist.BBinCount * sizeof(float), 0);

    for (int i = 0; i < hist.LBinCount; i++) {
        hist.LBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->items[i]);
    }

    for (int i = 0; i < hist.ABinCount; i++) {
        hist.ABins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->items[i]);
    }

    for (int i = 0; i < hist.BBinCount; i++) {
        hist.BBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->items[i]);
    }

    threshold_t t;
    imlib_get_threshold(&t, ((py_histogram_obj_t *) self_in)->pixfmt, &hist);
    fb_alloc_free_till_mark();

    py_threshold_obj_t *o = (((py_threshold_obj_t *)(m_malloc(sizeof(py_threshold_obj_t) * (1)))));
    o->base.type = &py_threshold_type;
    o->pixfmt = ((py_threshold_obj_t *) self_in)->pixfmt;

    o->LValue = mp_obj_new_int(t.LValue);
    o->AValue = mp_obj_new_int(t.AValue);
    o->BValue = mp_obj_new_int(t.BValue);

    return o;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_get_threshold_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_get_threshold};

mp_obj_t py_histogram_get_statistics(mp_obj_t self_in) {
    histogram_t hist;
    hist.LBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->len;
    hist.ABinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->len;
    hist.BBinCount = ((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->len;
    fb_alloc_mark();
    hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
    hist.ABins = fb_alloc(hist.ABinCount * sizeof(float), 0);
    hist.BBins = fb_alloc(hist.BBinCount * sizeof(float), 0);

    for (int i = 0; i < hist.LBinCount; i++) {
        hist.LBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->LBins)->items[i]);
    }

    for (int i = 0; i < hist.ABinCount; i++) {
        hist.ABins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->ABins)->items[i]);
    }

    for (int i = 0; i < hist.BBinCount; i++) {
        hist.BBins[i] = mp_obj_get_float(((mp_obj_list_t *) ((py_histogram_obj_t *) self_in)->BBins)->items[i]);
    }

    statistics_t stats;
    imlib_get_statistics(&stats, ((py_histogram_obj_t *) self_in)->pixfmt, &hist);
    fb_alloc_free_till_mark();

    py_statistics_obj_t *o = (((py_statistics_obj_t *)(m_malloc(sizeof(py_statistics_obj_t) * (1)))));
    o->base.type = &py_statistics_type;
    o->pixfmt = ((py_histogram_obj_t *) self_in)->pixfmt;

    o->LMean = mp_obj_new_int(stats.LMean);
    o->LMedian = mp_obj_new_int(stats.LMedian);
    o->LMode = mp_obj_new_int(stats.LMode);
    o->LSTDev = mp_obj_new_int(stats.LSTDev);
    o->LMin = mp_obj_new_int(stats.LMin);
    o->LMax = mp_obj_new_int(stats.LMax);
    o->LLQ = mp_obj_new_int(stats.LLQ);
    o->LUQ = mp_obj_new_int(stats.LUQ);
    o->AMean = mp_obj_new_int(stats.AMean);
    o->AMedian = mp_obj_new_int(stats.AMedian);
    o->AMode = mp_obj_new_int(stats.AMode);
    o->ASTDev = mp_obj_new_int(stats.ASTDev);
    o->AMin = mp_obj_new_int(stats.AMin);
    o->AMax = mp_obj_new_int(stats.AMax);
    o->ALQ = mp_obj_new_int(stats.ALQ);
    o->AUQ = mp_obj_new_int(stats.AUQ);
    o->BMean = mp_obj_new_int(stats.BMean);
    o->BMedian = mp_obj_new_int(stats.BMedian);
    o->BMode = mp_obj_new_int(stats.BMode);
    o->BSTDev = mp_obj_new_int(stats.BSTDev);
    o->BMin = mp_obj_new_int(stats.BMin);
    o->BMax = mp_obj_new_int(stats.BMax);
    o->BLQ = mp_obj_new_int(stats.BLQ);
    o->BUQ = mp_obj_new_int(stats.BUQ);

    return o;
}
static const mp_obj_fun_builtin_fixed_t py_histogram_get_statistics_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_histogram_get_statistics};

static const mp_rom_map_elem_t py_histogram_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)), (&py_histogram_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), (&py_histogram_l_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_bins)) << 3) | 2)), (&py_histogram_a_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_bins)) << 3) | 2)), (&py_histogram_b_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_percentile)) << 3) | 2)), (&py_histogram_get_percentile_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_threshold)) << 3) | 2)), (&py_histogram_get_threshold_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_stats)) << 3) | 2)), (&py_histogram_get_statistics_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_statistics)) << 3) | 2)), (&py_histogram_get_statistics_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_statistics)) << 3) | 2)), (&py_histogram_get_statistics_obj) }
};

static const mp_obj_dict_t py_histogram_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_histogram_locals_dict_table) / sizeof((py_histogram_locals_dict_table)[0])), .alloc = (sizeof(py_histogram_locals_dict_table) / sizeof((py_histogram_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_histogram_locals_dict_table, }, };

static const mp_obj_type_t py_histogram_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_histogram, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_histogram_print, py_histogram_subscr, &py_histogram_locals_dict, } }






     ;

static mp_obj_t py_image_get_histogram(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    list_t thresholds;
    list_init(&thresholds, sizeof(color_thresholds_list_lnk_data_t));
    py_helper_keyword_thresholds(n_args, args, 1, kw_args, &thresholds);
    
# 3660 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 3660 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        invert = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 3660 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  0
# 3660 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                       );
    image_t *other = py_helper_keyword_to_image(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_difference)) << 3) | 2)), 
# 3661 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                              ((void *)0)
# 3661 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                                  );

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 3, kw_args, &roi);

    histogram_t hist;
    switch (arg_img->pixfmt) {
        case PIXFORMAT_BINARY: {
            int bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                             (1 - 0 + 1));
            do { if ((bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            hist.ABinCount = 0;
            hist.BBinCount = 0;
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = 
# 3678 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3678 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            hist.BBins = 
# 3679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            int bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                             (255 - 0 + 1));
            do { if ((bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            hist.ABinCount = 0;
            hist.BBinCount = 0;
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = 
# 3694 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3694 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            hist.BBins = 
# 3695 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3695 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        case PIXFORMAT_RGB565: {
            int l_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (100 - 0 + 1));
            do { if ((l_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), l_bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            int a_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (127 - -128 + 1));
            do { if ((a_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.ABinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_bins)) << 3) | 2)), a_bins);
            do { if ((hist.ABinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("a_bins must be >= 2")); } } while (0);
            int b_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (127 - -128 + 1));
            do { if ((b_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.BBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_bins)) << 3) | 2)), b_bins);
            do { if ((hist.BBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("b_bins must be >= 2")); } } while (0);
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = fb_alloc(hist.ABinCount * sizeof(float), 0);
            hist.BBins = fb_alloc(hist.BBinCount * sizeof(float), 0);
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        default: {
            return (((mp_obj_t)((void *)0)));
        }
    }

    py_histogram_obj_t *o = (((py_histogram_obj_t *)(m_malloc(sizeof(py_histogram_obj_t) * (1)))));
    o->base.type = &py_histogram_type;
    o->pixfmt = arg_img->pixfmt;

    o->LBins = mp_obj_new_list(hist.LBinCount, 
# 3733 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                              ((void *)0)
# 3733 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  );
    o->ABins = mp_obj_new_list(hist.ABinCount, 
# 3734 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                              ((void *)0)
# 3734 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  );
    o->BBins = mp_obj_new_list(hist.BBinCount, 
# 3735 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                              ((void *)0)
# 3735 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  );

    for (int i = 0; i < hist.LBinCount; i++) {
        ((mp_obj_list_t *) o->LBins)->items[i] = mp_obj_new_float(hist.LBins[i]);
    }

    for (int i = 0; i < hist.ABinCount; i++) {
        ((mp_obj_list_t *) o->ABins)->items[i] = mp_obj_new_float(hist.ABins[i]);
    }

    for (int i = 0; i < hist.BBinCount; i++) {
        ((mp_obj_list_t *) o->BBins)->items[i] = mp_obj_new_float(hist.BBins[i]);
    }

    fb_alloc_free_till_mark();

    return o;
}
static const mp_obj_fun_builtin_var_t py_image_get_histogram_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 3753 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 3753 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_get_histogram};

static mp_obj_t py_image_get_statistics(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    list_t thresholds;
    list_init(&thresholds, sizeof(color_thresholds_list_lnk_data_t));
    py_helper_keyword_thresholds(n_args, args, 1, kw_args, &thresholds);
    
# 3761 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 3761 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        invert = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 3761 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  0
# 3761 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                       );
    image_t *other = py_helper_keyword_to_image(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_difference)) << 3) | 2)), 
# 3762 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                              ((void *)0)
# 3762 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                                  );

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 3, kw_args, &roi);

    histogram_t hist;
    switch (arg_img->pixfmt) {
        case PIXFORMAT_BINARY: {
            int bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                             (1 - 0 + 1));
            do { if ((bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            hist.ABinCount = 0;
            hist.BBinCount = 0;
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = 
# 3779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3779 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            hist.BBins = 
# 3780 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3780 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        case PIXFORMAT_GRAYSCALE: {
            int bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                             (255 - 0 + 1));
            do { if ((bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            hist.ABinCount = 0;
            hist.BBinCount = 0;
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = 
# 3795 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3795 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            hist.BBins = 
# 3796 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        ((void *)0)
# 3796 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                            ;
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        case PIXFORMAT_RGB565: {
            int l_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (100 - 0 + 1));
            do { if ((l_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.LBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_l_bins)) << 3) | 2)), l_bins);
            do { if ((hist.LBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("l_bins must be >= 2")); } } while (0);
            int a_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (127 - -128 + 1));
            do { if ((a_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.ABinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_a_bins)) << 3) | 2)), a_bins);
            do { if ((hist.ABinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("a_bins must be >= 2")); } } while (0);
            int b_bins = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_bins)) << 3) | 2)),
                                               (127 - -128 + 1));
            do { if ((b_bins >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("bins must be >= 2")); } } while (0);
            hist.BBinCount = py_helper_keyword_int(n_args, args, n_args, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_bins)) << 3) | 2)), b_bins);
            do { if ((hist.BBinCount >= 2) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("b_bins must be >= 2")); } } while (0);
            fb_alloc_mark();
            hist.LBins = fb_alloc(hist.LBinCount * sizeof(float), 0);
            hist.ABins = fb_alloc(hist.ABinCount * sizeof(float), 0);
            hist.BBins = fb_alloc(hist.BBinCount * sizeof(float), 0);
            imlib_get_histogram(&hist, arg_img, &roi, &thresholds, invert, other);
            list_free(&thresholds);
            break;
        }
        default: {
            return (((mp_obj_t)((void *)0)));
        }
    }

    statistics_t stats;
    imlib_get_statistics(&stats, arg_img->pixfmt, &hist);
    fb_alloc_free_till_mark();

    py_statistics_obj_t *o = (((py_statistics_obj_t *)(m_malloc(sizeof(py_statistics_obj_t) * (1)))));
    o->base.type = &py_statistics_type;
    o->pixfmt = arg_img->pixfmt;

    o->LMean = mp_obj_new_int(stats.LMean);
    o->LMedian = mp_obj_new_int(stats.LMedian);
    o->LMode = mp_obj_new_int(stats.LMode);
    o->LSTDev = mp_obj_new_int(stats.LSTDev);
    o->LMin = mp_obj_new_int(stats.LMin);
    o->LMax = mp_obj_new_int(stats.LMax);
    o->LLQ = mp_obj_new_int(stats.LLQ);
    o->LUQ = mp_obj_new_int(stats.LUQ);
    o->AMean = mp_obj_new_int(stats.AMean);
    o->AMedian = mp_obj_new_int(stats.AMedian);
    o->AMode = mp_obj_new_int(stats.AMode);
    o->ASTDev = mp_obj_new_int(stats.ASTDev);
    o->AMin = mp_obj_new_int(stats.AMin);
    o->AMax = mp_obj_new_int(stats.AMax);
    o->ALQ = mp_obj_new_int(stats.ALQ);
    o->AUQ = mp_obj_new_int(stats.AUQ);
    o->BMean = mp_obj_new_int(stats.BMean);
    o->BMedian = mp_obj_new_int(stats.BMedian);
    o->BMode = mp_obj_new_int(stats.BMode);
    o->BSTDev = mp_obj_new_int(stats.BSTDev);
    o->BMin = mp_obj_new_int(stats.BMin);
    o->BMax = mp_obj_new_int(stats.BMax);
    o->BLQ = mp_obj_new_int(stats.BLQ);
    o->BUQ = mp_obj_new_int(stats.BUQ);

    return o;
}
static const mp_obj_fun_builtin_var_t py_image_get_statistics_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 3865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 3865 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_get_statistics};



typedef struct py_line_obj {
    mp_obj_base_t base;
    mp_obj_t x1, y1, x2, y2, length, magnitude, theta, rho;
} py_line_obj_t;

static void py_line_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_line_obj_t *self = self_in;
    mp_printf(print,
              "{\"x1\":%d, \"y1\":%d, \"x2\":%d, \"y2\":%d, \"length\":%d, \"magnitude\":%d, \"theta\":%d, \"rho\":%d}",
              mp_obj_get_int(self->x1),
              mp_obj_get_int(self->y1),
              mp_obj_get_int(self->x2),
              mp_obj_get_int(self->y2),
              mp_obj_get_int(self->length),
              mp_obj_get_int(self->magnitude),
              mp_obj_get_int(self->theta),
              mp_obj_get_int(self->rho));
}

static mp_obj_t py_line_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_line_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 3892 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(8, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 3897 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 3897 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x1) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 8, index, 
# 3901 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0
# 3901 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                           )) {
            case 0: return self->x1;
            case 1: return self->y1;
            case 2: return self->x2;
            case 3: return self->y2;
            case 4: return self->length;
            case 5: return self->magnitude;
            case 6: return self->theta;
            case 7: return self->rho;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_line_line(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_line_obj_t *) self_in)->x1,
                                              ((py_line_obj_t *) self_in)->y1,
                                              ((py_line_obj_t *) self_in)->x2,
                                              ((py_line_obj_t *) self_in)->y2});
}
static const mp_obj_fun_builtin_fixed_t py_line_line_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_line};

mp_obj_t py_line_x1(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->x1;
}
static const mp_obj_fun_builtin_fixed_t py_line_x1_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_x1};

mp_obj_t py_line_y1(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->y1;
}
static const mp_obj_fun_builtin_fixed_t py_line_y1_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_y1};

mp_obj_t py_line_x2(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->x2;
}
static const mp_obj_fun_builtin_fixed_t py_line_x2_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_x2};

mp_obj_t py_line_y2(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->y2;
}
static const mp_obj_fun_builtin_fixed_t py_line_y2_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_y2};

mp_obj_t py_line_length(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->length;
}
static const mp_obj_fun_builtin_fixed_t py_line_length_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_length};

mp_obj_t py_line_magnitude(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->magnitude;
}
static const mp_obj_fun_builtin_fixed_t py_line_magnitude_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_magnitude};

mp_obj_t py_line_theta(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->theta;
}
static const mp_obj_fun_builtin_fixed_t py_line_theta_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_theta};

mp_obj_t py_line_rho(mp_obj_t self_in) {
    return ((py_line_obj_t *) self_in)->rho;
}
static const mp_obj_fun_builtin_fixed_t py_line_rho_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_line_rho};

static const mp_rom_map_elem_t py_line_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_line)) << 3) | 2)), (&py_line_line_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x1)) << 3) | 2)), (&py_line_x1_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y1)) << 3) | 2)), (&py_line_y1_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x2)) << 3) | 2)), (&py_line_x2_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y2)) << 3) | 2)), (&py_line_y2_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_length)) << 3) | 2)), (&py_line_length_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_magnitude)) << 3) | 2)), (&py_line_magnitude_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_theta)) << 3) | 2)), (&py_line_theta_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rho)) << 3) | 2)), (&py_line_rho_obj) }
};

static const mp_obj_dict_t py_line_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_line_locals_dict_table) / sizeof((py_line_locals_dict_table)[0])), .alloc = (sizeof(py_line_locals_dict_table) / sizeof((py_line_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_line_locals_dict_table, }, };

static const mp_obj_type_t py_line_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_line, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_line_print, py_line_subscr, &py_line_locals_dict, } }






     ;

static mp_obj_t py_image_get_regression(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    list_t thresholds;
    list_init(&thresholds, sizeof(color_thresholds_list_lnk_data_t));
    py_helper_arg_to_thresholds(args[1], &thresholds);
    if (!list_size(&thresholds)) {
        return ((mp_obj_t)(((0) << 3) | 6));
    }
    
# 3995 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 3995 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        invert = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 3995 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  0
# 3995 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                       );

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 3, kw_args, &roi);

    unsigned int x_stride = py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_stride)) << 3) | 2)), 2);
    do { if ((x_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("x_stride must not be zero.")); } } while (0);
    unsigned int y_stride = py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_stride)) << 3) | 2)), 1);
    do { if ((y_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("y_stride must not be zero.")); } } while (0);
    unsigned int area_threshold = py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_area_threshold)) << 3) | 2)), 10);
    unsigned int pixels_threshold = py_helper_keyword_int(n_args,
                                                          args,
                                                          7,
                                                          kw_args,
                                                          ((mp_obj_t)((((mp_uint_t)(MP_QSTR_pixels_threshold)) << 3) | 2)),
                                                          10);
    
# 4011 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 4011 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        robust = py_helper_keyword_int(n_args, args, 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_robust)) << 3) | 2)), 
# 4011 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  0
# 4011 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                       );

    find_lines_list_lnk_data_t out;
    fb_alloc_mark();
    
# 4015 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 4015 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        result = imlib_get_regression(&out, arg_img, &roi, x_stride,
                                       y_stride, &thresholds, invert, area_threshold, pixels_threshold, robust);
    fb_alloc_free_till_mark();
    list_free(&thresholds);
    if (!result) {
        return ((mp_obj_t)(((0) << 3) | 6));
    }

    py_line_obj_t *o = (((py_line_obj_t *)(m_malloc(sizeof(py_line_obj_t) * (1)))));
    o->base.type = &py_line_type;
    o->x1 = mp_obj_new_int(out.line.x1);
    o->y1 = mp_obj_new_int(out.line.y1);
    o->x2 = mp_obj_new_int(out.line.x2);
    o->y2 = mp_obj_new_int(out.line.y2);
    int x_diff = out.line.x2 - out.line.x1;
    int y_diff = out.line.y2 - out.line.y1;
    o->length = mp_obj_new_int(fast_roundf(fast_sqrtf((x_diff * x_diff) + (y_diff * y_diff))));
    o->magnitude = mp_obj_new_int(out.magnitude);
    o->theta = mp_obj_new_int(out.theta);
    o->rho = mp_obj_new_int(out.rho);

    return o;
}
static const mp_obj_fun_builtin_var_t py_image_get_regression_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 4038 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 4038 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_get_regression};







typedef struct py_blob_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t min_corners;
    mp_obj_t x, y, w, h, pixels, cx, cy, rotation, code, count, perimeter, roundness;
    mp_obj_t x_hist_bins;
    mp_obj_t y_hist_bins;
} py_blob_obj_t;

static void py_blob_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_blob_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d,"
              " \"pixels\":%d, \"cx\":%d, \"cy\":%d, \"rotation\":%f, \"code\":%d, \"count\":%d,"
              " \"perimeter\":%d, \"roundness\":%f}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_get_int(self->pixels),
              fast_roundf(mp_obj_get_float(self->cx)),
              fast_roundf(mp_obj_get_float(self->cy)),
              (double) mp_obj_get_float(self->rotation),
              mp_obj_get_int(self->code),
              mp_obj_get_int(self->count),
              mp_obj_get_int(self->perimeter),
              (double) mp_obj_get_float(self->roundness));
}

static mp_obj_t py_blob_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_blob_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4079 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(12, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 4084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 4084 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 12, index, 
# 4088 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0
# 4088 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                           )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->w;
            case 3: return self->h;
            case 4: return self->pixels;
            case 5: return mp_obj_new_int(fast_roundf(mp_obj_get_float(self->cx)));
            case 6: return mp_obj_new_int(fast_roundf(mp_obj_get_float(self->cy)));
            case 7: return self->rotation;
            case 8: return self->code;
            case 9: return self->count;
            case 10: return self->perimeter;
            case 11: return self->roundness;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_blob_corners(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->corners;
}
static const mp_obj_fun_builtin_fixed_t py_blob_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_corners};

mp_obj_t py_blob_min_corners(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->min_corners;
}
static const mp_obj_fun_builtin_fixed_t py_blob_min_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_min_corners};

mp_obj_t py_blob_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_blob_obj_t *) self_in)->x,
                                              ((py_blob_obj_t *) self_in)->y,
                                              ((py_blob_obj_t *) self_in)->w,
                                              ((py_blob_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_blob_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_rect};

mp_obj_t py_blob_x(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_blob_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_x};

mp_obj_t py_blob_y(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_blob_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_y};

mp_obj_t py_blob_w(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_blob_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_w};

mp_obj_t py_blob_h(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_blob_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_h};

mp_obj_t py_blob_pixels(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->pixels;
}
static const mp_obj_fun_builtin_fixed_t py_blob_pixels_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_pixels};

mp_obj_t py_blob_cx(mp_obj_t self_in) {
    return mp_obj_new_int(fast_roundf(mp_obj_get_float(((py_blob_obj_t *) self_in)->cx)));
}
static const mp_obj_fun_builtin_fixed_t py_blob_cx_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_cx};

mp_obj_t py_blob_cxf(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->cx;
}
static const mp_obj_fun_builtin_fixed_t py_blob_cxf_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_cxf};

mp_obj_t py_blob_cy(mp_obj_t self_in) {
    return mp_obj_new_int(fast_roundf(mp_obj_get_float(((py_blob_obj_t *) self_in)->cy)));
}
static const mp_obj_fun_builtin_fixed_t py_blob_cy_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_cy};

mp_obj_t py_blob_cyf(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->cy;
}
static const mp_obj_fun_builtin_fixed_t py_blob_cyf_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_cyf};

mp_obj_t py_blob_rotation(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->rotation;
}
static const mp_obj_fun_builtin_fixed_t py_blob_rotation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_rotation};

mp_obj_t py_blob_rotation_deg(mp_obj_t self_in) {
    return mp_obj_new_int((mp_int_t) (((mp_obj_get_float(((py_blob_obj_t *) self_in)->rotation)) * 180) / 
# 4175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                    3.14159265358979323846
# 4175 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                    ));
}
static const mp_obj_fun_builtin_fixed_t py_blob_rotation_deg_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_rotation_deg};

mp_obj_t py_blob_rotation_rad(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->rotation;
}
static const mp_obj_fun_builtin_fixed_t py_blob_rotation_rad_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_rotation_rad};

mp_obj_t py_blob_code(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->code;
}
static const mp_obj_fun_builtin_fixed_t py_blob_code_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_code};

mp_obj_t py_blob_count(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->count;
}
static const mp_obj_fun_builtin_fixed_t py_blob_count_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_count};

mp_obj_t py_blob_perimeter(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->perimeter;
}
static const mp_obj_fun_builtin_fixed_t py_blob_perimeter_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_perimeter};

mp_obj_t py_blob_roundness(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->roundness;
}
static const mp_obj_fun_builtin_fixed_t py_blob_roundness_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_roundness};

mp_obj_t py_blob_elongation(mp_obj_t self_in) {
    return mp_obj_new_float(1 - mp_obj_get_float(((py_blob_obj_t *) self_in)->roundness));
}
static const mp_obj_fun_builtin_fixed_t py_blob_elongation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_elongation};

mp_obj_t py_blob_area(mp_obj_t self_in) {
    return mp_obj_new_int(mp_obj_get_int(((py_blob_obj_t *) self_in)->w) * mp_obj_get_int(((py_blob_obj_t *) self_in)->h));
}
static const mp_obj_fun_builtin_fixed_t py_blob_area_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_area};

mp_obj_t py_blob_density(mp_obj_t self_in) {
    int area = mp_obj_get_int(((py_blob_obj_t *) self_in)->w) * mp_obj_get_int(((py_blob_obj_t *) self_in)->h);
    int pixels = mp_obj_get_int(((py_blob_obj_t *) self_in)->pixels);
    return mp_obj_new_float(({ __typeof__ (pixels) _a = (pixels); __typeof__ (((float) area)) _b = (((float) area)); _b ? (_a / _b) : 0; }));
}
static const mp_obj_fun_builtin_fixed_t py_blob_density_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_density};





mp_obj_t py_blob_compactness(mp_obj_t self_in) {
    int pixels = mp_obj_get_int(((py_blob_obj_t *) self_in)->pixels);
    float perimeter = mp_obj_get_int(((py_blob_obj_t *) self_in)->perimeter);
    return mp_obj_new_float(({ __typeof__ ((pixels * 4 * 
# 4228 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                           3.14159265358979323846
# 4228 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                           )) _a = ((pixels * 4 * 
# 4228 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                           3.14159265358979323846
# 4228 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                           )); __typeof__ ((perimeter * perimeter)) _b = ((perimeter * perimeter)); _b ? (_a / _b) : 0; }));
}
static const mp_obj_fun_builtin_fixed_t py_blob_compactness_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_compactness};

mp_obj_t py_blob_solidity(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);


    float min_area = (((x0 * y1) + (x1 * y2) + (x2 * y3) + (x3 * y0)) - ((y0 * x1) + (y1 * x2) + (y2 * x3) + (y3 * x0))) / 2.0f;
    int pixels = mp_obj_get_int(((py_blob_obj_t *) self_in)->pixels);
    return mp_obj_new_float(({__typeof__ (({ __typeof__ (pixels) _a = (pixels); __typeof__ (min_area) _b = (min_area); _b ? (_a / _b) : 0; })) _a = (({ __typeof__ (pixels) _a = (pixels); __typeof__ (min_area) _b = (min_area); _b ? (_a / _b) : 0; })); __typeof__ (1) _b = (1); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); }));
}
static const mp_obj_fun_builtin_fixed_t py_blob_solidity_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_solidity};

mp_obj_t py_blob_convexity(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    float d0 = fast_sqrtf(((x0 - x1) * (x0 - x1)) + ((y0 - y1) * (y0 - y1)));
    float d1 = fast_sqrtf(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));
    float d2 = fast_sqrtf(((x2 - x3) * (x2 - x3)) + ((y2 - y3) * (y2 - y3)));
    float d3 = fast_sqrtf(((x3 - x0) * (x3 - x0)) + ((y3 - y0) * (y3 - y0)));
    int perimeter = mp_obj_get_int(((py_blob_obj_t *) self_in)->perimeter);
    return mp_obj_new_float(({__typeof__ (({ __typeof__ (d0 + d1 + d2 + d3) _a = (d0 + d1 + d2 + d3); __typeof__ (perimeter) _b = (perimeter); _b ? (_a / _b) : 0; })) _a = (({ __typeof__ (d0 + d1 + d2 + d3) _a = (d0 + d1 + d2 + d3); __typeof__ (perimeter) _b = (perimeter); _b ? (_a / _b) : 0; })); __typeof__ (1) _b = (1); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); }));
}
static const mp_obj_fun_builtin_fixed_t py_blob_convexity_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_convexity};





mp_obj_t py_blob_x_hist_bins(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->x_hist_bins;
}
static const mp_obj_fun_builtin_fixed_t py_blob_x_hist_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_x_hist_bins};

mp_obj_t py_blob_y_hist_bins(mp_obj_t self_in) {
    return ((py_blob_obj_t *) self_in)->y_hist_bins;
}
static const mp_obj_fun_builtin_fixed_t py_blob_y_hist_bins_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_y_hist_bins};

mp_obj_t py_blob_major_axis_line(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    int m0x = (x0 + x1) / 2;
    int m0y = (y0 + y1) / 2;
    int m1x = (x1 + x2) / 2;
    int m1y = (y1 + y2) / 2;
    int m2x = (x2 + x3) / 2;
    int m2y = (y2 + y3) / 2;
    int m3x = (x3 + x0) / 2;
    int m3y = (y3 + y0) / 2;

    float l0 = fast_sqrtf(((m0x - m2x) * (m0x - m2x)) + ((m0y - m2y) * (m0y - m2y)));
    float l1 = fast_sqrtf(((m1x - m3x) * (m1x - m3x)) + ((m1y - m3y) * (m1y - m3y)));

    if (l0 >= l1) {
        return mp_obj_new_tuple(4, (mp_obj_t []) {mp_obj_new_int(m0x),
                                                  mp_obj_new_int(m0y),
                                                  mp_obj_new_int(m2x),
                                                  mp_obj_new_int(m2y)});
    } else {
        return mp_obj_new_tuple(4, (mp_obj_t []) {mp_obj_new_int(m1x),
                                                  mp_obj_new_int(m1y),
                                                  mp_obj_new_int(m3x),
                                                  mp_obj_new_int(m3y)});
    }
}
static const mp_obj_fun_builtin_fixed_t py_blob_major_axis_line_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_major_axis_line};

mp_obj_t py_blob_minor_axis_line(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    int m0x = (x0 + x1) / 2;
    int m0y = (y0 + y1) / 2;
    int m1x = (x1 + x2) / 2;
    int m1y = (y1 + y2) / 2;
    int m2x = (x2 + x3) / 2;
    int m2y = (y2 + y3) / 2;
    int m3x = (x3 + x0) / 2;
    int m3y = (y3 + y0) / 2;

    float l0 = fast_sqrtf(((m0x - m2x) * (m0x - m2x)) + ((m0y - m2y) * (m0y - m2y)));
    float l1 = fast_sqrtf(((m1x - m3x) * (m1x - m3x)) + ((m1y - m3y) * (m1y - m3y)));

    if (l0 < l1) {
        return mp_obj_new_tuple(4, (mp_obj_t []) {mp_obj_new_int(m0x),
                                                  mp_obj_new_int(m0y),
                                                  mp_obj_new_int(m2x),
                                                  mp_obj_new_int(m2y)});
    } else {
        return mp_obj_new_tuple(4, (mp_obj_t []) {mp_obj_new_int(m1x),
                                                  mp_obj_new_int(m1y),
                                                  mp_obj_new_int(m3x),
                                                  mp_obj_new_int(m3y)});
    }
}
static const mp_obj_fun_builtin_fixed_t py_blob_minor_axis_line_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_minor_axis_line};

mp_obj_t py_blob_enclosing_circle(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    int cx = (x0 + x1 + x2 + x3) / 4;
    int cy = (y0 + y1 + y2 + y3) / 4;

    float d0 = fast_sqrtf(((x0 - cx) * (x0 - cx)) + ((y0 - cy) * (y0 - cy)));
    float d1 = fast_sqrtf(((x1 - cx) * (x1 - cx)) + ((y1 - cy) * (y1 - cy)));
    float d2 = fast_sqrtf(((x2 - cx) * (x2 - cx)) + ((y2 - cy) * (y2 - cy)));
    float d3 = fast_sqrtf(((x3 - cx) * (x3 - cx)) + ((y3 - cy) * (y3 - cy)));
    float d = ({__typeof__ (d0) _a = (d0); __typeof__ (({__typeof__ (d1) _a = (d1); __typeof__ (({__typeof__ (d2) _a = (d2); __typeof__ (d3) _b = (d3); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })) _b = (({__typeof__ (d2) _a = (d2); __typeof__ (d3) _b = (d3); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })) _b = (({__typeof__ (d1) _a = (d1); __typeof__ (({__typeof__ (d2) _a = (d2); __typeof__ (d3) _b = (d3); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })) _b = (({__typeof__ (d2) _a = (d2); __typeof__ (d3) _b = (d3); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); });

    return mp_obj_new_tuple(3, (mp_obj_t []) {mp_obj_new_int(cx),
                                              mp_obj_new_int(cy),
                                              mp_obj_new_int(fast_roundf(d))});
}
static const mp_obj_fun_builtin_fixed_t py_blob_enclosing_circle_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_enclosing_circle};

mp_obj_t py_blob_enclosed_ellipse(mp_obj_t self_in) {
    mp_obj_t *corners, *p0, *p1, *p2, *p3;
    mp_obj_get_array_fixed_n(((py_blob_obj_t *) self_in)->min_corners, 4, &corners);
    mp_obj_get_array_fixed_n(corners[0], 2, &p0);
    mp_obj_get_array_fixed_n(corners[1], 2, &p1);
    mp_obj_get_array_fixed_n(corners[2], 2, &p2);
    mp_obj_get_array_fixed_n(corners[3], 2, &p3);

    int x0, y0, x1, y1, x2, y2, x3, y3;
    x0 = mp_obj_get_int(p0[0]);
    y0 = mp_obj_get_int(p0[1]);
    x1 = mp_obj_get_int(p1[0]);
    y1 = mp_obj_get_int(p1[1]);
    x2 = mp_obj_get_int(p2[0]);
    y2 = mp_obj_get_int(p2[1]);
    x3 = mp_obj_get_int(p3[0]);
    y3 = mp_obj_get_int(p3[1]);

    int m0x = (x0 + x1) / 2;
    int m0y = (y0 + y1) / 2;
    int m1x = (x1 + x2) / 2;
    int m1y = (y1 + y2) / 2;
    int m2x = (x2 + x3) / 2;
    int m2y = (y2 + y3) / 2;
    int m3x = (x3 + x0) / 2;
    int m3y = (y3 + y0) / 2;

    int cx = (x0 + x1 + x2 + x3) / 4;
    int cy = (y0 + y1 + y2 + y3) / 4;

    float d0 = fast_sqrtf(((m0x - cx) * (m0x - cx)) + ((m0y - cy) * (m0y - cy)));
    float d1 = fast_sqrtf(((m1x - cx) * (m1x - cx)) + ((m1y - cy) * (m1y - cy)));
    float d2 = fast_sqrtf(((m2x - cx) * (m2x - cx)) + ((m2y - cy) * (m2y - cy)));
    float d3 = fast_sqrtf(((m3x - cx) * (m3x - cx)) + ((m3y - cy) * (m3y - cy)));
    float a = ({__typeof__ (d0) _a = (d0); __typeof__ (d2) _b = (d2); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); });
    float b = ({__typeof__ (d1) _a = (d1); __typeof__ (d3) _b = (d3); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); });

    float l0 = fast_sqrtf(((m0x - m2x) * (m0x - m2x)) + ((m0y - m2y) * (m0y - m2y)));
    float l1 = fast_sqrtf(((m1x - m3x) * (m1x - m3x)) + ((m1y - m3y) * (m1y - m3y)));

    float r;

    if (l0 >= l1) {
        r = (((fast_atan2f(m0y - m2y, m0x - m2x)) * 180) / 
# 4462 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           3.14159265358979323846
# 4462 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           );
    } else {
        r = (((fast_atan2f(m1y - m3y, m1x - m3x) + 
# 4464 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           1.57079632679489661923
# 4464 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           ) * 180) / 
# 4464 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           3.14159265358979323846
# 4464 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           );
    }

    return mp_obj_new_tuple(5, (mp_obj_t []) {mp_obj_new_int(cx),
                                              mp_obj_new_int(cy),
                                              mp_obj_new_int((int) a),
                                              mp_obj_new_int((int) b),
                                              mp_obj_new_int((int) r)});
}
static const mp_obj_fun_builtin_fixed_t py_blob_enclosed_ellipse_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_blob_enclosed_ellipse};

static const mp_rom_map_elem_t py_blob_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)), (&py_blob_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_min_corners)) << 3) | 2)), (&py_blob_min_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_blob_rect_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_blob_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_blob_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_blob_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_blob_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_pixels)) << 3) | 2)), (&py_blob_pixels_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cx)) << 3) | 2)), (&py_blob_cx_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cxf)) << 3) | 2)), (&py_blob_cxf_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cy)) << 3) | 2)), (&py_blob_cy_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cyf)) << 3) | 2)), (&py_blob_cyf_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation)) << 3) | 2)), (&py_blob_rotation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation_deg)) << 3) | 2)), (&py_blob_rotation_deg_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation_rad)) << 3) | 2)), (&py_blob_rotation_rad_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_code)) << 3) | 2)), (&py_blob_code_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_count)) << 3) | 2)), (&py_blob_count_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_perimeter)) << 3) | 2)), (&py_blob_perimeter_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_roundness)) << 3) | 2)), (&py_blob_roundness_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_elongation)) << 3) | 2)), (&py_blob_elongation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_area)) << 3) | 2)), (&py_blob_area_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_density)) << 3) | 2)), (&py_blob_density_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_extent)) << 3) | 2)), (&py_blob_density_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_compactness)) << 3) | 2)), (&py_blob_compactness_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_solidity)) << 3) | 2)), (&py_blob_solidity_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_convexity)) << 3) | 2)), (&py_blob_convexity_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_hist_bins)) << 3) | 2)), (&py_blob_x_hist_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_hist_bins)) << 3) | 2)), (&py_blob_y_hist_bins_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_major_axis_line)) << 3) | 2)), (&py_blob_major_axis_line_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_minor_axis_line)) << 3) | 2)), (&py_blob_minor_axis_line_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_enclosing_circle)) << 3) | 2)), (&py_blob_enclosing_circle_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_enclosed_ellipse)) << 3) | 2)), (&py_blob_enclosed_ellipse_obj) }
};

static const mp_obj_dict_t py_blob_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_blob_locals_dict_table) / sizeof((py_blob_locals_dict_table)[0])), .alloc = (sizeof(py_blob_locals_dict_table) / sizeof((py_blob_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_blob_locals_dict_table, }, };

static const mp_obj_type_t py_blob_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_blob, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_blob_print, py_blob_subscr, &py_blob_locals_dict, } }






     ;




static py_blob_obj_t *py_blob_new(find_blobs_list_lnk_data_t *blob) {
    point_t min_corners[4];

    py_blob_obj_t *o = (((py_blob_obj_t *)(m_malloc(sizeof(py_blob_obj_t) * (1)))));
    o->base.type = &py_blob_type;

    o->x = mp_obj_new_int(blob->rect.x);
    o->y = mp_obj_new_int(blob->rect.y);
    o->w = mp_obj_new_int(blob->rect.w);
    o->h = mp_obj_new_int(blob->rect.h);

    o->cx = mp_obj_new_float(blob->centroid_x);
    o->cy = mp_obj_new_float(blob->centroid_y);

    o->pixels = mp_obj_new_int(blob->pixels);
    o->rotation = mp_obj_new_float(blob->rotation);

    o->code = mp_obj_new_int(blob->code);
    o->count = mp_obj_new_int(blob->count);

    o->perimeter = mp_obj_new_int(blob->perimeter);
    o->roundness = mp_obj_new_float(blob->roundness);

    o->x_hist_bins = mp_obj_new_list(blob->x_hist_bins_count, 
# 4547 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                             ((void *)0)
# 4547 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                 );
    o->y_hist_bins = mp_obj_new_list(blob->y_hist_bins_count, 
# 4548 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                             ((void *)0)
# 4548 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                 );

    o->corners = mp_obj_new_tuple(4, (mp_obj_t []) {
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(blob->corners[(((20 * 0) / 4))].x), mp_obj_new_int(blob->corners[(((20 * 0) / 4))].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(blob->corners[(((20 * 1) / 4))].x), mp_obj_new_int(blob->corners[(((20 * 1) / 4))].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(blob->corners[(((20 * 2) / 4))].x), mp_obj_new_int(blob->corners[(((20 * 2) / 4))].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(blob->corners[(((20 * 3) / 4))].x), mp_obj_new_int(blob->corners[(((20 * 3) / 4))].y)})
    });

    point_min_area_rectangle(blob->corners, min_corners, 20);

    o->min_corners = mp_obj_new_tuple(4, (mp_obj_t []) {
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(min_corners[(0)].x), mp_obj_new_int(min_corners[(0)].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(min_corners[(1)].x), mp_obj_new_int(min_corners[(1)].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(min_corners[(2)].x), mp_obj_new_int(min_corners[(2)].y)}),
        mp_obj_new_tuple(2, (mp_obj_t []) {mp_obj_new_int(min_corners[(3)].x), mp_obj_new_int(min_corners[(3)].y)})
    });

    for (int i = 0; i < blob->x_hist_bins_count; i++) {
        ((mp_obj_list_t *) o->x_hist_bins)->items[i] = mp_obj_new_int(blob->x_hist_bins[i]);
    }

    for (int i = 0; i < blob->y_hist_bins_count; i++) {
        ((mp_obj_list_t *) o->y_hist_bins)->items[i] = mp_obj_new_int(blob->y_hist_bins[i]);
    }

    return o;
}
static 
# 4576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      _Bool 
# 4576 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           py_image_find_blobs_threshold_cb(void *fun_obj, find_blobs_list_lnk_data_t *blob) {
    return mp_obj_is_true(mp_call_function_1(fun_obj, py_blob_new(blob)));
}

static 
# 4580 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      _Bool 
# 4580 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           py_image_find_blobs_merge_cb(void *fun_obj, find_blobs_list_lnk_data_t *blob0, find_blobs_list_lnk_data_t *blob1) {
    return mp_obj_is_true(mp_call_function_2(fun_obj, py_blob_new(blob0), py_blob_new(blob1)));
}

static mp_obj_t py_image_find_blobs(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    list_t thresholds;
    list_init(&thresholds, sizeof(color_thresholds_list_lnk_data_t));
    py_helper_arg_to_thresholds(args[1], &thresholds);
    if (!list_size(&thresholds)) {
        return mp_obj_new_list(0, 
# 4591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                 ((void *)0)
# 4591 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                     );
    }
    
# 4593 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 4593 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        invert = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), 
# 4593 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  0
# 4593 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                       );

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 3, kw_args, &roi);

    unsigned int x_stride =
        py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_stride)) << 3) | 2)), 2);
    do { if ((x_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("x_stride must not be zero.")); } } while (0);
    unsigned int y_stride =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_stride)) << 3) | 2)), 1);
    do { if ((y_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("y_stride must not be zero.")); } } while (0);
    unsigned int area_threshold =
        py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_area_threshold)) << 3) | 2)), 10);
    unsigned int pixels_threshold =
        py_helper_keyword_int(n_args, args, 7, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_pixels_threshold)) << 3) | 2)), 10);
    
# 4608 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 4608 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        merge =
        py_helper_keyword_int(n_args, args, 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_merge)) << 3) | 2)), 
# 4609 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                       0
# 4609 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                            );
    int margin =
        py_helper_keyword_int(n_args, args, 9, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_margin)) << 3) | 2)), 0);
    mp_obj_t threshold_cb =
        py_helper_keyword_object(n_args, args, 10, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold_cb)) << 3) | 2)), 
# 4613 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                  ((void *)0)
# 4613 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                      );
    mp_obj_t merge_cb =
        py_helper_keyword_object(n_args, args, 11, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_merge_cb)) << 3) | 2)), 
# 4615 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                              ((void *)0)
# 4615 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                  );
    unsigned int x_hist_bins_max =
        py_helper_keyword_int(n_args, args, 12, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_hist_bins_max)) << 3) | 2)), 0);
    unsigned int y_hist_bins_max =
        py_helper_keyword_int(n_args, args, 13, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_hist_bins_max)) << 3) | 2)), 0);

    list_t out;
    fb_alloc_mark();
    imlib_find_blobs(&out,
                     arg_img,
                     &roi,
                     x_stride,
                     y_stride,
                     &thresholds,
                     invert,
                     area_threshold,
                     pixels_threshold,
                     merge,
                     margin,
                     py_image_find_blobs_threshold_cb,
                     threshold_cb,
                     py_image_find_blobs_merge_cb,
                     merge_cb,
                     x_hist_bins_max,
                     y_hist_bins_max);
    fb_alloc_free_till_mark();
    list_free(&thresholds);

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 4643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 4643 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_blobs_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);
        objects_list->items[i] = py_blob_new(&lnk_data);
        if (lnk_data.x_hist_bins) {
            xfree(lnk_data.x_hist_bins);
        }
        if (lnk_data.y_hist_bins) {
            xfree(lnk_data.y_hist_bins);
        }
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_blobs_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 4658 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 4658 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_blobs};


static mp_obj_t py_image_find_lines(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    unsigned int x_stride = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_stride)) << 3) | 2)), 2);
    do { if ((x_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("x_stride must not be zero.")); } } while (0);
    unsigned int y_stride = py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_stride)) << 3) | 2)), 1);
    do { if ((y_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("y_stride must not be zero.")); } } while (0);
    uint32_t threshold = py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 1000);
    unsigned int theta_margin = py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_theta_margin)) << 3) | 2)), 25);
    unsigned int rho_margin = py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rho_margin)) << 3) | 2)), 25);

    list_t out;
    fb_alloc_mark();
    imlib_find_lines(&out, arg_img, &roi, x_stride, y_stride, threshold, theta_margin, rho_margin);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 4680 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 4680 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_lines_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_line_obj_t *o = (((py_line_obj_t *)(m_malloc(sizeof(py_line_obj_t) * (1)))));
        o->base.type = &py_line_type;
        o->x1 = mp_obj_new_int(lnk_data.line.x1);
        o->y1 = mp_obj_new_int(lnk_data.line.y1);
        o->x2 = mp_obj_new_int(lnk_data.line.x2);
        o->y2 = mp_obj_new_int(lnk_data.line.y2);
        int x_diff = lnk_data.line.x2 - lnk_data.line.x1;
        int y_diff = lnk_data.line.y2 - lnk_data.line.y1;
        o->length = mp_obj_new_int(fast_roundf(fast_sqrtf((x_diff * x_diff) + (y_diff * y_diff))));
        o->magnitude = mp_obj_new_int(lnk_data.magnitude);
        o->theta = mp_obj_new_int(lnk_data.theta);
        o->rho = mp_obj_new_int(lnk_data.rho);

        objects_list->items[i] = o;
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_lines_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 4703 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 4703 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_lines};



static mp_obj_t py_image_find_line_segments(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    unsigned int merge_distance = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_merge_distance)) << 3) | 2)), 0);
    unsigned int max_theta_diff = py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_max_theta_diff)) << 3) | 2)), 15);

    list_t out;
    fb_alloc_mark();
    imlib_lsd_find_line_segments(&out, arg_img, &roi, merge_distance, max_theta_diff);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 4721 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 4721 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_lines_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_line_obj_t *o = (((py_line_obj_t *)(m_malloc(sizeof(py_line_obj_t) * (1)))));
        o->base.type = &py_line_type;
        o->x1 = mp_obj_new_int(lnk_data.line.x1);
        o->y1 = mp_obj_new_int(lnk_data.line.y1);
        o->x2 = mp_obj_new_int(lnk_data.line.x2);
        o->y2 = mp_obj_new_int(lnk_data.line.y2);
        int x_diff = lnk_data.line.x2 - lnk_data.line.x1;
        int y_diff = lnk_data.line.y2 - lnk_data.line.y1;
        o->length = mp_obj_new_int(fast_roundf(fast_sqrtf((x_diff * x_diff) + (y_diff * y_diff))));
        o->magnitude = mp_obj_new_int(lnk_data.magnitude);
        o->theta = mp_obj_new_int(lnk_data.theta);
        o->rho = mp_obj_new_int(lnk_data.rho);

        objects_list->items[i] = o;
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_line_segments_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 4744 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 4744 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_line_segments};





typedef struct py_circle_obj {
    mp_obj_base_t base;
    mp_obj_t x, y, r, magnitude;
} py_circle_obj_t;

static void py_circle_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_circle_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"r\":%d, \"magnitude\":%d}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->r),
              mp_obj_get_int(self->magnitude));
}

static mp_obj_t py_circle_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_circle_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4769 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(4, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 4774 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 4774 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 4, index, 
# 4778 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                        0
# 4778 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                             )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->r;
            case 3: return self->magnitude;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_circle_circle(mp_obj_t self_in) {
    return mp_obj_new_tuple(3, (mp_obj_t []) {((py_circle_obj_t *) self_in)->x,
                                              ((py_circle_obj_t *) self_in)->y,
                                              ((py_circle_obj_t *) self_in)->r});
}
static const mp_obj_fun_builtin_fixed_t py_circle_circle_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_circle_circle};

mp_obj_t py_circle_x(mp_obj_t self_in) {
    return ((py_circle_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_circle_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_circle_x};

mp_obj_t py_circle_y(mp_obj_t self_in) {
    return ((py_circle_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_circle_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_circle_y};

mp_obj_t py_circle_r(mp_obj_t self_in) {
    return ((py_circle_obj_t *) self_in)->r;
}
static const mp_obj_fun_builtin_fixed_t py_circle_r_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_circle_r};

mp_obj_t py_circle_magnitude(mp_obj_t self_in) {
    return ((py_circle_obj_t *) self_in)->magnitude;
}
static const mp_obj_fun_builtin_fixed_t py_circle_magnitude_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_circle_magnitude};

static const mp_rom_map_elem_t py_circle_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_circle)) << 3) | 2)), (&py_circle_circle_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_circle_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_circle_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r)) << 3) | 2)), (&py_circle_r_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_magnitude)) << 3) | 2)), (&py_circle_magnitude_obj) }
};

static const mp_obj_dict_t py_circle_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_circle_locals_dict_table) / sizeof((py_circle_locals_dict_table)[0])), .alloc = (sizeof(py_circle_locals_dict_table) / sizeof((py_circle_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_circle_locals_dict_table, }, };

static const mp_obj_type_t py_circle_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_circle, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_circle_print, py_circle_subscr, &py_circle_locals_dict, } }






     ;

static mp_obj_t py_image_find_circles(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    unsigned int x_stride = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_stride)) << 3) | 2)), 2);
    do { if ((x_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("x_stride must not be zero.")); } } while (0);
    unsigned int y_stride = py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_stride)) << 3) | 2)), 1);
    do { if ((y_stride > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("y_stride must not be zero.")); } } while (0);
    uint32_t threshold = py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 2000);
    unsigned int x_margin = py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_margin)) << 3) | 2)), 10);
    unsigned int y_margin = py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_margin)) << 3) | 2)), 10);
    unsigned int r_margin = py_helper_keyword_int(n_args, args, 7, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_margin)) << 3) | 2)), 10);
    unsigned int r_min = ({__typeof__ (py_helper_keyword_int(n_args, args, 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_min)) << 3) | 2)), 2)) _a = (py_helper_keyword_int(n_args, args, 8, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_min)) << 3) | 2)), 2)); __typeof__ (2) _b = (2); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a > _b ? _a : _b)); })
                                                            ;
    unsigned int r_max = ({__typeof__ (py_helper_keyword_int(n_args, args, 9, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_max)) << 3) | 2)), ({__typeof__ ((roi.w / 2)) _a = ((roi.w / 2)); __typeof__ ((roi.h / 2)) _b = ((roi.h / 2)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); }))) _a = (py_helper_keyword_int(n_args, args, 9, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_max)) << 3) | 2)), ({__typeof__ ((roi.w / 2)) _a = ((roi.w / 2)); __typeof__ ((roi.h / 2)) _b = ((roi.h / 2)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); }))); __typeof__ (({__typeof__ ((roi.w / 2)) _a = ((roi.w / 2)); __typeof__ ((roi.h / 2)) _b = ((roi.h / 2)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })) _b = (({__typeof__ ((roi.w / 2)) _a = ((roi.w / 2)); __typeof__ ((roi.h / 2)) _b = ((roi.h / 2)); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })); __builtin_choose_expr((((__builtin_types_compatible_p(__typeof__(_a), signed) || __builtin_types_compatible_p(__typeof__(_a), signed long)) && (__builtin_types_compatible_p(__typeof__(_b), unsigned) || __builtin_types_compatible_p(__typeof__(_b), unsigned long))) || ((__builtin_types_compatible_p(__typeof__(_b), signed) || __builtin_types_compatible_p(__typeof__(_b), signed long)) && (__builtin_types_compatible_p(__typeof__(_a), unsigned) || __builtin_types_compatible_p(__typeof__(_a), unsigned long)))), (void) 0, (_a < _b ? _a : _b)); })
                                                                                                                          ;
    unsigned int r_step = py_helper_keyword_int(n_args, args, 10, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_r_step)) << 3) | 2)), 2);

    list_t out;
    fb_alloc_mark();
    imlib_find_circles(&out, arg_img, &roi, x_stride, y_stride, threshold, x_margin, y_margin, r_margin,
                       r_min, r_max, r_step);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 4860 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 4860 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_circles_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_circle_obj_t *o = (((py_circle_obj_t *)(m_malloc(sizeof(py_circle_obj_t) * (1)))));
        o->base.type = &py_circle_type;
        o->x = mp_obj_new_int(lnk_data.p.x);
        o->y = mp_obj_new_int(lnk_data.p.y);
        o->r = mp_obj_new_int(lnk_data.r);
        o->magnitude = mp_obj_new_int(lnk_data.magnitude);

        objects_list->items[i] = o;
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_circles_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 4877 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 4877 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_circles};





typedef struct py_rect_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t x, y, w, h, magnitude;
} py_rect_obj_t;

static void py_rect_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_rect_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"magnitude\":%d}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_get_int(self->magnitude));
}

static mp_obj_t py_rect_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_rect_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 4904 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(5, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 4909 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 4909 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 5, index, 
# 4913 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                      0
# 4913 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                           )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->w;
            case 3: return self->h;
            case 4: return self->magnitude;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_rect_corners(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->corners;
}
static const mp_obj_fun_builtin_fixed_t py_rect_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_corners};

mp_obj_t py_rect_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_rect_obj_t *) self_in)->x,
                                              ((py_rect_obj_t *) self_in)->y,
                                              ((py_rect_obj_t *) self_in)->w,
                                              ((py_rect_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_rect_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_rect};

mp_obj_t py_rect_x(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_rect_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_x};

mp_obj_t py_rect_y(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_rect_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_y};

mp_obj_t py_rect_w(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_rect_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_w};

mp_obj_t py_rect_h(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_rect_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_h};

mp_obj_t py_rect_magnitude(mp_obj_t self_in) {
    return ((py_rect_obj_t *) self_in)->magnitude;
}
static const mp_obj_fun_builtin_fixed_t py_rect_magnitude_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_rect_magnitude};

static const mp_rom_map_elem_t py_rect_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)), (&py_rect_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_rect_rect_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_rect_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_rect_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_rect_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_rect_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_magnitude)) << 3) | 2)), (&py_rect_magnitude_obj) }
};

static const mp_obj_dict_t py_rect_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_rect_locals_dict_table) / sizeof((py_rect_locals_dict_table)[0])), .alloc = (sizeof(py_rect_locals_dict_table) / sizeof((py_rect_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_rect_locals_dict_table, }, };

static const mp_obj_type_t py_rect_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_rect, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_rect_print, py_rect_subscr, &py_rect_locals_dict, } }






     ;

static mp_obj_t py_image_find_rects(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    uint32_t threshold = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 1000);

    list_t out;
    fb_alloc_mark();
    imlib_find_rects(&out, arg_img, &roi, threshold);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 4996 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 4996 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_rects_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_rect_obj_t *o = (((py_rect_obj_t *)(m_malloc(sizeof(py_rect_obj_t) * (1)))));
        o->base.type = &py_rect_type;
        o->corners = mp_obj_new_tuple(4, (mp_obj_t [])
                                      {mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[0].x),
                                                                       mp_obj_new_int(lnk_data.corners[0].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[1].x),
                                                                       mp_obj_new_int(lnk_data.corners[1].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[2].x),
                                                                       mp_obj_new_int(lnk_data.corners[2].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[3].x),
                                                                       mp_obj_new_int(lnk_data.corners[3].y)})});
        o->x = mp_obj_new_int(lnk_data.rect.x);
        o->y = mp_obj_new_int(lnk_data.rect.y);
        o->w = mp_obj_new_int(lnk_data.rect.w);
        o->h = mp_obj_new_int(lnk_data.rect.h);
        o->magnitude = mp_obj_new_int(lnk_data.magnitude);

        objects_list->items[i] = o;
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_rects_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5027 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5027 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_rects};





typedef struct py_qrcode_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t x, y, w, h, payload, version, ecc_level, mask, data_type, eci;
} py_qrcode_obj_t;

static void py_qrcode_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_qrcode_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"payload\":\"%s\","
              " \"version\":%d, \"ecc_level\":%d, \"mask\":%d, \"data_type\":%d, \"eci\":%d}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_str_get_str(self->payload),
              mp_obj_get_int(self->version),
              mp_obj_get_int(self->ecc_level),
              mp_obj_get_int(self->mask),
              mp_obj_get_int(self->data_type),
              mp_obj_get_int(self->eci));
}

static mp_obj_t py_qrcode_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_qrcode_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(10, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 5065 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 5065 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 10, index, 
# 5069 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                        0
# 5069 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                             )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->w;
            case 3: return self->h;
            case 4: return self->payload;
            case 5: return self->version;
            case 6: return self->ecc_level;
            case 7: return self->mask;
            case 8: return self->data_type;
            case 9: return self->eci;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_qrcode_corners(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->corners;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_corners};

mp_obj_t py_qrcode_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_qrcode_obj_t *) self_in)->x,
                                              ((py_qrcode_obj_t *) self_in)->y,
                                              ((py_qrcode_obj_t *) self_in)->w,
                                              ((py_qrcode_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_rect};

mp_obj_t py_qrcode_x(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_x};

mp_obj_t py_qrcode_y(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_y};

mp_obj_t py_qrcode_w(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_w};

mp_obj_t py_qrcode_h(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_h};

mp_obj_t py_qrcode_payload(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->payload;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_payload_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_payload};

mp_obj_t py_qrcode_version(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->version;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_version_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_version};

mp_obj_t py_qrcode_ecc_level(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->ecc_level;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_ecc_level_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_ecc_level};

mp_obj_t py_qrcode_mask(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->mask;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_mask_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_mask};

mp_obj_t py_qrcode_data_type(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->data_type;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_data_type_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_data_type};

mp_obj_t py_qrcode_eci(mp_obj_t self_in) {
    return ((py_qrcode_obj_t *) self_in)->eci;
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_eci_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_eci};

mp_obj_t py_qrcode_is_numeric(mp_obj_t self_in) {
    return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 1);
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_is_numeric_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_is_numeric};

mp_obj_t py_qrcode_is_alphanumeric(mp_obj_t self_in) {
    return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 2);
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_is_alphanumeric_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_is_alphanumeric};

mp_obj_t py_qrcode_is_binary(mp_obj_t self_in) {
    return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 4);
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_is_binary_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_is_binary};

mp_obj_t py_qrcode_is_kanji(mp_obj_t self_in) {
    return mp_obj_new_bool(mp_obj_get_int(((py_qrcode_obj_t *) self_in)->data_type) == 8);
}
static const mp_obj_fun_builtin_fixed_t py_qrcode_is_kanji_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_qrcode_is_kanji};

static const mp_rom_map_elem_t py_qrcode_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)), (&py_qrcode_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_qrcode_rect_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_qrcode_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_qrcode_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_qrcode_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_qrcode_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_payload)) << 3) | 2)), (&py_qrcode_payload_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_version)) << 3) | 2)), (&py_qrcode_version_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_ecc_level)) << 3) | 2)), (&py_qrcode_ecc_level_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask)) << 3) | 2)), (&py_qrcode_mask_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_data_type)) << 3) | 2)), (&py_qrcode_data_type_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_eci)) << 3) | 2)), (&py_qrcode_eci_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_is_numeric)) << 3) | 2)), (&py_qrcode_is_numeric_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_is_alphanumeric)) << 3) | 2)), (&py_qrcode_is_alphanumeric_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_is_binary)) << 3) | 2)), (&py_qrcode_is_binary_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_is_kanji)) << 3) | 2)), (&py_qrcode_is_kanji_obj) }
};

static const mp_obj_dict_t py_qrcode_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_qrcode_locals_dict_table) / sizeof((py_qrcode_locals_dict_table)[0])), .alloc = (sizeof(py_qrcode_locals_dict_table) / sizeof((py_qrcode_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_qrcode_locals_dict_table, }, };

static const mp_obj_type_t py_qrcode_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_qrcode, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_qrcode_print, py_qrcode_subscr, &py_qrcode_locals_dict, } }






     ;

static mp_obj_t py_image_find_qrcodes(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    list_t out;
    fb_alloc_mark();
    imlib_find_qrcodes(&out, arg_img, &roi);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 5209 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 5209 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_qrcodes_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_qrcode_obj_t *o = (((py_qrcode_obj_t *)(m_malloc(sizeof(py_qrcode_obj_t) * (1)))));
        o->base.type = &py_qrcode_type;
        o->corners = mp_obj_new_tuple(4, (mp_obj_t [])
                                      {mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[0].x),
                                                                       mp_obj_new_int(lnk_data.corners[0].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[1].x),
                                                                       mp_obj_new_int(lnk_data.corners[1].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[2].x),
                                                                       mp_obj_new_int(lnk_data.corners[2].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[3].x),
                                                                       mp_obj_new_int(lnk_data.corners[3].y)})});
        o->x = mp_obj_new_int(lnk_data.rect.x);
        o->y = mp_obj_new_int(lnk_data.rect.y);
        o->w = mp_obj_new_int(lnk_data.rect.w);
        o->h = mp_obj_new_int(lnk_data.rect.h);
        o->payload = mp_obj_new_str(lnk_data.payload, lnk_data.payload_len);
        o->version = mp_obj_new_int(lnk_data.version);
        o->ecc_level = mp_obj_new_int(lnk_data.ecc_level);
        o->mask = mp_obj_new_int(lnk_data.mask);
        o->data_type = mp_obj_new_int(lnk_data.data_type);
        o->eci = mp_obj_new_int(lnk_data.eci);

        objects_list->items[i] = o;
        xfree(lnk_data.payload);
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_qrcodes_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5246 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5246 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_qrcodes};





typedef struct py_apriltag_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t x, y, w, h, id, family, cx, cy, rotation, decision_margin, hamming, goodness;
    mp_obj_t x_translation, y_translation, z_translation;
    mp_obj_t x_rotation, y_rotation, z_rotation;
} py_apriltag_obj_t;

static void py_apriltag_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_apriltag_obj_t *self = ((void *)(self_in));
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"id\":%d,"
              " \"family\":%d, \"cx\":%d, \"cy\":%d, \"rotation\":%f, \"decision_margin\":%f, \"hamming\":%d, \"goodness\":%f,"
              " \"x_translation\":%f, \"y_translation\":%f, \"z_translation\":%f,"
              " \"x_rotation\":%f, \"y_rotation\":%f, \"z_rotation\":%f}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_get_int(self->id),
              mp_obj_get_int(self->family),
              mp_obj_get_int(self->cx),
              mp_obj_get_int(self->cy),
              (double) mp_obj_get_float(self->rotation),
              (double) mp_obj_get_float(self->decision_margin),
              mp_obj_get_int(self->hamming),
              (double) mp_obj_get_float(self->goodness),
              (double) mp_obj_get_float(self->x_translation),
              (double) mp_obj_get_float(self->y_translation),
              (double) mp_obj_get_float(self->z_translation),
              (double) mp_obj_get_float(self->x_rotation),
              (double) mp_obj_get_float(self->y_rotation),
              (double) mp_obj_get_float(self->z_rotation));
}

static void py_apriltag_attr(mp_obj_t self_in, qstr attr, mp_obj_t *dest) {
    py_apriltag_obj_t *self = ((void *)(self_in));
    if (dest[0] == (((mp_obj_t)((void *)0)))) {

        switch (attr) {
            case MP_QSTR_corners:
                dest[0] = self->corners;
                break;
            case MP_QSTR_rect:
                dest[0] = mp_obj_new_tuple(4, (mp_obj_t []) { self->x, self->y, self->w, self->h });
                break;
            case MP_QSTR_x:
                dest[0] = self->x;
                break;
            case MP_QSTR_y:
                dest[0] = self->y;
                break;
            case MP_QSTR_w:
                dest[0] = self->w;
                break;
            case MP_QSTR_h:
                dest[0] = self->h;
                break;
            case MP_QSTR_area:
                dest[0] = mp_obj_new_int(mp_obj_get_int(self->w) * mp_obj_get_int(self->h));
                break;
            case MP_QSTR_id:
                dest[0] = self->id;
                break;
            case MP_QSTR_family:
                dest[0] = self->family;
                break;
            case MP_QSTR_name:
                switch (mp_obj_get_int(self->family)) {

                    case TAG16H5:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG16H5)) << 3) | 2));
                        break;


                    case TAG25H7:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG25H7)) << 3) | 2));
                        break;


                    case TAG25H9:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG25H9)) << 3) | 2));
                        break;


                    case TAG36H10:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG36H10)) << 3) | 2));
                        break;


                    case TAG36H11:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG36H11)) << 3) | 2));
                        break;


                    case ARTOOLKIT:
                        dest[0] = ((mp_obj_t)((((mp_uint_t)(MP_QSTR_ARTOOLKIT)) << 3) | 2));
                        break;

                }
                break;
            case MP_QSTR_cx:
                dest[0] = mp_obj_new_int(fast_roundf(mp_obj_get_float(self->cx)));
                break;
            case MP_QSTR_cxf:
                dest[0] = self->cx;
                break;
            case MP_QSTR_cy:
                dest[0] = mp_obj_new_int(fast_roundf(mp_obj_get_float(self->cy)));
                break;
            case MP_QSTR_cyf:
                dest[0] = self->cy;
                break;
            case MP_QSTR_rotation:
                dest[0] = self->rotation;
                break;
            case MP_QSTR_decision_margin:
                dest[0] = self->decision_margin;
                break;
            case MP_QSTR_hamming:
                dest[0] = self->hamming;
                break;
            case MP_QSTR_goodness:
                dest[0] = self->goodness;
                break;
            case MP_QSTR_x_translation:
                dest[0] = self->x_translation;
                break;
            case MP_QSTR_y_translation:
                dest[0] = self->y_translation;
                break;
            case MP_QSTR_z_translation:
                dest[0] = self->z_translation;
                break;
            case MP_QSTR_x_rotation:
                dest[0] = self->x_rotation;
                break;
            case MP_QSTR_y_rotation:
                dest[0] = self->y_rotation;
                break;
            case MP_QSTR_z_rotation:
                dest[0] = self->z_rotation;
                break;
            default:

                dest[1] = (((mp_obj_t)((void *)4)));
                break;
        }
    }
}

static const mp_obj_type_t py_apriltag_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_apriltag, .slot_index_attr = 1, .slot_index_print = 2, .slots = { py_apriltag_attr, py_apriltag_print, } }





     ;

static mp_obj_t py_image_find_apriltags(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);



    if ((roi.w < 4) || (roi.h < 4)) {
        return mp_obj_new_list(0, 
# 5420 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                 ((void *)0)
# 5420 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                     );
    }

    apriltag_families_t families = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_families)) << 3) | 2)), TAG36H11);

    float fx = py_helper_keyword_float(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fx)) << 3) | 2)), (2.8 / 3.984) * arg_img->w);

    float fy = py_helper_keyword_float(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fy)) << 3) | 2)), (2.8 / 2.952) * arg_img->h);

    float cx = py_helper_keyword_float(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cx)) << 3) | 2)), arg_img->w * 0.5);

    float cy = py_helper_keyword_float(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_cy)) << 3) | 2)), arg_img->h * 0.5);

    list_t out;
    fb_alloc_mark();
    imlib_find_apriltags(&out, arg_img, &roi, families, fx, fy, cx, cy);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 5438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 5438 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_apriltags_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_apriltag_obj_t *o = (((py_apriltag_obj_t *)(m_malloc(sizeof(py_apriltag_obj_t) * (1)))));
        o->base.type = &py_apriltag_type;
        o->corners = mp_obj_new_tuple(4, (mp_obj_t [])
                                      {mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[0].x),
                                                                       mp_obj_new_int(lnk_data.corners[0].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[1].x),
                                                                       mp_obj_new_int(lnk_data.corners[1].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[2].x),
                                                                       mp_obj_new_int(lnk_data.corners[2].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[3].x),
                                                                       mp_obj_new_int(lnk_data.corners[3].y)})});
        o->x = mp_obj_new_int(lnk_data.rect.x);
        o->y = mp_obj_new_int(lnk_data.rect.y);
        o->w = mp_obj_new_int(lnk_data.rect.w);
        o->h = mp_obj_new_int(lnk_data.rect.h);
        o->id = mp_obj_new_int(lnk_data.id);
        o->family = mp_obj_new_int(lnk_data.family);
        o->cx = mp_obj_new_int((int) lnk_data.centroid_x);
        o->cy = mp_obj_new_int((int) lnk_data.centroid_y);
        o->rotation = mp_obj_new_float(lnk_data.z_rotation);
        o->decision_margin = mp_obj_new_float(lnk_data.decision_margin);
        o->hamming = mp_obj_new_int(lnk_data.hamming);
        o->goodness = mp_obj_new_float(lnk_data.goodness);
        o->x_translation = mp_obj_new_float(lnk_data.x_translation);
        o->y_translation = mp_obj_new_float(lnk_data.y_translation);
        o->z_translation = mp_obj_new_float(lnk_data.z_translation);
        o->x_rotation = mp_obj_new_float(lnk_data.x_rotation);
        o->y_rotation = mp_obj_new_float(lnk_data.y_rotation);
        o->z_rotation = mp_obj_new_float(lnk_data.z_rotation);

        objects_list->items[i] = o;
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_apriltags_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5482 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5482 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_apriltags};





typedef struct py_datamatrix_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t x, y, w, h, payload, rotation, rows, columns, capacity, padding;
} py_datamatrix_obj_t;

static void py_datamatrix_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_datamatrix_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"payload\":\"%s\","
              " \"rotation\":%f, \"rows\":%d, \"columns\":%d, \"capacity\":%d, \"padding\":%d}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_str_get_str(self->payload),
              (double) mp_obj_get_float(self->rotation),
              mp_obj_get_int(self->rows),
              mp_obj_get_int(self->columns),
              mp_obj_get_int(self->capacity),
              mp_obj_get_int(self->padding));
}

static mp_obj_t py_datamatrix_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_datamatrix_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5515 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(10, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 5520 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 5520 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 10, index, 
# 5524 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                            0
# 5524 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                 )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->w;
            case 3: return self->h;
            case 4: return self->payload;
            case 5: return self->rotation;
            case 6: return self->rows;
            case 7: return self->columns;
            case 8: return self->capacity;
            case 9: return self->padding;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_datamatrix_corners(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->corners;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_corners};

mp_obj_t py_datamatrix_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_datamatrix_obj_t *) self_in)->x,
                                              ((py_datamatrix_obj_t *) self_in)->y,
                                              ((py_datamatrix_obj_t *) self_in)->w,
                                              ((py_datamatrix_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_rect};

mp_obj_t py_datamatrix_x(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_x};

mp_obj_t py_datamatrix_y(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_y};

mp_obj_t py_datamatrix_w(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_w};

mp_obj_t py_datamatrix_h(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_h};

mp_obj_t py_datamatrix_payload(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->payload;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_payload_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_payload};

mp_obj_t py_datamatrix_rotation(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->rotation;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_rotation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_rotation};

mp_obj_t py_datamatrix_rows(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->rows;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_rows_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_rows};

mp_obj_t py_datamatrix_columns(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->columns;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_columns_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_columns};

mp_obj_t py_datamatrix_capacity(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->capacity;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_capacity_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_capacity};

mp_obj_t py_datamatrix_padding(mp_obj_t self_in) {
    return ((py_datamatrix_obj_t *) self_in)->padding;
}
static const mp_obj_fun_builtin_fixed_t py_datamatrix_padding_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_datamatrix_padding};

static const mp_rom_map_elem_t py_datamatrix_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)), (&py_datamatrix_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_datamatrix_rect_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_datamatrix_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_datamatrix_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_datamatrix_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_datamatrix_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_payload)) << 3) | 2)), (&py_datamatrix_payload_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation)) << 3) | 2)), (&py_datamatrix_rotation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rows)) << 3) | 2)), (&py_datamatrix_rows_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_columns)) << 3) | 2)), (&py_datamatrix_columns_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_capacity)) << 3) | 2)), (&py_datamatrix_capacity_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_padding)) << 3) | 2)), (&py_datamatrix_padding_obj) }
};

static const mp_obj_dict_t py_datamatrix_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_datamatrix_locals_dict_table) / sizeof((py_datamatrix_locals_dict_table)[0])), .alloc = (sizeof(py_datamatrix_locals_dict_table) / sizeof((py_datamatrix_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_datamatrix_locals_dict_table, }, };

static const mp_obj_type_t py_datamatrix_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_datamatrix, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_datamatrix_print, py_datamatrix_subscr, &py_datamatrix_locals_dict, } }






     ;

static mp_obj_t py_image_find_datamatrices(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    int effort = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_effort)) << 3) | 2)), 200);

    list_t out;
    fb_alloc_mark();
    imlib_find_datamatrices(&out, arg_img, &roi, effort);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 5642 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 5642 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_datamatrices_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_datamatrix_obj_t *o = (((py_datamatrix_obj_t *)(m_malloc(sizeof(py_datamatrix_obj_t) * (1)))));
        o->base.type = &py_datamatrix_type;
        o->corners = mp_obj_new_tuple(4, (mp_obj_t [])
                                      {mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[0].x),
                                                                       mp_obj_new_int(lnk_data.corners[0].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[1].x),
                                                                       mp_obj_new_int(lnk_data.corners[1].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[2].x),
                                                                       mp_obj_new_int(lnk_data.corners[2].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[3].x),
                                                                       mp_obj_new_int(lnk_data.corners[3].y)})});
        o->x = mp_obj_new_int(lnk_data.rect.x);
        o->y = mp_obj_new_int(lnk_data.rect.y);
        o->w = mp_obj_new_int(lnk_data.rect.w);
        o->h = mp_obj_new_int(lnk_data.rect.h);
        o->payload = mp_obj_new_str(lnk_data.payload, lnk_data.payload_len);
        o->rotation = mp_obj_new_float((((lnk_data.rotation) * 
# 5667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                      3.14159265358979323846
# 5667 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                      ) / 180));
        o->rows = mp_obj_new_int(lnk_data.rows);
        o->columns = mp_obj_new_int(lnk_data.columns);
        o->capacity = mp_obj_new_int(lnk_data.capacity);
        o->padding = mp_obj_new_int(lnk_data.padding);

        objects_list->items[i] = o;
        xfree(lnk_data.payload);
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_datamatrices_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5679 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_datamatrices};





typedef struct py_barcode_obj {
    mp_obj_base_t base;
    mp_obj_t corners;
    mp_obj_t x, y, w, h, payload, type, rotation, quality;
} py_barcode_obj_t;

static void py_barcode_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_barcode_obj_t *self = self_in;
    mp_printf(print,
              "{\"x\":%d, \"y\":%d, \"w\":%d, \"h\":%d, \"payload\":\"%s\","
              " \"type\":%d, \"rotation\":%f, \"quality\":%d}",
              mp_obj_get_int(self->x),
              mp_obj_get_int(self->y),
              mp_obj_get_int(self->w),
              mp_obj_get_int(self->h),
              mp_obj_str_get_str(self->payload),
              mp_obj_get_int(self->type),
              (double) mp_obj_get_float(self->rotation),
              mp_obj_get_int(self->quality));
}

static mp_obj_t py_barcode_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_barcode_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5710 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(8, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 5715 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 5715 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 8, index, 
# 5719 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                         0
# 5719 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                              )) {
            case 0: return self->x;
            case 1: return self->y;
            case 2: return self->w;
            case 3: return self->h;
            case 4: return self->payload;
            case 5: return self->type;
            case 6: return self->rotation;
            case 7: return self->quality;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_barcode_corners(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->corners;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_corners_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_corners};

mp_obj_t py_barcode_rect(mp_obj_t self_in) {
    return mp_obj_new_tuple(4, (mp_obj_t []) {((py_barcode_obj_t *) self_in)->x,
                                              ((py_barcode_obj_t *) self_in)->y,
                                              ((py_barcode_obj_t *) self_in)->w,
                                              ((py_barcode_obj_t *) self_in)->h});
}
static const mp_obj_fun_builtin_fixed_t py_barcode_rect_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_rect};

mp_obj_t py_barcode_x(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->x;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_x_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_x};

mp_obj_t py_barcode_y(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->y;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_y_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_y};

mp_obj_t py_barcode_w(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->w;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_w_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_w};

mp_obj_t py_barcode_h(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->h;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_h_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_h};

mp_obj_t py_barcode_payload_fun(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->payload;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_payload_fun_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_payload_fun};

mp_obj_t py_barcode_type_fun(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->type;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_type_fun_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_type_fun};

mp_obj_t py_barcode_rotation_fun(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->rotation;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_rotation_fun_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_rotation_fun};

mp_obj_t py_barcode_quality_fun(mp_obj_t self_in) {
    return ((py_barcode_obj_t *) self_in)->quality;
}
static const mp_obj_fun_builtin_fixed_t py_barcode_quality_fun_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_barcode_quality_fun};

static const mp_rom_map_elem_t py_barcode_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corners)) << 3) | 2)), (&py_barcode_corners_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rect)) << 3) | 2)), (&py_barcode_rect_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x)) << 3) | 2)), (&py_barcode_x_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y)) << 3) | 2)), (&py_barcode_y_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_w)) << 3) | 2)), (&py_barcode_w_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_h)) << 3) | 2)), (&py_barcode_h_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_payload)) << 3) | 2)), (&py_barcode_payload_fun_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_type)) << 3) | 2)), (&py_barcode_type_fun_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation)) << 3) | 2)), (&py_barcode_rotation_fun_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_quality)) << 3) | 2)), (&py_barcode_quality_fun_obj) }
};

static const mp_obj_dict_t py_barcode_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_barcode_locals_dict_table) / sizeof((py_barcode_locals_dict_table)[0])), .alloc = (sizeof(py_barcode_locals_dict_table) / sizeof((py_barcode_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_barcode_locals_dict_table, }, };

static const mp_obj_type_t py_barcode_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_barcode, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_barcode_print, py_barcode_subscr, &py_barcode_locals_dict, } }






     ;

static mp_obj_t py_image_find_barcodes(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_image_cobj(args[0]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    list_t out;
    fb_alloc_mark();
    imlib_find_barcodes(&out, arg_img, &roi);
    fb_alloc_free_till_mark();

    mp_obj_list_t *objects_list = mp_obj_new_list(list_size(&out), 
# 5821 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                  ((void *)0)
# 5821 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                      );
    for (size_t i = 0; list_size(&out); i++) {
        find_barcodes_list_lnk_data_t lnk_data;
        list_pop_front(&out, &lnk_data);

        py_barcode_obj_t *o = (((py_barcode_obj_t *)(m_malloc(sizeof(py_barcode_obj_t) * (1)))));
        o->base.type = &py_barcode_type;
        o->corners = mp_obj_new_tuple(4, (mp_obj_t [])
                                      {mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[0].x),
                                                                       mp_obj_new_int(lnk_data.corners[0].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[1].x),
                                                                       mp_obj_new_int(lnk_data.corners[1].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[2].x),
                                                                       mp_obj_new_int(lnk_data.corners[2].y)}),
                                       mp_obj_new_tuple(2,
                                                        (mp_obj_t []) {mp_obj_new_int(lnk_data.corners[3].x),
                                                                       mp_obj_new_int(lnk_data.corners[3].y)})});
        o->x = mp_obj_new_int(lnk_data.rect.x);
        o->y = mp_obj_new_int(lnk_data.rect.y);
        o->w = mp_obj_new_int(lnk_data.rect.w);
        o->h = mp_obj_new_int(lnk_data.rect.h);
        o->payload = mp_obj_new_str(lnk_data.payload, lnk_data.payload_len);
        o->type = mp_obj_new_int(lnk_data.type);
        o->rotation = mp_obj_new_float((((lnk_data.rotation) * 
# 5847 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
                                      3.14159265358979323846
# 5847 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                      ) / 180));
        o->quality = mp_obj_new_int(lnk_data.quality);

        objects_list->items[i] = o;
        xfree(lnk_data.payload);
    }

    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_barcodes_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5856 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5856 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_barcodes};





typedef struct py_displacement_obj {
    mp_obj_base_t base;
    mp_obj_t x_translation, y_translation, rotation, scale, response;
} py_displacement_obj_t;

static void py_displacement_print(const mp_print_t *print, mp_obj_t self_in, mp_print_kind_t kind) {
    py_displacement_obj_t *self = self_in;
    mp_printf(print,
              "{\"x_translation\":%f, \"y_translation\":%f, \"rotation\":%f, \"scale\":%f, \"response\":%f}",
              (double) mp_obj_get_float(self->x_translation),
              (double) mp_obj_get_float(self->y_translation),
              (double) mp_obj_get_float(self->rotation),
              (double) mp_obj_get_float(self->scale),
              (double) mp_obj_get_float(self->response));
}

static mp_obj_t py_displacement_subscr(mp_obj_t self_in, mp_obj_t index, mp_obj_t value) {
    if (value == (((mp_obj_t)((void *)4)))) {

        py_displacement_obj_t *self = self_in;
        if ((( ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_bool)])), 
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_int)])), 
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_str)])), 
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , ((void)sizeof(char[1 - 2 * !((&mp_type_slice) != &mp_type_NoneType)])), 
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
           ((void)0)
# 5882 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
           , 1) && (mp_obj_is_obj(index) && (((mp_obj_base_t *)((void *)(index)))->type == (&mp_type_slice))))) {
            mp_bound_slice_t slice;
            if (!mp_seq_get_fast_slice_indexes(5, index, &slice)) {
                mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("only slices with step=1 (aka None) are supported"));
            }
            mp_obj_tuple_t *result = mp_obj_new_tuple(slice.stop - slice.start, 
# 5887 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                               ((void *)0)
# 5887 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   );
            memcpy(result->items, &(self->x_translation) + slice.start, result->len * sizeof(mp_obj_t));
            return result;
        }
        switch (mp_get_index(self->base.type, 5, index, 
# 5891 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                              0
# 5891 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                   )) {
            case 0: return self->x_translation;
            case 1: return self->y_translation;
            case 2: return self->rotation;
            case 3: return self->scale;
            case 4: return self->response;
        }
    }
    return (((mp_obj_t)((void *)0)));
}

mp_obj_t py_displacement_x_translation(mp_obj_t self_in) {
    return ((py_displacement_obj_t *) self_in)->x_translation;
}
static const mp_obj_fun_builtin_fixed_t py_displacement_x_translation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_displacement_x_translation};

mp_obj_t py_displacement_y_translation(mp_obj_t self_in) {
    return ((py_displacement_obj_t *) self_in)->y_translation;
}
static const mp_obj_fun_builtin_fixed_t py_displacement_y_translation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_displacement_y_translation};

mp_obj_t py_displacement_rotation(mp_obj_t self_in) {
    return ((py_displacement_obj_t *) self_in)->rotation;
}
static const mp_obj_fun_builtin_fixed_t py_displacement_rotation_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_displacement_rotation};

mp_obj_t py_displacement_scale(mp_obj_t self_in) {
    return ((py_displacement_obj_t *) self_in)->scale;
}
static const mp_obj_fun_builtin_fixed_t py_displacement_scale_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_displacement_scale};

mp_obj_t py_displacement_response(mp_obj_t self_in) {
    return ((py_displacement_obj_t *) self_in)->response;
}
static const mp_obj_fun_builtin_fixed_t py_displacement_response_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_displacement_response};

static const mp_rom_map_elem_t py_displacement_locals_dict_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_x_translation)) << 3) | 2)), (&py_displacement_x_translation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_y_translation)) << 3) | 2)), (&py_displacement_y_translation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation)) << 3) | 2)), (&py_displacement_rotation_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_scale)) << 3) | 2)), (&py_displacement_scale_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_response)) << 3) | 2)), (&py_displacement_response_obj) }
};

static const mp_obj_dict_t py_displacement_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(py_displacement_locals_dict_table) / sizeof((py_displacement_locals_dict_table)[0])), .alloc = (sizeof(py_displacement_locals_dict_table) / sizeof((py_displacement_locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)py_displacement_locals_dict_table, }, };

static const mp_obj_type_t py_displacement_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_displacement, .slot_index_print = 1, .slot_index_subscr = 2, .slot_index_locals_dict = 3, .slots = { py_displacement_print, py_displacement_subscr, &py_displacement_locals_dict, } }






     ;

static mp_obj_t py_image_find_displacement(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    image_t *arg_template_img = py_helper_arg_to_image(args[1], ARG_IMAGE_MUTABLE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 2, kw_args, &roi);

    rectangle_t template_roi;
    py_helper_keyword_rectangle(arg_template_img, n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_template_roi)) << 3) | 2)),
                                &template_roi);

    do { if (((roi.w != template_roi.w) || (roi.h != template_roi.h)) == 1) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("ROI(w,h) != TEMPLATE_ROI(w,h)")); } } while (0);

    
# 5959 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 5959 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        logpolar = py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_logpolar)) << 3) | 2)), 
# 5959 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                      0
# 5959 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                           );
    
# 5960 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 5960 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        fix_rotation_scale =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_fix_rotation_scale)) << 3) | 2)), 
# 5961 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                    0
# 5961 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                         );

    float x, y, r, s, response;
    fb_alloc_mark();
    imlib_phasecorrelate(arg_img, arg_template_img, &roi, &template_roi, logpolar, fix_rotation_scale, &x, &y, &r, &s,
                         &response);
    fb_alloc_free_till_mark();

    py_displacement_obj_t *o = (((py_displacement_obj_t *)(m_malloc(sizeof(py_displacement_obj_t) * (1)))));
    o->base.type = &py_displacement_type;
    o->x_translation = mp_obj_new_float(x);
    o->y_translation = mp_obj_new_float(y);
    o->rotation = mp_obj_new_float(r);
    o->scale = mp_obj_new_float(s);
    o->response = mp_obj_new_float(response);

    return o;
}
static const mp_obj_fun_builtin_var_t py_image_find_displacement_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 5979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 5979 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_displacement};



static mp_obj_t py_image_find_template(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_GRAYSCALE);
    image_t *arg_template = py_helper_arg_to_image(args[1], ARG_IMAGE_GRAYSCALE);
    float arg_thresh = mp_obj_get_float(args[2]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 3, kw_args, &roi);


    do { if (((roi.w >= arg_template->w && roi.h >= arg_template->h)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Region of interest is smaller than template!")); } } while (0)
                                                                      ;


    do { if ((((roi.x + roi.w) <= arg_img->w && (roi.y + roi.h) <= arg_img->h)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Region of interest is bigger than image!")); } } while (0)
                                                                  ;

    int step = py_helper_keyword_int(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_step)) << 3) | 2)), 2);
    int search = py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_search)) << 3) | 2)), SEARCH_EX);


    rectangle_t r;
    float corr;
    fb_alloc_mark();
    if (search == SEARCH_DS) {
        corr = imlib_template_match_ds(arg_img, arg_template, &r);
    } else {
        corr = imlib_template_match_ex(arg_img, arg_template, &roi, step, &r);
    }
    fb_alloc_free_till_mark();

    if (corr > arg_thresh) {
        mp_obj_t rec_obj[4] = {
            mp_obj_new_int(r.x),
            mp_obj_new_int(r.y),
            mp_obj_new_int(r.w),
            mp_obj_new_int(r.h)
        };
        return mp_obj_new_tuple(4, rec_obj);
    }
    return ((mp_obj_t)(((0) << 3) | 6));
}
static const mp_obj_fun_builtin_var_t py_image_find_template_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(3)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6024 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6024 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_template};



static mp_obj_t py_image_find_features(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);
    cascade_t *cascade = py_cascade_cobj(args[1]);
    cascade->threshold = py_helper_keyword_float(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 0.5f);
    cascade->scale_factor = py_helper_keyword_float(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_scale_factor)) << 3) | 2)), 1.5f);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 4, kw_args, &roi);


    do { if (((roi.w > cascade->window.w && roi.h > cascade->window.h)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Region of interest is smaller than detector window!")); } } while (0)
                                                                             ;


    fb_alloc_mark();
    array_t *objects_array = imlib_detect_objects(arg_img, cascade, &roi);
    fb_alloc_free_till_mark();


    mp_obj_t objects_list = mp_obj_new_list(0, 
# 6047 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                              ((void *)0)
# 6047 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                  );
    for (int i = 0; i < array_length(objects_array); i++) {
        rectangle_t *r = array_at(objects_array, i);
        mp_obj_t rec_obj[4] = {
            mp_obj_new_int(r->x),
            mp_obj_new_int(r->y),
            mp_obj_new_int(r->w),
            mp_obj_new_int(r->h),
        };
        mp_obj_list_append(objects_list, mp_obj_new_tuple(4, rec_obj));
    }
    array_free(objects_array);
    return objects_list;
}
static const mp_obj_fun_builtin_var_t py_image_find_features_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6061 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6061 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_features};


static mp_obj_t py_image_find_eye(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_GRAYSCALE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    point_t iris;
    imlib_find_iris(arg_img, &iris, &roi);

    mp_obj_t eye_obj[2] = {
        mp_obj_new_int(iris.x),
        mp_obj_new_int(iris.y),
    };

    return mp_obj_new_tuple(2, eye_obj);
}
static const mp_obj_fun_builtin_var_t py_image_find_eye_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6080 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6080 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_eye};


static mp_obj_t py_image_find_lbp(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_GRAYSCALE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    py_lbp_obj_t *lbp_obj = (((py_lbp_obj_t *)(m_malloc(sizeof(py_lbp_obj_t) * (1)))));
    lbp_obj->base.type = &py_lbp_type;
    lbp_obj->hist = imlib_lbp_desc(arg_img, &roi);
    return lbp_obj;
}
static const mp_obj_fun_builtin_var_t py_image_find_lbp_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6094 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_lbp};



static mp_obj_t py_image_find_keypoints(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_MUTABLE);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 1, kw_args, &roi);

    int threshold =
        py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 20);
    
# 6106 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
   _Bool 
# 6106 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
        normalized =
        py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_normalized)) << 3) | 2)), 
# 6107 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                            0
# 6107 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                 );
    float scale_factor =
        py_helper_keyword_float(n_args, args, 4, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_scale_factor)) << 3) | 2)), 1.5f);
    int max_keypoints =
        py_helper_keyword_int(n_args, args, 5, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_max_keypoints)) << 3) | 2)), 100);
    corner_detector_t corner_detector =
        py_helper_keyword_int(n_args, args, 6, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_corner_detector)) << 3) | 2)), CORNER_AGAST);



    corner_detector = CORNER_AGAST;



    fb_alloc_mark();
    array_t *kpts = orb_find_keypoints(arg_img, normalized, threshold, scale_factor, max_keypoints, corner_detector, &roi);
    fb_alloc_free_till_mark();

    if (array_length(kpts)) {
        py_kp_obj_t *kp_obj = (((py_kp_obj_t *)(m_malloc(sizeof(py_kp_obj_t) * (1)))));
        kp_obj->base.type = &py_kp_type;
        kp_obj->kpts = kpts;
        kp_obj->threshold = threshold;
        kp_obj->normalized = normalized;
        return kp_obj;
    }
    return ((mp_obj_t)(((0) << 3) | 6));
}
static const mp_obj_fun_builtin_var_t py_image_find_keypoints_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_keypoints};



static mp_obj_t py_image_find_edges(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    image_t *arg_img = py_helper_arg_to_image(args[0], ARG_IMAGE_GRAYSCALE);
    edge_detector_t edge_type = mp_obj_get_int(args[1]);

    rectangle_t roi;
    py_helper_keyword_rectangle_roi(arg_img, n_args, args, 2, kw_args, &roi);

    int thresh[2] = {100, 200};
    mp_obj_t thresh_obj = py_helper_keyword_object(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 
# 6147 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                                ((void *)0)
# 6147 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                                    );

    if (thresh_obj) {
        mp_obj_t *thresh_array;
        mp_obj_get_array_fixed_n(thresh_obj, 2, &thresh_array);
        thresh[0] = mp_obj_get_int(thresh_array[0]);
        thresh[1] = mp_obj_get_int(thresh_array[1]);
    }

    switch (edge_type) {
        case EDGE_SIMPLE: {
            fb_alloc_mark();
            imlib_edge_simple(arg_img, &roi, thresh[0], thresh[1]);
            fb_alloc_free_till_mark();
            break;
        }
        case EDGE_CANNY: {
            fb_alloc_mark();
            imlib_edge_canny(arg_img, &roi, thresh[0], thresh[1]);
            fb_alloc_free_till_mark();
            break;
        }

    }

    return args[0];
}
static const mp_obj_fun_builtin_var_t py_image_find_edges_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6174 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6174 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_find_edges};
# 6253 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
mp_obj_t py_image_make_new(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *all_args) {
    enum { ARG_arg, ARG_height, ARG_pixformat, ARG_buffer, ARG_copy_to_fb, ARG_shape, ARG_strides, ARG_scale};
    static const mp_arg_t allowed_args[] = {
        { MP_QSTR_arg, MP_ARG_REQUIRED | MP_ARG_OBJ },
        { MP_QSTR_height, MP_ARG_INT, {.u_int = -1} },
        { MP_QSTR_pixformat, MP_ARG_INT, {.u_int = -1} },
        { MP_QSTR_buffer, MP_ARG_OBJ | MP_ARG_KW_ONLY, {.u_rom_obj = ((mp_obj_t)(((0) << 3) | 6))} },
        { MP_QSTR_copy_to_fb, MP_ARG_BOOL | MP_ARG_KW_ONLY, {.u_bool = 
# 6260 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                        0
# 6260 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                             } },
    };

    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all_kw_array(n_args, n_kw, all_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);

    image_t image = {0};

    if ((mp_obj_is_qstr(args[ARG_arg].u_obj) || (mp_obj_is_obj(args[ARG_arg].u_obj) && (((mp_obj_base_t *)((void *)(args[ARG_arg].u_obj)))->type == (&mp_type_str))))) {

        FIL fp;
        img_read_settings_t rs;
        const char *path = mp_obj_str_get_str(args[ARG_arg].u_obj);

        fb_alloc_mark();
        imlib_read_geometry(&fp, &image, path, &rs);
        file_close(&fp);

        if (args[ARG_copy_to_fb].u_bool) {
            py_helper_set_to_framebuffer(&image);
        } else {
            image_xalloc(&image, image_size(&image));
        }

        imlib_load_image(&image, path);
        fb_alloc_free_till_mark();




    } else if ((( ((void)sizeof(char[1 - 2 * !((&ulab_ndarray_type) != &mp_type_bool)])), 
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&ulab_ndarray_type) != &mp_type_int)])), 
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&ulab_ndarray_type) != &mp_type_str)])), 
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , ((void)sizeof(char[1 - 2 * !((&ulab_ndarray_type) != &mp_type_NoneType)])), 
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
              ((void)0)
# 6290 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
              , 1) && (mp_obj_is_obj(args[ARG_arg].u_obj) && (((mp_obj_base_t *)((void *)(args[ARG_arg].u_obj)))->type == (&ulab_ndarray_type))))) {
        ndarray_obj_t *array = ((void *)(args[ARG_arg].u_obj));

        if (array->dtype != NDARRAY_FLOAT) {
            mp_raise_msg(&mp_type_ValueError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Expected a ndarray with dtype float"));
        }

        if (!((array->ndim == 2) || ((array->ndim == 3) && (array->shape[(4) - 1] == 3)))) {
            mp_raise_msg(&mp_type_ValueError,
                         (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Expected a ndarray with shape (height, width) or (height, width, 3"));
        }

        if (array->ndim == 2) {
            image.w = array->shape[(4) - 1];
            image.h = array->shape[(4) - 2];
            image.pixfmt = PIXFORMAT_GRAYSCALE;
        } else {
            image.w = array->shape[(4) - 2];
            image.h = array->shape[(4) - 3];
            image.pixfmt = PIXFORMAT_RGB565;
        }

        if (args[ARG_copy_to_fb].u_bool) {
            py_helper_set_to_framebuffer(&image);
        } else if (args[ARG_buffer].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
            mp_buffer_info_t bufinfo = {0};
            mp_get_buffer_raise(args[ARG_buffer].u_obj, &bufinfo, (2));
            image.data = bufinfo.buf;
            if (image_size(&image) > bufinfo.len) {
                mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Buffer is too small"));
            }
        } else {
            image_xalloc(&image, image_size(&image));
        }

        mp_float_t *farray = (mp_float_t *) array->array;

        if (image.pixfmt == PIXFORMAT_GRAYSCALE) {
            int y_stride = array->strides[(4) - 2] / array->itemsize;
            int x_stride = array->strides[(4) - 1] / array->itemsize;
            for (int y = 0, i = 0; y < image.h; y++, i += y_stride) {
                uint8_t *row = ({ __typeof__ (&image) _image = (&image); __typeof__ (y) _y = (y); ((uint8_t *) _image->data) + (_image->w * _y); });
                for (int x = 0, j = i; x < image.w; x++, j += x_stride) {
                    ({ __typeof__ (row) _row_ptr = (row); __typeof__ (x) _x = (x); __typeof__ (__extension__ ({ uint32_t __RES, __ARG1 = (fast_roundf(farray[j])); __asm volatile ("usat %0, %1, %2" : "=r" (__RES) : "I" (8), "r" (__ARG1) : "cc" ); __RES; })) _v = (__extension__ ({ uint32_t __RES, __ARG1 = (fast_roundf(farray[j])); __asm volatile ("usat %0, %1, %2" : "=r" (__RES) : "I" (8), "r" (__ARG1) : "cc" ); __RES; })); _row_ptr[_x] = _v; });
                }
            }
        } else {
            int y_stride = array->strides[(4) - 3] / array->itemsize;
            int x_stride = array->strides[(4) - 2] / array->itemsize;
            int c_stride = array->strides[(4) - 1] / array->itemsize;
            for (int y = 0, i = 0; y < image.h; y++, i += y_stride) {
                uint16_t *row = ({ __typeof__ (&image) _image = (&image); __typeof__ (y) _y = (y); ((uint16_t *) _image->data) + (_image->w * _y); });
                for (int x = 0, j = i; x < image.w; x++, j += x_stride) {
                    int r = __extension__ ({ uint32_t __RES, __ARG1 = (fast_roundf(farray[j])); __asm volatile ("usat %0, %1, %2" : "=r" (__RES) : "I" (8), "r" (__ARG1) : "cc" ); __RES; });
                    int g = __extension__ ({ uint32_t __RES, __ARG1 = (fast_roundf(farray[j + c_stride])); __asm volatile ("usat %0, %1, %2" : "=r" (__RES) : "I" (8), "r" (__ARG1) : "cc" ); __RES; });
                    int b = __extension__ ({ uint32_t __RES, __ARG1 = (fast_roundf(farray[j + (c_stride * 2)])); __asm volatile ("usat %0, %1, %2" : "=r" (__RES) : "I" (8), "r" (__ARG1) : "cc" ); __RES; });
                    ({ __typeof__ (row) _row_ptr = (row); __typeof__ (x) _x = (x); __typeof__ (((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3))) _v = (((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3))); _row_ptr[_x] = _v; });
                }
            }
        }

    } else {
        image.w = mp_obj_get_int(args[ARG_arg].u_obj);
        do { if ((image.w > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Image width must be > 0")); } } while (0);

        image.h = args[ARG_height].u_int;
        do { if ((image.h > 0) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Image height must be > 0")); } } while (0);

        image.pixfmt = args[ARG_pixformat].u_int;
        do { if ((((image.pixfmt == PIXFORMAT_BINARY) || (image.pixfmt == PIXFORMAT_GRAYSCALE) || (image.pixfmt == PIXFORMAT_RGB565) || (image.pixfmt == PIXFORMAT_ARGB8) || (image.pixfmt == PIXFORMAT_BAYER_BGGR) || (image.pixfmt == PIXFORMAT_BAYER_GBRG) || (image.pixfmt == PIXFORMAT_BAYER_GRBG) || (image.pixfmt == PIXFORMAT_BAYER_RGGB) || (image.pixfmt == PIXFORMAT_YUV422) || (image.pixfmt == PIXFORMAT_YVU422) || (image.pixfmt == PIXFORMAT_JPEG) || (image.pixfmt == PIXFORMAT_PNG))) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Pixel format is not set or unsupported")); } } while (0);

        mp_buffer_info_t bufinfo = {0};
        if (args[ARG_buffer].u_obj != ((mp_obj_t)(((0) << 3) | 6))) {
            mp_get_buffer_raise(args[ARG_buffer].u_obj, &bufinfo, (1));
            image.size = bufinfo.len;
        } else if (image.is_compressed) {
            mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Expected an image buffer"));
        }

        if (args[ARG_copy_to_fb].u_bool) {
            py_helper_set_to_framebuffer(&image);
            if (bufinfo.buf != 
# 6371 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                              ((void *)0)
# 6371 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                  ) {
                memcpy(image.data, bufinfo.buf, bufinfo.len);
            } else {
                memset(image.data, 0, image_size(&image));
            }
        } else if (bufinfo.buf != 
# 6376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                 ((void *)0)
# 6376 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                     ) {
            image.data = bufinfo.buf;
            if (image_size(&image) > bufinfo.len) {
                mp_raise_ValueError((mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Buffer is too small"));
            }
        } else {
            image_xalloc0(&image, image_size(&image));
        }
    }

    if (args[ARG_copy_to_fb].u_bool) {
        framebuffer_t *fb = framebuffer_get(0);
        framebuffer_update_jpeg_buffer(fb);
    }
    return py_image_from_struct(&image);
}

static const mp_rom_map_elem_t locals_dict_table[] = {

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_width)) << 3) | 2)), (&py_image_width_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_height)) << 3) | 2)), (&py_image_height_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_format)) << 3) | 2)), (&py_image_format_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_size)) << 3) | 2)), (&py_image_size_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_bytearray)) << 3) | 2)), (&py_image_bytearray_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_ndarray)) << 3) | 2)), (&py_image_to_ndarray_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_pixel)) << 3) | 2)), (&py_image_get_pixel_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_set_pixel)) << 3) | 2)), (&py_image_set_pixel_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_bitmap)) << 3) | 2)), (&py_image_to_bitmap_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_grayscale)) << 3) | 2)), (&py_image_to_grayscale_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_rgb565)) << 3) | 2)), (&py_image_to_rgb565_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_rainbow)) << 3) | 2)), (&py_image_to_rainbow_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_ironbow)) << 3) | 2)), (&py_image_to_ironbow_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_evt_dark)) << 3) | 2)), (&py_image_to_evt_dark_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_evt_light)) << 3) | 2)), (&py_image_to_evt_light_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_jpeg)) << 3) | 2)), (&py_image_to_jpeg_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_to_png)) << 3) | 2)), (&py_image_to_png_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_compress)) << 3) | 2)), (&py_image_to_jpeg_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_copy)) << 3) | 2)), (&py_image_copy_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_crop)) << 3) | 2)), (&py_image_crop_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_scale)) << 3) | 2)), (&py_image_crop_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_save)) << 3) | 2)), (&py_image_save_obj)},



    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_flush)) << 3) | 2)), (&py_image_flush_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_clear)) << 3) | 2)), (&py_image_clear_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_line)) << 3) | 2)), (&py_image_draw_line_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_rectangle)) << 3) | 2)), (&py_image_draw_rectangle_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_circle)) << 3) | 2)), (&py_image_draw_circle_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_ellipse)) << 3) | 2)), (&py_image_draw_ellipse_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_string)) << 3) | 2)), (&py_image_draw_string_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_cross)) << 3) | 2)), (&py_image_draw_cross_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_arrow)) << 3) | 2)), (&py_image_draw_arrow_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_edges)) << 3) | 2)), (&py_image_draw_edges_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_image)) << 3) | 2)), (&py_image_draw_image_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_flood_fill)) << 3) | 2)), (&py_image_flood_fill_obj)},



    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_draw_keypoints)) << 3) | 2)), (&py_image_draw_keypoints_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask_rectangle)) << 3) | 2)), (&py_image_mask_rectangle_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask_circle)) << 3) | 2)), (&py_image_mask_circle_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_mask_ellipse)) << 3) | 2)), (&py_image_mask_ellipse_obj)},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_awb)) << 3) | 2)), (&py_awb_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ccm)) << 3) | 2)), (&py_ccm_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_gamma)) << 3) | 2)), (&py_image_gamma_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_gamma_corr)) << 3) | 2)), (&py_image_gamma_obj)},
# 6463 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_binary)) << 3) | 2)), (&py_image_binary_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_invert)) << 3) | 2)), (&py_image_invert_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_and)) << 3) | 2)), (&py_image_b_and_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_and)) << 3) | 2)), (&py_image_b_and_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_nand)) << 3) | 2)), (&py_image_b_nand_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_nand)) << 3) | 2)), (&py_image_b_nand_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_or)) << 3) | 2)), (&py_image_b_or_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_or)) << 3) | 2)), (&py_image_b_or_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_nor)) << 3) | 2)), (&py_image_b_nor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_nor)) << 3) | 2)), (&py_image_b_nor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_xor)) << 3) | 2)), (&py_image_b_xor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_xor)) << 3) | 2)), (&py_image_b_xor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_xnor)) << 3) | 2)), (&py_image_b_xnor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_b_xnor)) << 3) | 2)), (&py_image_b_xnor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_erode)) << 3) | 2)), (&py_image_erode_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_dilate)) << 3) | 2)), (&py_image_dilate_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_open)) << 3) | 2)), (&py_image_open_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_close)) << 3) | 2)), (&py_image_close_obj)},
# 6503 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_negate)) << 3) | 2)), (&py_image_invert_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_assign)) << 3) | 2)), (&py_image_draw_image_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_replace)) << 3) | 2)), (&py_image_draw_image_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_set)) << 3) | 2)), (&py_image_draw_image_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_add)) << 3) | 2)), (&py_image_add_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_sub)) << 3) | 2)), (&py_image_sub_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rsub)) << 3) | 2)), (&py_image_rsub_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_min)) << 3) | 2)), (&py_image_min_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_max)) << 3) | 2)), (&py_image_max_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_difference)) << 3) | 2)), (&py_image_difference_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_variation)) << 3) | 2)), (&py_image_variation_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_blend)) << 3) | 2)), (&py_image_draw_image_obj)},
# 6528 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_top_hat)) << 3) | 2)), (&py_image_top_hat_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_black_hat)) << 3) | 2)), (&py_image_black_hat_obj)},





    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_histeq)) << 3) | 2)), (&py_image_histeq_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_mean)) << 3) | 2)), (&py_image_mean_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_median)) << 3) | 2)), (&py_image_median_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_mode)) << 3) | 2)), (&py_image_mode_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_midpoint)) << 3) | 2)), (&py_image_midpoint_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_morph)) << 3) | 2)), (&py_image_morph_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_blur)) << 3) | 2)), (&py_image_gaussian_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_gaussian)) << 3) | 2)), (&py_image_gaussian_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_gaussian_blur)) << 3) | 2)), (&py_image_gaussian_obj)},






    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_laplacian)) << 3) | 2)), (&py_image_laplacian_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_bilateral)) << 3) | 2)), (&py_image_bilateral_obj)},





    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_linpolar)) << 3) | 2)), (&py_image_linpolar_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_logpolar)) << 3) | 2)), (&py_image_logpolar_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_lens_corr)) << 3) | 2)), (&py_image_lens_corr_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rotation_corr)) << 3) | 2)), (&py_image_rotation_corr_obj)},





    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_similarity)) << 3) | 2)), (&py_image_get_similarity_obj)},



    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_hist)) << 3) | 2)), (&py_image_get_histogram_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_histogram)) << 3) | 2)), (&py_image_get_histogram_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_histogram)) << 3) | 2)), (&py_image_get_histogram_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_stats)) << 3) | 2)), (&py_image_get_statistics_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_statistics)) << 3) | 2)), (&py_image_get_statistics_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_statistics)) << 3) | 2)), (&py_image_get_statistics_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_get_regression)) << 3) | 2)), (&py_image_get_regression_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_blobs)) << 3) | 2)), (&py_image_find_blobs_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_lines)) << 3) | 2)), (&py_image_find_lines_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_line_segments)) << 3) | 2)), (&py_image_find_line_segments_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_circles)) << 3) | 2)), (&py_image_find_circles_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_rects)) << 3) | 2)), (&py_image_find_rects_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_qrcodes)) << 3) | 2)), (&py_image_find_qrcodes_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_apriltags)) << 3) | 2)), (&py_image_find_apriltags_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_datamatrices)) << 3) | 2)), (&py_image_find_datamatrices_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_barcodes)) << 3) | 2)), (&py_image_find_barcodes_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_displacement)) << 3) | 2)), (&py_image_find_displacement_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_template)) << 3) | 2)), (&py_image_find_template_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_features)) << 3) | 2)), (&py_image_find_features_obj)},



    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_eye)) << 3) | 2)), (&py_image_find_eye_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_lbp)) << 3) | 2)), (&py_image_find_lbp_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_keypoints)) << 3) | 2)), (&py_image_find_keypoints_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_edges)) << 3) | 2)), (&py_image_find_edges_obj)},






    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_find_hog)) << 3) | 2)), (&py_func_unavailable_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_selective_search)) << 3) | 2)), (&py_func_unavailable_obj)},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_stereo_disparity)) << 3) | 2)), (&py_func_unavailable_obj)},

};

static const mp_obj_dict_t py_image_locals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(locals_dict_table) / sizeof((locals_dict_table)[0])), .alloc = (sizeof(locals_dict_table) / sizeof((locals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)locals_dict_table, }, };

const mp_obj_type_t py_image_type = { .base = { &mp_type_type }, .flags = (0x0000), .name = MP_QSTR_Image, .slot_index_print = 1, .slot_index_make_new = 2, .slot_index_buffer = 3, .slot_index_subscr = 4, .slot_index_iter = 5, .slot_index_unary_op = 6, .slot_index_locals_dict = 7, .slots = { py_image_print, py_image_make_new, py_image_get_buffer, py_image_subscr, py_image_getiter, py_image_unary_op, &py_image_locals_dict, } }
# 6717 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
     ;

mp_obj_t py_image_binary_to_grayscale(mp_obj_t arg) {
    int8_t b = mp_obj_get_int(arg) & 1;
    return mp_obj_new_int(((b) * 255));
}
static const mp_obj_fun_builtin_fixed_t py_image_binary_to_grayscale_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_binary_to_grayscale};

mp_obj_t py_image_binary_to_rgb(mp_obj_t arg) {
    int8_t b = mp_obj_get_int(arg) & 1;
    uint16_t rgb565 = imlib_yuv_to_rgb((((b) ? 127 : -128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
}
static const mp_obj_fun_builtin_fixed_t py_image_binary_to_rgb_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_binary_to_rgb};

mp_obj_t py_image_binary_to_lab(mp_obj_t arg) {
    int8_t b = mp_obj_get_int(arg) & 1;
    uint16_t rgb565 = imlib_yuv_to_rgb((((b) ? 127 : -128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 0]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 1]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 2])});
}
static const mp_obj_fun_builtin_fixed_t py_image_binary_to_lab_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_binary_to_lab};

mp_obj_t py_image_binary_to_yuv(mp_obj_t arg) {
    int8_t b = mp_obj_get_int(arg) & 1;
    uint16_t rgb565 = imlib_yuv_to_rgb((((b) ? 127 : -128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * -21) - ((g) * 43) + ((b) * 64)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 64) - ((g) * 54) - ((b) * 10)) >> 7); }))});
}
static const mp_obj_fun_builtin_fixed_t py_image_binary_to_yuv_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_binary_to_yuv};

mp_obj_t py_image_grayscale_to_binary(mp_obj_t arg) {
    int8_t g = mp_obj_get_int(arg) & 255;
    return mp_obj_new_int(((g) > (((255 - 0) / 2) + 0)));
}
static const mp_obj_fun_builtin_fixed_t py_image_grayscale_to_binary_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_grayscale_to_binary};

mp_obj_t py_image_grayscale_to_rgb(mp_obj_t arg) {
    int8_t g = mp_obj_get_int(arg) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((((g) - 128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
}
static const mp_obj_fun_builtin_fixed_t py_image_grayscale_to_rgb_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_grayscale_to_rgb};

mp_obj_t py_image_grayscale_to_lab(mp_obj_t arg) {
    int8_t g = mp_obj_get_int(arg) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((((g) - 128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 0]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 1]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 2])});
}
static const mp_obj_fun_builtin_fixed_t py_image_grayscale_to_lab_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_grayscale_to_lab};

mp_obj_t py_image_grayscale_to_yuv(mp_obj_t arg) {
    int8_t g = mp_obj_get_int(arg) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((((g) - 128)) + 128, 0, 0);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * -21) - ((g) * 43) + ((b) * 64)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 64) - ((g) * 54) - ((b) * 10)) >> 7); }))});
}
static const mp_obj_fun_builtin_fixed_t py_image_grayscale_to_yuv_obj = {{&mp_type_fun_builtin_1}, .fun._1 = py_image_grayscale_to_yuv};

mp_obj_t py_image_rgb_to_binary(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    uint8_t r = mp_obj_get_int(arg_vec[0]) & 255;
    uint8_t g = mp_obj_get_int(arg_vec[1]) & 255;
    uint8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3));
    return mp_obj_new_int((({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }) > (((255 - 0) / 2) + 0)));
}
static const mp_obj_fun_builtin_var_t py_image_rgb_to_binary_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6800 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6800 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rgb_to_binary};

mp_obj_t py_image_rgb_to_grayscale(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    uint8_t r = mp_obj_get_int(arg_vec[0]) & 255;
    uint8_t g = mp_obj_get_int(arg_vec[1]) & 255;
    uint8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3));
    return mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }));
}
static const mp_obj_fun_builtin_var_t py_image_rgb_to_grayscale_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6811 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6811 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rgb_to_grayscale};

mp_obj_t py_image_rgb_to_lab(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    uint8_t r = mp_obj_get_int(arg_vec[0]) & 255;
    uint8_t g = mp_obj_get_int(arg_vec[1]) & 255;
    uint8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3));
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 0]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 1]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 2])});
}
static const mp_obj_fun_builtin_var_t py_image_rgb_to_lab_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6825 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6825 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rgb_to_lab};

mp_obj_t py_image_rgb_to_yuv(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    uint8_t r = mp_obj_get_int(arg_vec[0]) & 255;
    uint8_t g = mp_obj_get_int(arg_vec[1]) & 255;
    uint8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3));
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * -21) - ((g) * 43) + ((b) * 64)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 64) - ((g) * 54) - ((b) * 10)) >> 7); }))});
}
static const mp_obj_fun_builtin_var_t py_image_rgb_to_yuv_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6839 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6839 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_rgb_to_yuv};

mp_obj_t py_image_lab_to_binary(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t l = (mp_obj_get_int(arg_vec[0]) & 255) % 100;
    int8_t a = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_lab_to_rgb(l, a, b);
    return mp_obj_new_int((({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }) > (((255 - 0) / 2) + 0)));
}
static const mp_obj_fun_builtin_var_t py_image_lab_to_binary_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6850 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6850 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_lab_to_binary};

mp_obj_t py_image_lab_to_grayscale(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t l = (mp_obj_get_int(arg_vec[0]) & 255) % 100;
    int8_t a = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_lab_to_rgb(l, a, b);
    return mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }));
}
static const mp_obj_fun_builtin_var_t py_image_lab_to_grayscale_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6861 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6861 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_lab_to_grayscale};

mp_obj_t py_image_lab_to_rgb(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t l = (mp_obj_get_int(arg_vec[0]) & 255) % 100;
    int8_t a = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_lab_to_rgb(l, a, b);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
}
static const mp_obj_fun_builtin_var_t py_image_lab_to_rgb_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6875 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6875 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_lab_to_rgb};

mp_obj_t py_image_lab_to_yuv(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t l = (mp_obj_get_int(arg_vec[0]) & 255) % 100;
    int8_t a = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t b = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_lab_to_rgb(l, a, b);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * -21) - ((g) * 43) + ((b) * 64)) >> 7); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 64) - ((g) * 54) - ((b) * 10)) >> 7); }))});
}
static const mp_obj_fun_builtin_var_t py_image_lab_to_yuv_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6889 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6889 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_lab_to_yuv};

mp_obj_t py_image_yuv_to_binary(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t y = mp_obj_get_int(arg_vec[0]) & 255;
    int8_t u = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t v = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((y) + 128, u, v);
    return mp_obj_new_int((({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }) > (((255 - 0) / 2) + 0)));
}
static const mp_obj_fun_builtin_var_t py_image_yuv_to_binary_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6900 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6900 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_yuv_to_binary};

mp_obj_t py_image_yuv_to_grayscale(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t y = mp_obj_get_int(arg_vec[0]) & 255;
    int8_t u = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t v = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((y) + 128, u, v);
    return mp_obj_new_int(({ __typeof__ (rgb565) __rgb565 = (rgb565); int r = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); }); int g = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); }); int b = ({ __typeof__ (__rgb565) __pixel = (__rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }); ((((r) * 38) + ((g) * 75) + ((b) * 15)) >> 7); }));
}
static const mp_obj_fun_builtin_var_t py_image_yuv_to_grayscale_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6911 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6911 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_yuv_to_grayscale};

mp_obj_t py_image_yuv_to_rgb(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t y = mp_obj_get_int(arg_vec[0]) & 255;
    int8_t u = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t v = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((y) + 128, u, v);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 8) & 0xF8; __pixel | (__pixel >> 5); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel >> 3) & 0xFC; __pixel | (__pixel >> 6); })),
                             mp_obj_new_int(({ __typeof__ (rgb565) __pixel = (rgb565); __pixel = (__pixel << 3) & 0xF8; __pixel | (__pixel >> 5); }))});
}
static const mp_obj_fun_builtin_var_t py_image_yuv_to_rgb_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6925 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6925 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_yuv_to_rgb};

mp_obj_t py_image_yuv_to_lab(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    const mp_obj_t *arg_vec;
    py_helper_consume_array(n_args, args, 0, 3, &arg_vec);
    int8_t y = mp_obj_get_int(arg_vec[0]) & 255;
    int8_t u = mp_obj_get_int(arg_vec[1]) & 255;
    int8_t v = mp_obj_get_int(arg_vec[2]) & 255;
    uint16_t rgb565 = imlib_yuv_to_rgb((y) + 128, u, v);
    return mp_obj_new_tuple(3, (mp_obj_t[3])
                            {mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 0]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 1]),
                             mp_obj_new_int(lab_table[((rgb565 >> 1) * 3) + 2])});
}
static const mp_obj_fun_builtin_var_t py_image_yuv_to_lab_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6939 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6939 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_yuv_to_lab};

mp_obj_t py_image(int w, int h, pixformat_t pixfmt, uint32_t size, void *pixels) {
    py_image_obj_t *o = (((py_image_obj_t *)(m_malloc(sizeof(py_image_obj_t) * (1)))));
    o->base.type = &py_image_type;
    o->_cobj.w = w;
    o->_cobj.h = h;
    o->_cobj.size = size;
    o->_cobj.pixfmt = pixfmt;
    o->_cobj.pixels = pixels;
    return o;
}

mp_obj_t py_image_from_struct(image_t *img) {
    py_image_obj_t *o = (((py_image_obj_t *)(m_malloc(sizeof(py_image_obj_t) * (1)))));
    o->base.type = &py_image_type;
    o->_cobj = *img;
    return o;
}


mp_obj_t py_image_load_cascade(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    cascade_t cascade;
    const char *path = mp_obj_str_get_str(args[0]);


    if (imlib_load_cascade(&cascade, path) != 0) {

        mp_raise_msg(&mp_type_RuntimeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Failed to load Haar cascade"));



    }


    int stages = py_helper_keyword_int(n_args, args, 1, kw_args, ((mp_obj_t)((((mp_uint_t)(qstr_from_str("stages"))) << 3) | 2)), cascade.n_stages);

    if (stages > 0 && stages < cascade.n_stages) {
        cascade.n_stages = stages;
    }


    py_cascade_obj_t *o = (((py_cascade_obj_t *)(m_malloc(sizeof(py_cascade_obj_t) * (1)))));
    o->base.type = &py_cascade_type;
    o->_cobj = cascade;
    return o;
}
static const mp_obj_fun_builtin_var_t py_image_load_cascade_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 6986 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 6986 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_load_cascade};




mp_obj_t py_image_load_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    FIL fp;
    FRESULT res = FR_OK;

    uint32_t desc_type;
    mp_obj_t desc = ((mp_obj_t)(((0) << 3) | 6));
    const char *path = mp_obj_str_get_str(args[0]);

    file_open(&fp, path, 
# 6999 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        0
# 6999 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                             , 0x01 | 0x00);


    file_read(&fp, &desc_type, sizeof(desc_type));


    switch (desc_type) {

        case DESC_LBP: {
            py_lbp_obj_t *lbp = (((py_lbp_obj_t *)(m_malloc(sizeof(py_lbp_obj_t) * (1)))));
            lbp->base.type = &py_lbp_type;

            res = imlib_lbp_desc_load(&fp, &lbp->hist);
            if (res == FR_OK) {
                desc = lbp;
            }
            break;
        }


        case DESC_ORB: {
            array_t *kpts = 
# 7020 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                           ((void *)0)
# 7020 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                               ;
            array_alloc(&kpts, xfree);

            res = orb_load_descriptor(&fp, kpts);
            if (res == FR_OK) {

                py_kp_obj_t *kp_obj = (((py_kp_obj_t *)(m_malloc(sizeof(py_kp_obj_t) * (1)))));
                kp_obj->base.type = &py_kp_type;
                kp_obj->kpts = kpts;
                kp_obj->threshold = 10;
                kp_obj->normalized = 
# 7030 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                    0
# 7030 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                         ;
                desc = kp_obj;
            }
            break;
        }

    }

    file_close(&fp);


    if (res != FR_OK) {
        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t) file_strerror(res));
    }


    if (desc == ((mp_obj_t)(((0) << 3) | 6))) {
        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Descriptor type is not supported"));
    }
    return desc;
}
static const mp_obj_fun_builtin_var_t py_image_load_descriptor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(1)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 7051 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 7051 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_load_descriptor};

mp_obj_t py_image_save_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    FIL fp;
    FRESULT res = FR_OK;

    uint32_t desc_type;
    const char *path = mp_obj_str_get_str(args[1]);

    file_open(&fp, path, 
# 7060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                        0
# 7060 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                             , 0x02 | 0x08);


    const mp_obj_type_t *desc_obj_type = mp_obj_get_type(args[0]);
    if (0) {

    } else if (desc_obj_type == &py_lbp_type) {
        desc_type = DESC_LBP;


    } else if (desc_obj_type == &py_kp_type) {
        desc_type = DESC_ORB;

    } else {
        (void) desc_obj_type;
        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Descriptor type is not supported"));
    }


    file_write(&fp, &desc_type, sizeof(desc_type));


    switch (desc_type) {

        case DESC_LBP: {
            py_lbp_obj_t *lbp = ((py_lbp_obj_t *) args[0]);
            res = imlib_lbp_desc_save(&fp, lbp->hist);
            break;
        }


        case DESC_ORB: {
            py_kp_obj_t *kpts = ((py_kp_obj_t *) args[0]);
            res = orb_save_descriptor(&fp, kpts->kpts);
            break;
        }

    }


    file_close(&fp);


    if (res != FR_OK) {
        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t) file_strerror(res));
    }
    return ((mp_obj_t)(((3) << 3) | 6));
}
static const mp_obj_fun_builtin_var_t py_image_save_descriptor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 7108 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 7108 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_save_descriptor};


static mp_obj_t py_image_match_descriptor(size_t n_args, const mp_obj_t *args, mp_map_t *kw_args) {
    mp_obj_t match_obj = ((mp_obj_t)(((0) << 3) | 6));
    const mp_obj_type_t *desc1_type = mp_obj_get_type(args[0]);
    const mp_obj_type_t *desc2_type = mp_obj_get_type(args[1]);
    do { if (((desc1_type == desc2_type)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Descriptors have different types!")); } } while (0);

    if (0) {

    } else if (desc1_type == &py_lbp_type) {
        py_lbp_obj_t *lbp1 = ((py_lbp_obj_t *) args[0]);
        py_lbp_obj_t *lbp2 = ((py_lbp_obj_t *) args[1]);


        do { __typeof__ (lbp1) _a = (lbp1); __typeof__ (&py_lbp_type) _b = (&py_lbp_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7124 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
        do { __typeof__ (lbp2) _a = (lbp2); __typeof__ (&py_lbp_type) _b = (&py_lbp_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7125 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);


        match_obj = mp_obj_new_int(imlib_lbp_desc_distance(lbp1->hist, lbp2->hist));


    } else if (desc1_type == &py_kp_type) {
        py_kp_obj_t *kpts1 = ((py_kp_obj_t *) args[0]);
        py_kp_obj_t *kpts2 = ((py_kp_obj_t *) args[1]);
        int threshold = py_helper_keyword_int(n_args, args, 2, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_threshold)) << 3) | 2)), 85);
        int filter_outliers = py_helper_keyword_int(n_args, args, 3, kw_args, ((mp_obj_t)((((mp_uint_t)(MP_QSTR_filter_outliers)) << 3) | 2)), 
# 7135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                                                                                       0
# 7135 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                                                                                            );


        do { __typeof__ (kpts1) _a = (kpts1); __typeof__ (&py_kp_type) _b = (&py_kp_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7138 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
        do { __typeof__ (kpts2) _a = (kpts2); __typeof__ (&py_kp_type) _b = (&py_kp_type); if (!(( ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_bool)])), 
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_int)])), 
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_str)])), 
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , ((void)sizeof(char[1 - 2 * !((_b) != &mp_type_NoneType)])), 
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3
       ((void)0)
# 7139 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
       , 1) && (mp_obj_is_obj(_a) && (((mp_obj_base_t *)((void *)(_a)))->type == (_b))))) { mp_raise_msg_varg(&mp_type_TypeError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Can't convert %s to %s"), mp_obj_get_type_str(_a), mp_obj_get_type_str(_b)); } } while (0);
        do { if (((threshold >= 0 && threshold <= 100)) == 0) { mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Expected threshold between 0 and 100")); } } while (0);

        int theta = 0;
        int count = 0;
        point_t c = {0};
        rectangle_t r = {0};

        mp_obj_t match_list = mp_obj_new_list(0, 
# 7147 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                                ((void *)0)
# 7147 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                    );

        if (array_length(kpts1->kpts) && array_length(kpts1->kpts)) {
            fb_alloc_mark();
            int *match = fb_alloc(array_length(kpts1->kpts) * sizeof(int) * 2, 0);


            count = orb_match_keypoints(kpts1->kpts, kpts2->kpts, match, threshold, &r, &c, &theta);


            for (int i = 0; i < count * 2; i += 2) {
                mp_obj_t index_obj[2] = {
                    mp_obj_new_int(match[i + 0]),
                    mp_obj_new_int(match[i + 1]),
                };
                mp_obj_list_append(match_list, mp_obj_new_tuple(2, index_obj));
            }


            fb_alloc_free_till_mark();

            if (filter_outliers == 
# 7168 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                  1
# 7168 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                      ) {
                count = orb_filter_keypoints(kpts2->kpts, &r, &c);
            }
        }

        py_kptmatch_obj_t *o = (((py_kptmatch_obj_t *)(m_malloc(sizeof(py_kptmatch_obj_t) * (1)))));
        o->base.type = &py_kptmatch_type;
        o->cx = mp_obj_new_int(c.x);
        o->cy = mp_obj_new_int(c.y);
        o->x = mp_obj_new_int(r.x);
        o->y = mp_obj_new_int(r.y);
        o->w = mp_obj_new_int(r.w);
        o->h = mp_obj_new_int(r.h);
        o->count = mp_obj_new_int(count);
        o->theta = mp_obj_new_int(theta);
        o->match = match_list;
        match_obj = o;

    } else {
        mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t)MP_COMPRESSED_ROM_TEXT("Descriptor type is not supported"));
    }

    return match_obj;
}
static const mp_obj_fun_builtin_var_t py_image_match_descriptor_obj = {{&mp_type_fun_builtin_var}, ((uint32_t)((((uint32_t)(2)) << 17) | (((uint32_t)((0xffff))) << 1) | ((
# 7192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
      1
# 7192 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
      ) ? 1 : 0))), .fun.kw = py_image_match_descriptor};



int py_image_descriptor_from_roi(image_t *img, const char *path, rectangle_t *roi) {
    FIL fp;
    array_t *kpts = orb_find_keypoints(img, 
# 7198 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                                           0
# 7198 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                                , 20, 1.5f, 100, CORNER_AGAST, roi);
    if (array_length(kpts)) {
        file_open(&fp, path, 
# 7200 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c" 3 4
                            0
# 7200 "/mnt/c/Users/mcode/source/repos/lucidcode/Halovision-INSPEC/firmware/modules/py_image.c"
                                 , 0x02 | 0x08);
        FRESULT res = orb_save_descriptor(&fp, kpts);
        file_close(&fp);

        if (res != FR_OK) {
            mp_raise_msg(&mp_type_OSError, (mp_rom_error_text_t) file_strerror(res));
        }
    }
    return 0;
}


static const mp_rom_map_elem_t globals_dict_table[] = {
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR___name__)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(MP_QSTR_image)) << 3) | 2))},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_BINARY)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_BINARY)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_GRAYSCALE)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_GRAYSCALE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_RGB565)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_RGB565)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_BAYER)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_BAYER)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_YUV422)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_YUV422)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_JPEG)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_JPEG)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PNG)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(PIXFORMAT_PNG)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PALETTE_RAINBOW)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_RAINBOW)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PALETTE_IRONBOW)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_IRONBOW)) << 1) | 1))},




    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PALETTE_EVT_DARK)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_EVT_DARK)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PALETTE_EVT_LIGHT)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(COLOR_PALETTE_EVT_LIGHT)) << 1) | 1))},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_AREA)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_AREA)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_BILINEAR)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_BILINEAR)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_BICUBIC)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_BICUBIC)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_HMIRROR)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_HMIRROR)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_VFLIP)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_VFLIP)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TRANSPOSE)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_TRANSPOSE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CENTER)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_CENTER)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EXTRACT_RGB_CHANNEL_FIRST)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_EXTRACT_RGB_CHANNEL_FIRST)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_APPLY_COLOR_PALETTE_FIRST)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_APPLY_COLOR_PALETTE_FIRST)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_SCALE_ASPECT_KEEP)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_SCALE_ASPECT_KEEP)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_SCALE_ASPECT_EXPAND)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_SCALE_ASPECT_EXPAND)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_SCALE_ASPECT_IGNORE)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_SCALE_ASPECT_IGNORE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_BLACK_BACKGROUND)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_BLACK_BACKGROUND)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ROTATE_90)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_VFLIP | IMAGE_HINT_TRANSPOSE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ROTATE_180)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_HMIRROR | IMAGE_HINT_VFLIP)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ROTATE_270)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(IMAGE_HINT_HMIRROR | IMAGE_HINT_TRANSPOSE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_JPEG_SUBSAMPLING_AUTO)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(JPEG_SUBSAMPLING_AUTO)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_JPEG_SUBSAMPLING_444)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(JPEG_SUBSAMPLING_444)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_JPEG_SUBSAMPLING_422)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(JPEG_SUBSAMPLING_422)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_JPEG_SUBSAMPLING_420)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(JPEG_SUBSAMPLING_420)) << 1) | 1))},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_SEARCH_EX)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(SEARCH_EX)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_SEARCH_DS)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(SEARCH_DS)) << 1) | 1))},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EDGE_CANNY)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(EDGE_CANNY)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EDGE_SIMPLE)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(EDGE_SIMPLE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CORNER_FAST)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(CORNER_FAST)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CORNER_AGAST)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(CORNER_AGAST)) << 1) | 1))},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG16H5)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(TAG16H5)) << 1) | 1))},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG25H7)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(TAG25H7)) << 1) | 1))},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG25H9)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(TAG25H9)) << 1) | 1))},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG36H10)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(TAG36H10)) << 1) | 1))},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_TAG36H11)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(TAG36H11)) << 1) | 1))},






    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EAN2)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_EAN2)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EAN5)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_EAN5)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EAN8)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_EAN8)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_UPCE)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_UPCE)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ISBN10)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_ISBN10)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_UPCA)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_UPCA)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_EAN13)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_EAN13)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ISBN13)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_ISBN13)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_I25)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_I25)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_DATABAR)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_DATABAR)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_DATABAR_EXP)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_DATABAR_EXP)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CODABAR)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_CODABAR)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CODE39)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_CODE39)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_PDF417)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_PDF417)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CODE93)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_CODE93)) << 1) | 1))},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_CODE128)) << 3) | 2)), ((mp_obj_t)((((mp_uint_t)(BARCODE_CODE128)) << 1) | 1))},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_Image)) << 3) | 2)), (&py_image_type)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_ImageIO)) << 3) | 2)), (&py_imageio_type) },



    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_binary_to_grayscale)) << 3) | 2)), (&py_image_binary_to_grayscale_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_binary_to_rgb)) << 3) | 2)), (&py_image_binary_to_rgb_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_binary_to_lab)) << 3) | 2)), (&py_image_binary_to_lab_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_binary_to_yuv)) << 3) | 2)), (&py_image_binary_to_yuv_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_grayscale_to_binary)) << 3) | 2)), (&py_image_grayscale_to_binary_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_grayscale_to_rgb)) << 3) | 2)), (&py_image_grayscale_to_rgb_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_grayscale_to_lab)) << 3) | 2)), (&py_image_grayscale_to_lab_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_grayscale_to_yuv)) << 3) | 2)), (&py_image_grayscale_to_yuv_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rgb_to_binary)) << 3) | 2)), (&py_image_rgb_to_binary_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rgb_to_grayscale)) << 3) | 2)), (&py_image_rgb_to_grayscale_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rgb_to_lab)) << 3) | 2)), (&py_image_rgb_to_lab_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_rgb_to_yuv)) << 3) | 2)), (&py_image_rgb_to_yuv_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_lab_to_binary)) << 3) | 2)), (&py_image_lab_to_binary_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_lab_to_grayscale)) << 3) | 2)), (&py_image_lab_to_grayscale_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_lab_to_rgb)) << 3) | 2)), (&py_image_lab_to_rgb_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_lab_to_yuv)) << 3) | 2)), (&py_image_lab_to_yuv_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_yuv_to_binary)) << 3) | 2)), (&py_image_yuv_to_binary_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_yuv_to_grayscale)) << 3) | 2)), (&py_image_yuv_to_grayscale_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_yuv_to_rgb)) << 3) | 2)), (&py_image_yuv_to_rgb_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_yuv_to_lab)) << 3) | 2)), (&py_image_yuv_to_lab_obj)},

    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_HaarCascade)) << 3) | 2)), (&py_image_load_cascade_obj)},


    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_load_descriptor)) << 3) | 2)), (&py_image_load_descriptor_obj)},
    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_save_descriptor)) << 3) | 2)), (&py_image_save_descriptor_obj)},





    {((mp_obj_t)((((mp_uint_t)(MP_QSTR_match_descriptor)) << 3) | 2)), (&py_image_match_descriptor_obj)}



};

static const mp_obj_dict_t globals_dict = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(globals_dict_table) / sizeof((globals_dict_table)[0])), .alloc = (sizeof(globals_dict_table) / sizeof((globals_dict_table)[0])), .table = (mp_map_elem_t *)(mp_rom_map_elem_t *)globals_dict_table, }, };

const mp_obj_module_t image_module = {
    .base = { &mp_type_module },
    .globals = (mp_obj_t) &globals_dict
};

MP_REGISTER_MODULE(MP_QSTR_image, image_module);

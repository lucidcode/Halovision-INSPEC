# "Relative Path Regex", "Board Type Regex", "Sensor Type Regex", "Flatten Regex"
"examples/00-HelloWorld/blinky.py", "^(?!OPENMVPT).*$", ".+", ""
"examples/00-HelloWorld/helloworld.py", "^(?!OPENMVPT).*$", "^(?!None).*$", ""
"examples/01-Camera/00-Snapshot", ".+", "^(?!None).*$", ""
"examples/01-Camera/01-Video-Recording", ".+", "^(?!None).*$", ""
"examples/01-Camera/02-Optical-Flow", ".+", "^(?!None).*$", ""
"examples/01-Camera/03-Event-Cameras", ".+", "(FROGEYE2020)", ""
"examples/01-Camera/04-Global-Shutter", ".+", "(MT9V0X2|MT9V0X2-C|MT9V0X4|MT9V0X4-C)", ""
"examples/01-Camera/05-FLIR-Lepton", ".+", "(LEPTON|LEPTON-1.5|LEPTON-1.6|LEPTON-2.0|LEPTON-2.5|LEPTON-3.0|LEPTON-3.5)", ""
"examples/01-Camera/06-Time-of-Flight", ".+", "^(?!None).*$", ""
"examples/01-Camera/07-Sensor-Control", ".+", "^(?!None).*$", ""
"examples/01-Camera/08-Readout-Control", ".+", "^(?!None).*$", ""
"examples/02-Image-Processing", ".+", "^(?!None).*$", ""
"examples/03-Machine-Learning/00-TensorFlow", ".+", "^(?!None).*$", ""
"examples/03-Machine-Learning/01-ST-CubeAI", "(OPENMV2|OPENMV3|OPENMV4|OPENMV4P|OPENMVPT|ARDUINO_GIGA|ARDUINO_PORTENTA_H7|ARDUINO_NICLA_VISION)", "^(?!None).*$", ""
"examples/03-Machine-Learning/02-Haar-Cascade", ".+", "^(?!None).*$", ""
"examples/04-Barcodes", ".+", "^(?!None).*$", ""
"examples/05-Feature-Detection", ".+", "^(?!None).*$", ""
"examples/06-April-Tags", ".+", "^(?!None).*$", ""
# STM32 libraries
"examples/07-Interface-Library/00-Arduino", "(OPENMV2|OPENMV3|OPENMV4|OPENMV4P|OPENMVPT|ARDUINO_GIGA|ARDUINO_PORTENTA_H7|ARDUINO_NICLA_VISION)", ".+", ""
"examples/07-Interface-Library/01-Pixy-Emulation", "(OPENMV2|OPENMV3|OPENMV4|OPENMV4P|OPENMVPT|ARDUINO_GIGA|ARDUINO_PORTENTA_H7|ARDUINO_NICLA_VISION)", ".+", ""
"examples/07-Interface-Library/02-MAVLink", ".+", ".+", ""
"examples/07-Interface-Library/03-Modbus", ".+", ".+", ""
"examples/08-RPC-Library", ".+", ".+", ""
"examples/09-WiFi/(?!WINC1500).*$", "^(?!arduino_nano_33_ble_sense).*$", ".+", ""
"examples/09-WiFi/WINC1500", "(OPENMV2|OPENMV3|OPENMV4|OPENMV4P|OPENMVPT)", ".+", ""
"examples/10-Bluetooth", "(OPENMV_RT1060|ARDUINO_GIGA|ARDUINO_PORTENTA_H7|ARDUINO_NICLA_VISION|ARDUINO_NANO_RP2040_CONNECT)", ".+", ""
"examples/50-OpenMV-Boards/50-STM32-Boards", "(OPENMV2|OPENMV3|OPENMV4|OPENMV4P|OPENMVPT)", ".+", "OpenMV-Boards(/50-STM32-Boards)?$"
"examples/50-OpenMV-Boards/50-IMXRT-Boards", "OPENMV_RT1060", ".+", "OpenMV-Boards(/50-IMXRT-Boards)?$"
"examples/50-OpenMV-Boards/51-Pure-Thermal", "OPENMVPT", ".+", "OpenMV-Boards(/51-Pure-Thermal)?$"
"examples/50-OpenMV-Boards/60-Shields", "OPENMV.+", ".+", "OpenMV-Boards(/60-Shields)?$"
"examples/50-Arduino-Boards/Giga-H7", "ARDUINO_GIGA", ".+", "Arduino-Boards(/Giga-H7)?$"
"examples/50-Arduino-Boards/Nano-33-BLE-Sense", "ARDUINO_NANO_33_BLE_SENSE", ".+", "Arduino-Boards(/Nano-33-BLE-Sense)?$"
"examples/50-Arduino-Boards/Nano-RP2040", "ARDUINO_NANO_RP2040_CONNECT", ".+", "Arduino-Boards(/Nano-RP2040)?$"
"examples/50-Arduino-Boards/Nicla-Vision", "ARDUINO_NICLA_VISION", ".+", "Arduino-Boards(/Nicla-Vision)?$"
"examples/50-Arduino-Boards/Portenta-H7", "ARDUINO_PORTENTA_H7", ".+", "Arduino-Boards(/Portenta-H7)?$"

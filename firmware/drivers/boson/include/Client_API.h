//  /////////////////////////////////////////////////////
//  // DO NOT EDIT.  This is a machine generated file. //
//  /////////////////////////////////////////////////////
/******************************************************************************/
/*                                                                            */
/*  Copyright (C) 2018, FLIR Systems                                          */
/*  All rights reserved.                                                      */
/*                                                                            */
/*  This document is controlled to FLIR Technology Level 2. The information   */
/*  contained in this document pertains to a dual use product controlled for  */
/*  export by the Export Administration Regulations (EAR). Diversion contrary */
/*  to US law is prohibited. US Department of Commerce authorization is not   */
/*  required prior to export or transfer to foreign persons or parties unless */
/*  otherwise prohibited.                                                     */
/*                                                                            */
/******************************************************************************/


#ifndef CLIENT_API_H
#define CLIENT_API_H

#include <stdint.h>
#include "EnumTypes.h"
#include "ReturnCodes.h"
#include "Serializer_Struct.h"
#include "Client_Packager.h"

#define MAX_MEMORY_CHUNK  256
FLR_RESULT TLinearSetControl(const FLR_ENABLE_E data);
FLR_RESULT TLinearGetControl(FLR_ENABLE_E *data);
FLR_RESULT TLinearGetLUT(const FLR_BOSON_TABLETYPE_E mode, const uint16_t offset, float *a, float *b);
FLR_RESULT TLinearRefreshLUT(const FLR_BOSON_TABLETYPE_E mode);
FLR_RESULT agcSetPercentPerBin(const float data);
FLR_RESULT agcGetPercentPerBin(float *data);
FLR_RESULT agcSetLinearPercent(const float data);
FLR_RESULT agcGetLinearPercent(float *data);
FLR_RESULT agcSetOutlierCut(const float data);
FLR_RESULT agcGetOutlierCut(float *data);
FLR_RESULT agcGetDrOut(float *data);
FLR_RESULT agcSetMaxGain(const float data);
FLR_RESULT agcGetMaxGain(float *data);
FLR_RESULT agcSetdf(const float data);
FLR_RESULT agcGetdf(float *data);
FLR_RESULT agcSetGamma(const float data);
FLR_RESULT agcGetGamma(float *data);
FLR_RESULT agcGetFirstBin(uint32_t *data);
FLR_RESULT agcGetLastBin(uint32_t *data);
FLR_RESULT agcSetDetailHeadroom(const float data);
FLR_RESULT agcGetDetailHeadroom(float *data);
FLR_RESULT agcSetd2br(const float data);
FLR_RESULT agcGetd2br(float *data);
FLR_RESULT agcSetSigmaR(const float data);
FLR_RESULT agcGetSigmaR(float *data);
FLR_RESULT agcSetUseEntropy(const FLR_ENABLE_E data);
FLR_RESULT agcGetUseEntropy(FLR_ENABLE_E *data);
FLR_RESULT agcSetROI(const FLR_ROI_T roi);
FLR_RESULT agcGetROI(FLR_ROI_T *roi);
FLR_RESULT agcGetMaxGainApplied(float *data);
FLR_RESULT agcGetSigmaRApplied(float *data);
FLR_RESULT agcSetOutlierCutBalance(const float data);
FLR_RESULT agcGetOutlierCutBalance(float *data);
FLR_RESULT agcGetOutlierCutApplied(float *percentHigh, float *percentLow);
FLR_RESULT agcSetDetailHeadroomBalance(const float data);
FLR_RESULT agcGetDetailHeadroomBalance(float *data);
FLR_RESULT agcGetDetailHeadroomApplied(float *countsHigh, float *countsLow);
FLR_RESULT agcGetTfThresholds(uint16_t *tf_thresholdMin, uint16_t *tf_thresholdMax);
FLR_RESULT agcSetTfThresholds(const uint16_t tf_thresholdMin, const uint16_t tf_thresholdMax);
FLR_RESULT agcGetMode(FLR_AGC_MODE_E *mode);
FLR_RESULT agcSetMode(const FLR_AGC_MODE_E mode);
FLR_RESULT agcSetHighTempAlarmValues(const uint32_t lowGain, const uint32_t highGain, const uint32_t pixPopulation);
FLR_RESULT agcGetContrast(int32_t *contrast);
FLR_RESULT agcSetContrast(const int32_t contrast);
FLR_RESULT agcGetBrightnessBias(int32_t *brightnessBias);
FLR_RESULT agcSetBrightnessBias(const int32_t brightnessBias);
FLR_RESULT agcGetBrightness(int32_t *brightness);
FLR_RESULT agcSetBrightness(const int32_t brightness);
FLR_RESULT agcSetMaxGainForLowGain(const float data);
FLR_RESULT agcGetMaxGainForLowGain(float *data);
FLR_RESULT agcSetRadius(const uint32_t data);
FLR_RESULT agcGetRadius(uint32_t *data);
FLR_RESULT agcSetGmax(const float data);
FLR_RESULT agcGetGmax(float *data);
FLR_RESULT agcSetGmin(const float data);
FLR_RESULT agcGetGmin(float *data);
FLR_RESULT bosonGetCameraSN(uint32_t *data);
FLR_RESULT bosonGetCameraPN(FLR_BOSON_PARTNUMBER_T *data);
FLR_RESULT bosonGetSensorSN(uint32_t *data);
FLR_RESULT bosonRunFFC();
FLR_RESULT bosonSetFFCTempThreshold(const uint16_t data);
FLR_RESULT bosonGetFFCTempThreshold(uint16_t *data);
FLR_RESULT bosonSetFFCFrameThreshold(const uint32_t data);
FLR_RESULT bosonGetFFCFrameThreshold(uint32_t *data);
FLR_RESULT bosonGetFFCInProgress(int16_t *data);
FLR_RESULT bosonReboot();
FLR_RESULT bosonSetFFCMode(const FLR_BOSON_FFCMODE_E ffcMode);
FLR_RESULT bosonGetFFCMode(FLR_BOSON_FFCMODE_E *ffcMode);
FLR_RESULT bosonSetGainMode(const FLR_BOSON_GAINMODE_E gainMode);
FLR_RESULT bosonGetGainMode(FLR_BOSON_GAINMODE_E *gainMode);
FLR_RESULT bosonWriteDynamicHeaderToFlash();
FLR_RESULT bosonReadDynamicHeaderFromFlash();
FLR_RESULT bosonRestoreFactoryDefaultsFromFlash();
FLR_RESULT bosonRestoreFactoryBadPixelsFromFlash();
FLR_RESULT bosonWriteBadPixelsToFlash();
FLR_RESULT bosonGetSoftwareRev(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT bosonSetBadPixelLocation(const uint32_t row, const uint32_t col);
FLR_RESULT bosonlookupFPATempDegCx10(int16_t *data);
FLR_RESULT bosonlookupFPATempDegKx10(uint16_t *data);
FLR_RESULT bosonWriteLensNvFfcToFlash();
FLR_RESULT bosonWriteLensGainToFlash();
FLR_RESULT bosonSetLensNumber(const uint32_t lensNumber);
FLR_RESULT bosonGetLensNumber(uint32_t *lensNumber);
FLR_RESULT bosonSetTableNumber(const uint32_t tableNumber);
FLR_RESULT bosonGetTableNumber(uint32_t *tableNumber);
FLR_RESULT bosonGetSensorPN(FLR_BOSON_SENSOR_PARTNUMBER_T *sensorPN);
FLR_RESULT bosonSetGainSwitchParams(const FLR_BOSON_GAIN_SWITCH_PARAMS_T parm_struct);
FLR_RESULT bosonGetGainSwitchParams(FLR_BOSON_GAIN_SWITCH_PARAMS_T *parm_struct);
FLR_RESULT bosonGetSwitchToHighGainFlag(uint8_t *switchToHighGainFlag);
FLR_RESULT bosonGetSwitchToLowGainFlag(uint8_t *switchToLowGainFlag);
FLR_RESULT bosonGetCLowToHighPercent(uint32_t *cLowToHighPercent);
FLR_RESULT bosonGetMaxNUCTables(uint32_t *maxNUCTables);
FLR_RESULT bosonGetMaxLensTables(uint32_t *maxLensTables);
FLR_RESULT bosonGetFfcWaitCloseFrames(uint16_t *data);
FLR_RESULT bosonSetFfcWaitCloseFrames(const uint16_t data);
FLR_RESULT bosonCheckForTableSwitch();
FLR_RESULT bosonGetDesiredTableNumber(uint32_t *desiredTableNumber);
FLR_RESULT bosonGetFfcStatus(FLR_BOSON_FFCSTATUS_E *ffcStatus);
FLR_RESULT bosonGetFfcDesired(uint32_t *ffcDesired);
FLR_RESULT bosonGetSwRevInHeader(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT bosonGetLastFFCFrameCount(uint32_t *frameCount);
FLR_RESULT bosonGetLastFFCTempDegKx10(uint16_t *temp);
FLR_RESULT bosonGetTableSwitchDesired(uint16_t *tableSwitchDesired);
FLR_RESULT bosonGetOverTempThreshold(float *temperatureInC);
FLR_RESULT bosonGetLowPowerMode(uint16_t *lowPowerMode);
FLR_RESULT bosonGetOverTempEventOccurred(uint16_t *overTempEventOccurred);
FLR_RESULT bosonSetPermitThermalShutdownOverride(const FLR_ENABLE_E permitThermalShutdownOverride);
FLR_RESULT bosonGetPermitThermalShutdownOverride(FLR_ENABLE_E *permitThermalShutdownOverride);
FLR_RESULT bosonGetMyriadTemp(float *myriadTemp);
FLR_RESULT bosonGetNvFFCNucTableNumberLens0(int32_t *nvFFCNucTableNumberLens0);
FLR_RESULT bosonGetNvFFCNucTableNumberLens1(int32_t *nvFFCNucTableNumberLens1);
FLR_RESULT bosonGetNvFFCFPATempDegKx10Lens0(uint16_t *nvFFCFPATempDegKx10Lens0);
FLR_RESULT bosonGetNvFFCFPATempDegKx10Lens1(uint16_t *nvFFCFPATempDegKx10Lens1);
FLR_RESULT bosonSetFFCWarnTimeInSecx10(const uint16_t ffcWarnTime);
FLR_RESULT bosonGetFFCWarnTimeInSecx10(uint16_t *ffcWarnTime);
FLR_RESULT bosonGetOverTempEventCounter(uint32_t *overTempEventCounter);
FLR_RESULT bosonSetOverTempTimerInSec(const uint16_t overTempTimerInSec);
FLR_RESULT bosonGetOverTempTimerInSec(uint16_t *overTempTimerInSec);
FLR_RESULT bosonUnloadCurrentLensCorrections();
FLR_RESULT bosonSetTimeForQuickFFCsInSecs(const uint32_t timeForQuickFFCsInSecs);
FLR_RESULT bosonGetTimeForQuickFFCsInSecs(uint32_t *timeForQuickFFCsInSecs);
FLR_RESULT bosonReloadCurrentLensCorrections();
FLR_RESULT bosonGetBootTimestamps(float *FirstLight, float *StartInit, float *BosonExecDone, float *Timestamp4);
FLR_RESULT bosonSetExtSyncMode(const FLR_BOSON_EXT_SYNC_MODE_E mode);
FLR_RESULT bosonGetExtSyncMode(FLR_BOSON_EXT_SYNC_MODE_E *mode);
FLR_RESULT bosonGetLastCommand(uint32_t *sequenceNum, uint32_t *cmdID);
FLR_RESULT bosonGetSensorHostCalVersion(uint32_t *version);
FLR_RESULT bosonSetDesiredStartupTableNumber(const int32_t table);
FLR_RESULT bosonGetDesiredStartupTableNumber(int32_t *table);
FLR_RESULT bosonSetNvFFCMeanValueLens0(const float meanValue);
FLR_RESULT bosonGetNvFFCMeanValueLens0(float *meanValue);
FLR_RESULT bosonSetNvFFCMeanValueLens1(const float meanValue);
FLR_RESULT bosonGetNvFFCMeanValueLens1(float *meanValue);
FLR_RESULT bosonSetInvertImage(const FLR_ENABLE_E invertImage);
FLR_RESULT bosonGetInvertImage(FLR_ENABLE_E *invertImage);
FLR_RESULT bosonSetRevertImage(const FLR_ENABLE_E revertImage);
FLR_RESULT bosonGetRevertImage(FLR_ENABLE_E *revertImage);
FLR_RESULT bosonGetTimeStamp(const FLR_BOSON_TIMESTAMPTYPE_E timeStampType, float *timeStamp);
FLR_RESULT bosonGetISPFrameCount(uint32_t *ispFrameCount);
FLR_RESULT bosonWriteUserBadPixelsToAllTables();
FLR_RESULT bosonWriteFactoryBadPixelsToAllTables();
FLR_RESULT bosonGetTempDiodeStatus(FLR_BOSON_TEMP_DIODE_STATUS_E *status);
FLR_RESULT bosonClearFactoryBadPixelsInDDR();
FLR_RESULT bosonGetFfcWaitOpenFrames(uint16_t *data);
FLR_RESULT bosonSetFfcWaitOpenFrames(const uint16_t data);
FLR_RESULT bosonGetFfcWaitOpenFlagSettleFrames(uint16_t *data);
FLR_RESULT bosonSetFfcWaitOpenFlagSettleFrames(const uint16_t data);
FLR_RESULT bosonGetTauExtFfcCompatibilityMode(FLR_ENABLE_E *data);
FLR_RESULT bosonSetTauExtFfcCompatibilityMode(const FLR_ENABLE_E data);
FLR_RESULT bosonGetInitialTableSelectionTempOffset(int16_t *data);
FLR_RESULT bosonSetInitialTableSelectionTempOffset(const int16_t data);
FLR_RESULT bosonGetImageValid(int16_t *data);
FLR_RESULT bosonGetCurrentTableType(FLR_BOSON_TABLETYPE_E *data);
FLR_RESULT bosonGetGainSwitchFrameThreshold(uint32_t *data);
FLR_RESULT bosonSetGainSwitchFrameThreshold(const uint32_t data);
FLR_RESULT bosonGetGainSwitchHysteresisTime(float *data);
FLR_RESULT bosonSetGainSwitchHysteresisTime(const float data);
FLR_RESULT bosonGetGainSwitchDesired(uint32_t *data);
FLR_RESULT bosonGetGainSwitchRadiometricParams(FLR_BOSON_GAIN_SWITCH_RADIOMETRIC_PARAMS_T *parm_struct);
FLR_RESULT bosonSetGainSwitchRadiometricParams(const FLR_BOSON_GAIN_SWITCH_RADIOMETRIC_PARAMS_T parm_struct);
FLR_RESULT bosonSetSaturationOverrideMode(const FLR_ENABLE_E data);
FLR_RESULT bosonGetSaturationOverrideMode(FLR_ENABLE_E *data);
FLR_RESULT bosonSetSaturationOverrideValue(const uint16_t data);
FLR_RESULT bosonGetSaturationOverrideValue(uint16_t *data);
FLR_RESULT bosonSetffcHighLowGainThresholdMode(const FLR_ENABLE_E data);
FLR_RESULT bosonGetffcHighLowGainThresholdMode(FLR_ENABLE_E *data);
FLR_RESULT bosonSetFFCTempThresholdLowGain(const uint16_t data);
FLR_RESULT bosonGetFFCTempThresholdLowGain(uint16_t *data);
FLR_RESULT bosonSetFFCFrameThresholdLowGain(const uint32_t data);
FLR_RESULT bosonGetFFCFrameThresholdLowGain(uint32_t *data);
FLR_RESULT bosonGetBoardID(uint32_t *data);
FLR_RESULT bosonSetAutoGainSwitchConditions(const FLR_BOSON_AUTOGAIN_SWITCH_CONDITION_E data);
FLR_RESULT bosonGetAutoGainSwitchConditions(FLR_BOSON_AUTOGAIN_SWITCH_CONDITION_E *data);
FLR_RESULT bosonSetGainSwitchParamsCATS(const FLR_BOSON_GAIN_SWITCH_PARAMS_T parm_struct);
FLR_RESULT bosonGetGainSwitchParamsCATS(FLR_BOSON_GAIN_SWITCH_PARAMS_T *parm_struct);
FLR_RESULT bosonGetGainSwitchRadiometricParamsCATS(FLR_BOSON_GAIN_SWITCH_RADIOMETRIC_PARAMS_T *parm_struct);
FLR_RESULT bosonSetGainSwitchRadiometricParamsCATS(const FLR_BOSON_GAIN_SWITCH_RADIOMETRIC_PARAMS_T parm_struct);
FLR_RESULT bosonGetCLowToHighPercentCATS(uint32_t *cLowToHighPercent);
FLR_RESULT bprGetState(FLR_ENABLE_E *data);
FLR_RESULT bprSetState(const FLR_ENABLE_E data);
FLR_RESULT bprGetStats(uint32_t *threeby, uint32_t *fiveby, uint32_t *rows, uint32_t *budget, uint32_t *used);
FLR_RESULT bprGetDisplayMode(FLR_BPR_DISPLAY_MODE_E *data);
FLR_RESULT bprSetDisplayMode(const FLR_BPR_DISPLAY_MODE_E data);
FLR_RESULT bprGetDisplayModeMinValue(uint16_t *data);
FLR_RESULT bprSetDisplayModeMinValue(const uint16_t data);
FLR_RESULT bprGetDisplayModeMaxValue(uint16_t *data);
FLR_RESULT bprSetDisplayModeMaxValue(const uint16_t data);
FLR_RESULT bprGetWorkBufIndex(uint32_t *data);
FLR_RESULT bprSetWorkBufIndex(const uint32_t data);
FLR_RESULT bprGetWorkBufStats(uint32_t *threeby, uint32_t *fiveby, uint32_t *rows, uint32_t *budget, uint32_t *used);
FLR_RESULT captureSingleFrame();
FLR_RESULT captureFrames(const FLR_CAPTURE_SETTINGS_T data);
FLR_RESULT captureSingleFrameWithSrc(const FLR_CAPTURE_SRC_E data);
FLR_RESULT captureSingleFrameToFile();
FLR_RESULT captureGetStatus(FLR_CAPTURE_STATUS_T *status);
FLR_RESULT colorLutSetControl(const FLR_ENABLE_E data);
FLR_RESULT colorLutGetControl(FLR_ENABLE_E *data);
FLR_RESULT colorLutSetId(const FLR_COLORLUT_ID_E data);
FLR_RESULT colorLutGetId(FLR_COLORLUT_ID_E *data);
FLR_RESULT colorLutSetOutlineColor(const uint8_t red, const uint8_t green, const uint8_t blue);
FLR_RESULT colorLutGetOutlineColor(uint8_t *red, uint8_t *green, uint8_t *blue);
FLR_RESULT dummyBadCommand();
FLR_RESULT dvoSetAnalogVideoState(const FLR_ENABLE_E analogVideoState);
FLR_RESULT dvoGetAnalogVideoState(FLR_ENABLE_E *analogVideoState);
FLR_RESULT dvoSetOutputFormat(const FLR_DVO_OUTPUT_FORMAT_E format);
FLR_RESULT dvoGetOutputFormat(FLR_DVO_OUTPUT_FORMAT_E *format);
FLR_RESULT dvoSetOutputYCbCrSettings(const FLR_DVO_YCBCR_SETTINGS_T settings);
FLR_RESULT dvoGetOutputYCbCrSettings(FLR_DVO_YCBCR_SETTINGS_T *settings);
FLR_RESULT dvoSetOutputRGBSettings(const FLR_DVO_RGB_SETTINGS_T settings);
FLR_RESULT dvoGetOutputRGBSettings(FLR_DVO_RGB_SETTINGS_T *settings);
FLR_RESULT dvoApplyCustomSettings();
FLR_RESULT dvoSetDisplayMode(const FLR_DVO_DISPLAY_MODE_E displayMode);
FLR_RESULT dvoGetDisplayMode(FLR_DVO_DISPLAY_MODE_E *displayMode);
FLR_RESULT dvoSetType(const FLR_DVO_TYPE_E tap);
FLR_RESULT dvoGetType(FLR_DVO_TYPE_E *tap);
FLR_RESULT dvoSetVideoStandard(const FLR_DVO_VIDEO_STANDARD_E videoStandard);
FLR_RESULT dvoGetVideoStandard(FLR_DVO_VIDEO_STANDARD_E *videoStandard);
FLR_RESULT dvoSetCheckVideoDacPresent(const FLR_ENABLE_E checkVideoDacPresent);
FLR_RESULT dvoGetCheckVideoDacPresent(FLR_ENABLE_E *checkVideoDacPresent);
FLR_RESULT dvoSetCustomLcdConfig(const FLR_DVO_LCD_CONFIG_ID_E id, const FLR_DVO_LCD_CONFIG_T config);
FLR_RESULT dvoGetCustomLcdConfig(const FLR_DVO_LCD_CONFIG_ID_E id, FLR_DVO_LCD_CONFIG_T *config);
FLR_RESULT dvoSetLCDConfig(const FLR_DVO_LCD_CONFIG_ID_E id);
FLR_RESULT dvoGetLCDConfig(FLR_DVO_LCD_CONFIG_ID_E *id);
FLR_RESULT dvoGetClockInfo(uint32_t *horizontalSyncWidth, uint32_t *verticalSyncWidth, uint32_t *clocksPerRowPeriod, uint32_t *horizontalFrontPorch, uint32_t *horizontalBackPorch, uint32_t *frontTelemetryPixels, uint32_t *rearTelemetryPixels, uint32_t *videoColumns, uint32_t *validColumns, uint32_t *telemetryRows, uint32_t *videoRows, uint32_t *validRows, uint32_t *verticalFrontPorch, uint32_t *verticalBackPorch, uint32_t *rowPeriodsPerFrame, uint32_t *clocksPerFrame, float *clockRateInMHz, float *frameRateInHz, uint32_t *validOnRisingEdge, uint32_t *dataWidthInBits);
FLR_RESULT dvoSetAllCustomLcdConfigs(const FLR_DVO_LCD_CONFIG_T config0, const FLR_DVO_LCD_CONFIG_T config1);
FLR_RESULT dvoGetAllCustomLcdConfigs(FLR_DVO_LCD_CONFIG_T *config0, FLR_DVO_LCD_CONFIG_T *config1);
FLR_RESULT dvoSetOutputIr16Format(const FLR_DVO_OUTPUT_IR16_FORMAT_E format);
FLR_RESULT dvoGetOutputIr16Format(FLR_DVO_OUTPUT_IR16_FORMAT_E *format);
FLR_RESULT dvoSetLcdClockRate(const FLR_DVO_LCD_CLOCK_RATE_E clockRate);
FLR_RESULT dvoGetLcdClockRate(FLR_DVO_LCD_CLOCK_RATE_E *clockRate);
FLR_RESULT dvoSetLcdVideoFrameRate(const uint32_t framerate);
FLR_RESULT dvoGetLcdVideoFrameRate(uint32_t *framerate);
FLR_RESULT dvoSetMipiStartState(const FLR_DVO_MIPI_STATE_E state);
FLR_RESULT dvoGetMipiStartState(FLR_DVO_MIPI_STATE_E *state);
FLR_RESULT dvoSetMipiState(const FLR_DVO_MIPI_STATE_E state);
FLR_RESULT dvoGetMipiState(FLR_DVO_MIPI_STATE_E *state);
FLR_RESULT dvoSetMipiClockLaneMode(const FLR_DVO_MIPI_CLOCK_LANE_MODE_E mode);
FLR_RESULT dvoGetMipiClockLaneMode(FLR_DVO_MIPI_CLOCK_LANE_MODE_E *mode);
FLR_RESULT dvoSetOutputInterface(const FLR_DVO_OUTPUT_INTERFACE_E format);
FLR_RESULT dvoGetOutputInterface(FLR_DVO_OUTPUT_INTERFACE_E *format);
FLR_RESULT dvoSetOutputFormatVC1(const FLR_DVO_OUTPUT_FORMAT_E format);
FLR_RESULT dvoGetOutputFormatVC1(FLR_DVO_OUTPUT_FORMAT_E *format);
FLR_RESULT dvoMuxSetType(const FLR_DVOMUX_OUTPUT_IF_E output, const FLR_DVOMUX_SOURCE_E source, const FLR_DVOMUX_TYPE_E type);
FLR_RESULT dvoMuxGetType(const FLR_DVOMUX_OUTPUT_IF_E output, FLR_DVOMUX_SOURCE_E *source, FLR_DVOMUX_TYPE_E *type);
FLR_RESULT fileOpsDir(uint8_t *dirent);
FLR_RESULT fileOpsCd(const uint8_t path[], uint8_t *pwd);
FLR_RESULT fileOpsMd(const uint8_t path[]);
FLR_RESULT fileOpsFopen(const uint8_t path[], const uint8_t mode[], uint32_t *id);
FLR_RESULT fileOpsFclose(const uint32_t id);
FLR_RESULT fileOpsFread(const uint32_t id, const uint32_t length, uint8_t *buf, uint32_t *ret);
FLR_RESULT fileOpsFwrite(const uint32_t id, const uint32_t length, const uint8_t buf[], uint32_t *ret);
FLR_RESULT fileOpsFtell(const uint32_t id, uint32_t *offset);
FLR_RESULT fileOpsFseek(const uint32_t id, const uint32_t offset, const uint32_t origin);
FLR_RESULT fileOpsFtruncate(const uint32_t id, const uint32_t length);
FLR_RESULT fileOpsRmdir(const uint8_t path[]);
FLR_RESULT fileOpsRm(const uint8_t path[]);
FLR_RESULT fileOpsRename(const uint8_t oldpath[], const uint8_t newpath[]);
FLR_RESULT fileOpsGetFileSize(const uint8_t path[], uint32_t *fileLength);
FLR_RESULT flashIOSetProtectionState(const FLR_ENABLE_E protectionState);
FLR_RESULT flashIOGetProtectionState(FLR_ENABLE_E *protectionState);
FLR_RESULT flashMapFsGetHeaderVersion(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT gaoSetGainState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetGainState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetFfcState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetFfcState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetTempCorrectionState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetTempCorrectionState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetIConstL(const int16_t data);
FLR_RESULT gaoGetIConstL(int16_t *data);
FLR_RESULT gaoSetIConstM(const int16_t data);
FLR_RESULT gaoGetIConstM(int16_t *data);
FLR_RESULT gaoSetAveragerState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetAveragerState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetNumFFCFrames(const uint16_t data);
FLR_RESULT gaoGetNumFFCFrames(uint16_t *data);
FLR_RESULT gaoGetAveragerThreshold(uint16_t *data);
FLR_RESULT gaoSetTestRampState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetTestRampState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetSffcState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetSffcState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetNucType(const FLR_GAO_NUC_TYPE_E nucType);
FLR_RESULT gaoGetNucType(FLR_GAO_NUC_TYPE_E *nucType);
FLR_RESULT gaoSetFfcZeroMeanState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetFfcZeroMeanState(FLR_ENABLE_E *data);
FLR_RESULT gaoGetAveragerDesiredState(FLR_ENABLE_E *data);
FLR_RESULT gaoGetAppliedClip(uint16_t *data);
FLR_RESULT gaoSetAppliedClipEnable(const FLR_ENABLE_E data);
FLR_RESULT gaoGetAppliedClipEnable(FLR_ENABLE_E *data);
FLR_RESULT gaoSetFfcShutterSimulationState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetFfcShutterSimulationState(FLR_ENABLE_E *data);
FLR_RESULT gaoSetFfcShutterSimulatorValue(const uint16_t value);
FLR_RESULT gaoGetFfcShutterSimulatorValue(uint16_t *value);
FLR_RESULT gaoSetBcnrState(const FLR_ENABLE_E data);
FLR_RESULT gaoGetBcnrState(FLR_ENABLE_E *data);
FLR_RESULT gaoGetAppliedSffcScaleFactor(float *data);
FLR_RESULT gaoSetSffcMode(const FLR_GAO_SFFC_MODE_E mode);
FLR_RESULT gaoGetSffcMode(FLR_GAO_SFFC_MODE_E *mode);
FLR_RESULT imageStatsGetTotalHistPixelsInROI(uint32_t *totalPixelsInROI);
FLR_RESULT imageStatsGetPopBelowLowToHighThresh(uint32_t *popBelowLowToHighThresh);
FLR_RESULT imageStatsGetPopAboveHighToLowThresh(uint32_t *popAboveHighToLowThresh);
FLR_RESULT imageStatsSetROI(const FLR_ROI_T roi);
FLR_RESULT imageStatsGetROI(FLR_ROI_T *roi);
FLR_RESULT imageStatsGetFirstBin(uint16_t *firstBin);
FLR_RESULT imageStatsGetLastBin(uint16_t *lastBin);
FLR_RESULT imageStatsGetMean(uint16_t *mean);
FLR_RESULT imageStatsGetFirstBinInROI(uint16_t *firstBinInROI);
FLR_RESULT imageStatsGetLastBinInROI(uint16_t *lastBinInROI);
FLR_RESULT imageStatsGetMeanInROI(uint16_t *meanInROI);
FLR_RESULT imageStatsGetImageStats(uint16_t *meanIntensity, uint16_t *peakIntensity, uint16_t *baseIntensity);
FLR_RESULT imageStatsGetPopAboveLowToHighThreshCATS(uint32_t *popAboveLowToHighThresh);
FLR_RESULT imageStatsGetPopBelowHighToLowThreshCATS(uint32_t *popBelowHighToLowThresh);
FLR_RESULT imageStatsGetPopBetweenLthCATSAndLthSATS(uint32_t *popBetweenCatsAndSats);
FLR_RESULT isothermGetEnable(FLR_ENABLE_E *isothermEnable);
FLR_RESULT isothermSetEnable(const FLR_ENABLE_E isothermEnable);
FLR_RESULT isothermSetTemps(const FLR_ISOTHERM_GAIN_E table, const int32_t thIsoT1, const int32_t thIsoT2, const int32_t thIsoT3, const int32_t thIsoT4, const int32_t thIsoT5);
FLR_RESULT isothermGetTemps(const FLR_ISOTHERM_GAIN_E table, int32_t *thIsoT1, int32_t *thIsoT2, int32_t *thIsoT3, int32_t *thIsoT4, int32_t *thIsoT5);
FLR_RESULT isothermSetIsoColorValues(const FLR_ISOTHERM_GAIN_E table, const FLR_ISOTHERM_COLORS_T region0, const FLR_ISOTHERM_COLORS_T region1, const FLR_ISOTHERM_COLORS_T region2, const FLR_ISOTHERM_COLORS_T region3, const FLR_ISOTHERM_COLORS_T region4, const FLR_ISOTHERM_COLORS_T region5);
FLR_RESULT isothermGetIsoColorValues(const FLR_ISOTHERM_GAIN_E table, FLR_ISOTHERM_COLORS_T *region0, FLR_ISOTHERM_COLORS_T *region1, FLR_ISOTHERM_COLORS_T *region2, FLR_ISOTHERM_COLORS_T *region3, FLR_ISOTHERM_COLORS_T *region4, FLR_ISOTHERM_COLORS_T *region5);
FLR_RESULT isothermSetRegionMode(const FLR_ISOTHERM_GAIN_E table, const FLR_ISOTHERM_REGION_E region0, const FLR_ISOTHERM_REGION_E region1, const FLR_ISOTHERM_REGION_E region2, const FLR_ISOTHERM_REGION_E region3, const FLR_ISOTHERM_REGION_E region4, const FLR_ISOTHERM_REGION_E region5);
FLR_RESULT isothermGetRegionMode(const FLR_ISOTHERM_GAIN_E table, FLR_ISOTHERM_REGION_E *region0, FLR_ISOTHERM_REGION_E *region1, FLR_ISOTHERM_REGION_E *region2, FLR_ISOTHERM_REGION_E *region3, FLR_ISOTHERM_REGION_E *region4, FLR_ISOTHERM_REGION_E *region5);
FLR_RESULT isothermGetUnit(FLR_ISOTHERM_UNIT_E *unit);
FLR_RESULT isothermSetUnit(const FLR_ISOTHERM_UNIT_E unit);
FLR_RESULT isothermGetSettingsLowGain(FLR_ISOTHERM_SETTINGS_T *settings);
FLR_RESULT isothermSetSettingsLowGain(const FLR_ISOTHERM_SETTINGS_T settings);
FLR_RESULT isothermGetSettingsHighGain(FLR_ISOTHERM_SETTINGS_T *settings);
FLR_RESULT isothermSetSettingsHighGain(const FLR_ISOTHERM_SETTINGS_T settings);
FLR_RESULT isothermSetColorLutId(const FLR_COLORLUT_ID_E colorLutIdLowGain, const FLR_COLORLUT_ID_E colorLutIdHighGain);
FLR_RESULT isothermGetColorLutId(FLR_COLORLUT_ID_E *colorLutIdLowGain, FLR_COLORLUT_ID_E *colorLutIdHighGain);
FLR_RESULT jffs2Mount();
FLR_RESULT jffs2Unmount();
FLR_RESULT jffs2GetState(FLR_JFFS2_STATE_E *state);
FLR_RESULT latencyCtrlSetLowLatencyState(const FLR_ENABLE_E data);
FLR_RESULT latencyCtrlGetLowLatencyState(FLR_ENABLE_E *data);
FLR_RESULT latencyCtrlSetJitterReduction(const FLR_ENABLE_E enable, const int32_t line);
FLR_RESULT latencyCtrlGetJitterReduction(FLR_ENABLE_E *enable, int32_t *line);
FLR_RESULT latencyCtrlLatencyResetStats();
FLR_RESULT latencyCtrlGetJitter(float *jitterMin, float *jitterMax);
FLR_RESULT latencyCtrlGetLatency(float *latencyMin, float *latencyMax);
FLR_RESULT latencyCtrlSetUsbVideoLatencyReduction(const int32_t line);
FLR_RESULT latencyCtrlGetUsbVideoLatencyReduction(int32_t *line);
FLR_RESULT lfsrSetApplyOffsetEnableState(const FLR_ENABLE_E data);
FLR_RESULT lfsrGetApplyOffsetEnableState(FLR_ENABLE_E *data);
FLR_RESULT lfsrSetMaxIterations(const uint32_t data);
FLR_RESULT lfsrGetMaxIterations(uint32_t *data);
FLR_RESULT lfsrSetDf(const uint32_t data);
FLR_RESULT lfsrGetDf(uint32_t *data);
FLR_RESULT lfsrSetLambda1(const float data);
FLR_RESULT lfsrGetLambda1(float *data);
FLR_RESULT lfsrSetLambda2(const float data);
FLR_RESULT lfsrGetLambda2(float *data);
FLR_RESULT lfsrSetHaltEnable(const FLR_ENABLE_E data);
FLR_RESULT lfsrGetHaltEnable(FLR_ENABLE_E *data);
FLR_RESULT lfsrSetRandomMethod(const uint32_t data);
FLR_RESULT lfsrGetRandomMethod(uint32_t *data);
FLR_RESULT lfsrSetSingleStepEnable(const FLR_ENABLE_E data);
FLR_RESULT lfsrGetSingleStepEnable(FLR_ENABLE_E *data);
FLR_RESULT lfsrSetR_LocalBump(const float data);
FLR_RESULT lfsrGetR_LocalBump(float *data);
FLR_RESULT lfsrSetR_CornerBump(const float data);
FLR_RESULT lfsrGetR_CornerBump(float *data);
FLR_RESULT lfsrSetFFC_ResetEnable(const FLR_ENABLE_E data);
FLR_RESULT lfsrGetFFC_ResetEnable(FLR_ENABLE_E *data);
FLR_RESULT lfsrSetNormalizeAtCenterSpotState(const FLR_ENABLE_E data);
FLR_RESULT lfsrGetNormalizeAtCenterSpotState(FLR_ENABLE_E *data);
FLR_RESULT memReadCapture(const uint8_t bufferNum, const uint32_t offset, const uint16_t sizeInBytes, uint8_t *data);
FLR_RESULT memGetCaptureSize(uint32_t *bytes, uint16_t *rows, uint16_t *columns);
FLR_RESULT memWriteFlash(const FLR_MEM_LOCATION_E location, const uint8_t index, const uint32_t offset, const uint16_t sizeInBytes, uint8_t *data);
FLR_RESULT memReadFlash(const FLR_MEM_LOCATION_E location, const uint8_t index, const uint32_t offset, const uint16_t sizeInBytes, uint8_t *data);
FLR_RESULT memGetFlashSize(const FLR_MEM_LOCATION_E location, uint32_t *bytes);
FLR_RESULT memEraseFlash(const FLR_MEM_LOCATION_E location, const uint8_t index);
FLR_RESULT memEraseFlashPartial(const FLR_MEM_LOCATION_E location, const uint8_t index, const uint32_t offset, const uint32_t length);
FLR_RESULT memReadCurrentGain(const uint32_t offset, const uint16_t sizeInBytes, uint8_t *data);
FLR_RESULT memGetGainSize(uint32_t *bytes, uint16_t *rows, uint16_t *columns);
FLR_RESULT memGetCaptureSizeSrc(const FLR_CAPTURE_SRC_E src, uint32_t *bytes, uint16_t *rows, uint16_t *columns);
FLR_RESULT memReadCaptureSrc(const FLR_CAPTURE_SRC_E src, const uint8_t bufferNum, const uint32_t offset, const uint16_t sizeInBytes, uint8_t *data);
FLR_RESULT radiometrySetTempStableEnable(const FLR_ENABLE_E data);
FLR_RESULT radiometryGetTempStableEnable(FLR_ENABLE_E *data);
FLR_RESULT radiometrySetFNumberLens0(const float data);
FLR_RESULT radiometryGetFNumberLens0(float *data);
FLR_RESULT radiometrySetFNumberLens1(const float data);
FLR_RESULT radiometryGetFNumberLens1(float *data);
FLR_RESULT radiometrySetTauLens0(const float data);
FLR_RESULT radiometryGetTauLens0(float *data);
FLR_RESULT radiometrySetTauLens1(const float data);
FLR_RESULT radiometryGetTauLens1(float *data);
FLR_RESULT radiometryGetGlobalGainDesired(float *data);
FLR_RESULT radiometryGetGlobalOffsetDesired(float *data);
FLR_RESULT radiometryGetGlobalGainApplied(float *data);
FLR_RESULT radiometryGetGlobalOffsetApplied(float *data);
FLR_RESULT radiometrySetTComponentOverrideMode(const FLR_ENABLE_E data);
FLR_RESULT radiometryGetTComponentOverrideMode(FLR_ENABLE_E *data);
FLR_RESULT radiometrySetGlobalGainOverride(const float data);
FLR_RESULT radiometryGetGlobalGainOverride(float *data);
FLR_RESULT radiometrySetGlobalOffsetOverride(const uint16_t data);
FLR_RESULT radiometryGetGlobalOffsetOverride(uint16_t *data);
FLR_RESULT radiometrySetGlobalParamOverrideMode(const FLR_ENABLE_E data);
FLR_RESULT radiometryGetGlobalParamOverrideMode(FLR_ENABLE_E *data);
FLR_RESULT radiometrySetRBFOHighGainDefault(const FLR_RADIOMETRY_RBFO_PARAMS_T data);
FLR_RESULT radiometryGetRBFOHighGainDefault(FLR_RADIOMETRY_RBFO_PARAMS_T *data);
FLR_RESULT radiometrySetRBFOLowGainDefault(const FLR_RADIOMETRY_RBFO_PARAMS_T data);
FLR_RESULT radiometryGetRBFOLowGainDefault(FLR_RADIOMETRY_RBFO_PARAMS_T *data);
FLR_RESULT radiometrySetRBFOHighGainFactory(const FLR_RADIOMETRY_RBFO_PARAMS_T data);
FLR_RESULT radiometryGetRBFOHighGainFactory(FLR_RADIOMETRY_RBFO_PARAMS_T *data);
FLR_RESULT radiometrySetRBFOLowGainFactory(const FLR_RADIOMETRY_RBFO_PARAMS_T data);
FLR_RESULT radiometryGetRBFOLowGainFactory(FLR_RADIOMETRY_RBFO_PARAMS_T *data);
FLR_RESULT radiometrySetDampingFactor(const float data);
FLR_RESULT radiometryGetDampingFactor(float *data);
FLR_RESULT radiometryGetGoMEQ(float *data);
FLR_RESULT radiometryGetGoMShutter(float *data);
FLR_RESULT radiometryGetGoMLens(float *data);
FLR_RESULT radiometryGetGoMLG(float *data);
FLR_RESULT radiometryGetGoMFFC(float *data);
FLR_RESULT radiometryGetTempLensHousing(float *data);
FLR_RESULT radiometryGetTempShutterHousing(float *data);
FLR_RESULT radiometryGetTempShutterPaddle(float *data);
FLR_RESULT radiometrySetFNumberShutterHousing(const float data);
FLR_RESULT radiometryGetFNumberShutterHousing(float *data);
FLR_RESULT radiometrySetEmissivityShutterHousing(const float data);
FLR_RESULT radiometryGetEmissivityShutterHousing(float *data);
FLR_RESULT radiometrySetM_DTfpa_Lens(const float data);
FLR_RESULT radiometryGetM_DTfpa_Lens(float *data);
FLR_RESULT radiometrySetOffset_Lens(const float data);
FLR_RESULT radiometryGetOffset_Lens(float *data);
FLR_RESULT radiometrySetM_Recursive_Lens(const float data);
FLR_RESULT radiometryGetM_Recursive_Lens(float *data);
FLR_RESULT radiometryGetGgFfc(float *data);
FLR_RESULT radiometryGetCountsFromTemp(const FLR_RADIOMETRY_RBFO_TYPE_E rbfoType, const float temp, uint16_t *counts);
FLR_RESULT radiometryGetTempFromCounts(const FLR_RADIOMETRY_RBFO_TYPE_E rbfoType, const uint16_t counts, float *temp);
FLR_RESULT radiometrySetTempLensHousingOverride(const float data);
FLR_RESULT radiometryGetTempLensHousingOverride(float *data);
FLR_RESULT radiometrySetTempShutterHousingOverride(const float data);
FLR_RESULT radiometryGetTempShutterHousingOverride(float *data);
FLR_RESULT radiometrySetTempShutterPaddleOverride(const float data);
FLR_RESULT radiometryGetTempShutterPaddleOverride(float *data);
FLR_RESULT radiometrySetSignalFactorLut(const FLR_RADIOMETRY_SIGNAL_COMP_FACTOR_LUT_T data);
FLR_RESULT radiometryGetSignalFactorLut(FLR_RADIOMETRY_SIGNAL_COMP_FACTOR_LUT_T *data);
FLR_RESULT radiometrySetNoiseFactorLut(const FLR_RADIOMETRY_NOISE_COMP_FACTOR_LUT_T data);
FLR_RESULT radiometryGetNoiseFactorLut(FLR_RADIOMETRY_NOISE_COMP_FACTOR_LUT_T *data);
FLR_RESULT radiometrySetM_tfpaK(const float data);
FLR_RESULT radiometryGetM_tfpaK(float *data);
FLR_RESULT radiometrySetB_tfpaK(const float data);
FLR_RESULT radiometryGetB_tfpaK(float *data);
FLR_RESULT radiometrySetTAuxParams(const FLR_RADIOMETRY_TAUX_PARAMS_T data);
FLR_RESULT radiometryGetTAuxParams(FLR_RADIOMETRY_TAUX_PARAMS_T *data);
FLR_RESULT radiometrySetM_tAux(const float data);
FLR_RESULT radiometryGetM_tAux(float *data);
FLR_RESULT radiometrySetB_tAux(const float data);
FLR_RESULT radiometryGetB_tAux(float *data);
FLR_RESULT radiometrySetTsource_FFC(const float data);
FLR_RESULT radiometryGetTsource_FFC(float *data);
FLR_RESULT radiometrySetM_DTfpa_Sh_h(const float data);
FLR_RESULT radiometryGetM_DTfpa_Sh_h(float *data);
FLR_RESULT radiometrySetOffset_Sh_h(const float data);
FLR_RESULT radiometryGetOffset_Sh_h(float *data);
FLR_RESULT radiometrySetM_Recursive_Sh_h(const float data);
FLR_RESULT radiometryGetM_Recursive_Sh_h(float *data);
FLR_RESULT radiometrySetM_DTfpa_Sh_p(const float data);
FLR_RESULT radiometryGetM_DTfpa_Sh_p(float *data);
FLR_RESULT radiometrySetOffset_Sh_p(const float data);
FLR_RESULT radiometryGetOffset_Sh_p(float *data);
FLR_RESULT radiometrySetM_Recursive_Sh_p(const float data);
FLR_RESULT radiometryGetM_Recursive_Sh_p(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_p(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_p(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_p(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_p(float *data);
FLR_RESULT radiometryGetDtTfpaK(float *data);
FLR_RESULT radiometryGetDtTfpaK_Damp(float *data);
FLR_RESULT radiometryGetTAuxK(float *data);
FLR_RESULT radiometrySetExternalFfcUpdateMode(const FLR_ENABLE_E data);
FLR_RESULT radiometryGetExternalFfcUpdateMode(FLR_ENABLE_E *data);
FLR_RESULT radiometryGetGG_scale(float *data);
FLR_RESULT radiometrySetTempWindow(const float data);
FLR_RESULT radiometryGetTempWindow(float *data);
FLR_RESULT radiometrySetTransmissionWindow(const float data);
FLR_RESULT radiometryGetTransmissionWindow(float *data);
FLR_RESULT radiometrySetReflectivityWindow(const float data);
FLR_RESULT radiometryGetReflectivityWindow(float *data);
FLR_RESULT radiometrySetTempWindowReflection(const float data);
FLR_RESULT radiometryGetTempWindowReflection(float *data);
FLR_RESULT radiometrySetTransmissionAtmosphere(const float data);
FLR_RESULT radiometryGetTransmissionAtmosphere(float *data);
FLR_RESULT radiometrySetTempAtmosphere(const float data);
FLR_RESULT radiometryGetTempAtmosphere(float *data);
FLR_RESULT radiometrySetEmissivityTarget(const float data);
FLR_RESULT radiometryGetEmissivityTarget(float *data);
FLR_RESULT radiometrySetTempBackground(const float data);
FLR_RESULT radiometryGetTempBackground(float *data);
FLR_RESULT radiometryGetRadiometryCapable(FLR_ENABLE_E *data);
FLR_RESULT radiometrySetdeltaTempDampingFactor(const float data);
FLR_RESULT radiometryGetdeltaTempDampingFactor(float *data);
FLR_RESULT radiometrySetdeltaTempIntervalTime(const float data);
FLR_RESULT radiometryGetdeltaTempIntervalTime(float *data);
FLR_RESULT radiometrySetdeltaTempMaxValue(const float data);
FLR_RESULT radiometryGetdeltaTempMaxValue(float *data);
FLR_RESULT radiometrySetdeltaTempMaxIncrement(const float data);
FLR_RESULT radiometryGetdeltaTempMaxIncrement(float *data);
FLR_RESULT radiometrySetdeltaTempDampingTime(const float data);
FLR_RESULT radiometryGetdeltaTempDampingTime(float *data);
FLR_RESULT radiometryGetResponsivityFpaTemp(float *data);
FLR_RESULT radiometrySetM_Delta_Lens(const float data);
FLR_RESULT radiometryGetM_Delta_Lens(float *data);
FLR_RESULT radiometrySetB_Delta_Lens(const float data);
FLR_RESULT radiometryGetB_Delta_Lens(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_h(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_h(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_h(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_h(float *data);
FLR_RESULT radiometrySetGG_Scale_HG(const float data);
FLR_RESULT radiometryGetGG_Scale_HG(float *data);
FLR_RESULT radiometrySetGG_Scale_LG(const float data);
FLR_RESULT radiometryGetGG_Scale_LG(float *data);
FLR_RESULT radiometrySetRbfoScaledMode(const FLR_ENABLE_E data);
FLR_RESULT radiometryGetRbfoScaledMode(FLR_ENABLE_E *data);
FLR_RESULT radiometryGetUncertaintyFactor(FLR_RADIOMETRY_UNCERTAINTY_FACTOR_E *data);
FLR_RESULT radiometryGetTRoomMinThresh(float *data);
FLR_RESULT radiometryGetTRoomMaxThresh(float *data);
FLR_RESULT radiometryGetTOperatingMinThresh(float *data);
FLR_RESULT radiometryGetTOperatingMaxThresh(float *data);
FLR_RESULT radiometryGetStableTempThresh(float *data);
FLR_RESULT radiometryGetSlowDriftThresh(float *data);
FLR_RESULT radiometryGetFfcTempThresh(float *data);
FLR_RESULT radiometryGetTargetTempMinThreshLG(float *data);
FLR_RESULT radiometryGetTargetTempMaxThreshLG(float *data);
FLR_RESULT radiometryGetMFactorThresh(float *data);
FLR_RESULT radiometryGetTargetTempMinThreshHG(float *data);
FLR_RESULT radiometryGetTargetTempMaxThreshHG(float *data);
FLR_RESULT radiometryGetUncertaintyStatusBits(uint16_t *data);
FLR_RESULT radiometrySetTemperatureOffset_HG(const float data);
FLR_RESULT radiometryGetTemperatureOffset_HG(float *data);
FLR_RESULT radiometrySetTemperatureOffset_LG(const float data);
FLR_RESULT radiometryGetTemperatureOffset_LG(float *data);
FLR_RESULT radiometrySetM_Delta_Lens_HG(const float data);
FLR_RESULT radiometryGetM_Delta_Lens_HG(float *data);
FLR_RESULT radiometrySetB_Delta_Lens_HG(const float data);
FLR_RESULT radiometryGetB_Delta_Lens_HG(float *data);
FLR_RESULT radiometrySetM_Delta_Lens_LG(const float data);
FLR_RESULT radiometryGetM_Delta_Lens_LG(float *data);
FLR_RESULT radiometrySetB_Delta_Lens_LG(const float data);
FLR_RESULT radiometryGetB_Delta_Lens_LG(float *data);
FLR_RESULT radiometrySetOffset_Lens_HG(const float data);
FLR_RESULT radiometryGetOffset_Lens_HG(float *data);
FLR_RESULT radiometrySetOffset_Lens_LG(const float data);
FLR_RESULT radiometryGetOffset_Lens_LG(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_p_HG(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_p_HG(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_p_HG(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_p_HG(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_p_LG(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_p_LG(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_p_LG(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_p_LG(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_h_HG(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_h_HG(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_h_HG(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_h_HG(float *data);
FLR_RESULT radiometrySetM_Delta_Sh_h_LG(const float data);
FLR_RESULT radiometryGetM_Delta_Sh_h_LG(float *data);
FLR_RESULT radiometrySetB_Delta_Sh_h_LG(const float data);
FLR_RESULT radiometryGetB_Delta_Sh_h_LG(float *data);
FLR_RESULT radiometryGetGG_RoomTemp(float *data);
FLR_RESULT roicGetFPATemp(uint16_t *data);
FLR_RESULT roicGetFrameCount(uint32_t *data);
FLR_RESULT roicGetActiveNormalizationTarget(uint16_t *data);
FLR_RESULT roicSetFPARampState(const FLR_ENABLE_E state);
FLR_RESULT roicGetFPARampState(FLR_ENABLE_E *state);
FLR_RESULT roicGetSensorADC1(uint16_t *data);
FLR_RESULT roicGetSensorADC2(uint16_t *data);
FLR_RESULT roicSetFPATempOffset(const int16_t data);
FLR_RESULT roicGetFPATempOffset(int16_t *data);
FLR_RESULT roicSetFPATempMode(const FLR_ROIC_TEMP_MODE_E data);
FLR_RESULT roicGetFPATempMode(FLR_ROIC_TEMP_MODE_E *data);
FLR_RESULT roicGetFPATempTable(FLR_ROIC_FPATEMP_TABLE_T *table);
FLR_RESULT roicSetFPATempValue(const uint16_t data);
FLR_RESULT roicGetFPATempValue(uint16_t *data);
FLR_RESULT roicGetPreambleError(uint32_t *preambleError);
FLR_RESULT roicInducePreambleError(const uint32_t everyNthFrame);
FLR_RESULT roicGetRoicStarted(FLR_ENABLE_E *roicStarted);
FLR_RESULT roicSetFrameSkip(const uint16_t data);
FLR_RESULT roicGetFrameSkip(uint16_t *data);
FLR_RESULT roicSetFrameOneShot();
FLR_RESULT scalerGetMaxZoom(uint32_t *zoom);
FLR_RESULT scalerSetZoom(const FLR_SCALER_ZOOM_PARAMS_T zoomParams);
FLR_RESULT scalerGetZoom(FLR_SCALER_ZOOM_PARAMS_T *zoomParams);
FLR_RESULT scalerSetFractionalZoom(const uint32_t zoomNumerator, const uint32_t zoomDenominator, const uint32_t zoomXCenter, const uint32_t zoomYCenter, const FLR_ENABLE_E inChangeEnable, const uint32_t zoomOutXCenter, const uint32_t zoomOutYCenter, const FLR_ENABLE_E outChangeEnable);
FLR_RESULT scalerSetIndexZoom(const uint32_t zoomIndex, const uint32_t zoomXCenter, const uint32_t zoomYCenter, const FLR_ENABLE_E inChangeEnable, const uint32_t zoomOutXCenter, const uint32_t zoomOutYCenter, const FLR_ENABLE_E outChangeEnable);
FLR_RESULT scnrSetEnableState(const FLR_ENABLE_E data);
FLR_RESULT scnrGetEnableState(FLR_ENABLE_E *data);
FLR_RESULT scnrSetThColSum(const uint16_t data);
FLR_RESULT scnrGetThColSum(uint16_t *data);
FLR_RESULT scnrSetThPixel(const uint16_t data);
FLR_RESULT scnrGetThPixel(uint16_t *data);
FLR_RESULT scnrSetMaxCorr(const uint16_t data);
FLR_RESULT scnrGetMaxCorr(uint16_t *data);
FLR_RESULT scnrGetThPixelApplied(uint16_t *data);
FLR_RESULT scnrGetMaxCorrApplied(uint16_t *data);
FLR_RESULT scnrSetThColSumSafe(const uint16_t data);
FLR_RESULT scnrGetThColSumSafe(uint16_t *data);
FLR_RESULT scnrSetThPixelSafe(const uint16_t data);
FLR_RESULT scnrGetThPixelSafe(uint16_t *data);
FLR_RESULT scnrSetMaxCorrSafe(const uint16_t data);
FLR_RESULT scnrGetMaxCorrSafe(uint16_t *data);
FLR_RESULT scnrSetCorrectionMethod(const FLR_SCNR_CORR_SELECT_E data);
FLR_RESULT scnrGetCorrectionMethod(FLR_SCNR_CORR_SELECT_E *data);
FLR_RESULT scnrSetStdThreshold(const uint16_t data);
FLR_RESULT scnrGetStdThreshold(uint16_t *data);
FLR_RESULT scnrSetNFrames(const uint32_t data);
FLR_RESULT scnrGetNFrames(uint32_t *data);
FLR_RESULT scnrSetResetDesired(const uint32_t data);
FLR_RESULT scnrGetResetDesired(uint32_t *data);
FLR_RESULT scnrSetM_modeOnly(const uint32_t data);
FLR_RESULT scnrGetM_modeOnly(uint32_t *data);
FLR_RESULT scnrGetMode(FLR_SCNR_MODE_E *data);
FLR_RESULT scnrSetSpecklesEnableState(const FLR_ENABLE_E data);
FLR_RESULT scnrGetSpecklesEnableState(FLR_ENABLE_E *data);
FLR_RESULT scnrSetSpecklesThreshold(const uint32_t data);
FLR_RESULT scnrGetSpecklesThreshold(uint32_t *data);
FLR_RESULT scnrSetSpecklesRatio(const float data);
FLR_RESULT scnrGetSpecklesRatio(float *data);
FLR_RESULT scnrSetSpecklesDF(const float data);
FLR_RESULT scnrGetSpecklesDF(float *data);
FLR_RESULT scnrGetSpecklesDiffsBufferAddr(uint32_t *data);
FLR_RESULT scnrGetSpecklesOffsBufferAddr(uint32_t *data);
FLR_RESULT scnrSetSpecklesResetDesired(const FLR_ENABLE_E data);
FLR_RESULT scnrGetSpecklesResetDesired(FLR_ENABLE_E *data);
FLR_RESULT sffcGetScaleFactor(float *data);
FLR_RESULT sffcGetDeltaTempLinearCoeff(float *data);
FLR_RESULT sffcSetDeltaTempLinearCoeff(const float data);
FLR_RESULT sffcGetDeltaTempOffsetCoeff(float *data);
FLR_RESULT sffcSetDeltaTempOffsetCoeff(const float data);
FLR_RESULT sffcGetFpaTempLinearCoeff(float *data);
FLR_RESULT sffcSetFpaTempLinearCoeff(const float data);
FLR_RESULT sffcGetFpaTempOffsetCoeff(float *data);
FLR_RESULT sffcSetFpaTempOffsetCoeff(const float data);
FLR_RESULT sffcGetDeltaTempTimeLimitInSecs(uint32_t *data);
FLR_RESULT sffcSetDeltaTempTimeLimitInSecs(const uint32_t data);
FLR_RESULT spnrSetEnableState(const FLR_ENABLE_E data);
FLR_RESULT spnrGetEnableState(FLR_ENABLE_E *data);
FLR_RESULT spnrGetState(FLR_SPNR_STATE_E *data);
FLR_RESULT spnrSetFrameDelay(const uint32_t data);
FLR_RESULT spnrGetFrameDelay(uint32_t *data);
FLR_RESULT spnrSetSF(const float sf);
FLR_RESULT spnrGetSF(float *sf);
FLR_RESULT spnrGetSFApplied(float *sf);
FLR_RESULT spnrSetPSDKernel(const FLR_SPNR_PSD_KERNEL_T data);
FLR_RESULT spnrGetPSDKernel(FLR_SPNR_PSD_KERNEL_T *data);
FLR_RESULT spnrSetSFMin(const float sfmin);
FLR_RESULT spnrGetSFMin(float *sfmin);
FLR_RESULT spnrSetSFMax(const float sfmax);
FLR_RESULT spnrGetSFMax(float *sfmax);
FLR_RESULT spnrSetDFMin(const float dfmin);
FLR_RESULT spnrGetDFMin(float *dfmin);
FLR_RESULT spnrSetDFMax(const float dfmax);
FLR_RESULT spnrGetDFMax(float *dfmax);
FLR_RESULT spnrSetNormTarget(const float normTarget);
FLR_RESULT spnrGetNormTarget(float *normTarget);
FLR_RESULT spnrGetNormTargetApplied(float *normTargetApplied);
FLR_RESULT spnrSetThPix(const uint16_t th_pix);
FLR_RESULT spnrGetThPix(uint16_t *th_pix);
FLR_RESULT spnrSetThPixSum(const uint16_t th_pixSum);
FLR_RESULT spnrGetThPixSum(uint16_t *th_pixSum);
FLR_RESULT spnrSetMaxcorr(const uint16_t maxcorr);
FLR_RESULT spnrGetMaxcorr(uint16_t *maxcorr);
FLR_RESULT spnrGetAlgorithm(FLR_SPNR_ALGORITHM_E *data);
FLR_RESULT spnrSetAlgorithmDesired(const FLR_SPNR_ALGORITHM_E data);
FLR_RESULT spnrGetAlgorithmDesired(FLR_SPNR_ALGORITHM_E *data);
FLR_RESULT spnrSetDFFast(const float dffast);
FLR_RESULT spnrGetDFFast(float *dffast);
FLR_RESULT spnrSetDFSlow(const float dfslow);
FLR_RESULT spnrGetDFSlow(float *dfslow);
FLR_RESULT spnrSetSensitivityThreshold(const float threshold);
FLR_RESULT spnrGetSensitivityThreshold(float *threshold);
FLR_RESULT spnrSetReset(const FLR_SPNR_RESET_E resetType);
FLR_RESULT spotMeterSetEnable(const FLR_ENABLE_E data);
FLR_RESULT spotMeterGetEnable(FLR_ENABLE_E *data);
FLR_RESULT spotMeterGetRoiMaxSize(uint16_t *width, uint16_t *height);
FLR_RESULT spotMeterSetRoi(const FLR_ROI_T roi);
FLR_RESULT spotMeterGetRoi(FLR_ROI_T *roi);
FLR_RESULT spotMeterGetSpotStats(uint16_t *mean, uint16_t *deviation, FLR_SPOTMETER_SPOT_PARAM_T *min, FLR_SPOTMETER_SPOT_PARAM_T *max);
FLR_RESULT spotMeterSetStatsMode(const FLR_SPOTMETER_STATS_TEMP_MODE_E mode);
FLR_RESULT spotMeterGetStatsMode(FLR_SPOTMETER_STATS_TEMP_MODE_E *mode);
FLR_RESULT spotMeterGetTempStats(float *mean, float *deviation, FLR_SPOTMETER_STAT_PARAM_TEMP_T *min, FLR_SPOTMETER_STAT_PARAM_TEMP_T *max);
FLR_RESULT srnrSetEnableState(const FLR_ENABLE_E data);
FLR_RESULT srnrGetEnableState(FLR_ENABLE_E *data);
FLR_RESULT srnrSetThRowSum(const uint16_t data);
FLR_RESULT srnrGetThRowSum(uint16_t *data);
FLR_RESULT srnrSetThPixel(const uint16_t data);
FLR_RESULT srnrGetThPixel(uint16_t *data);
FLR_RESULT srnrSetMaxCorr(const uint16_t data);
FLR_RESULT srnrGetMaxCorr(uint16_t *data);
FLR_RESULT srnrGetThPixelApplied(uint16_t *data);
FLR_RESULT srnrGetMaxCorrApplied(uint16_t *data);
FLR_RESULT symbologySetEnable(const FLR_ENABLE_E draw_symbols);
FLR_RESULT symbologyCreateBitmap(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height);
FLR_RESULT symbologySendData(const uint8_t ID, const int16_t size, const uint8_t text[]);
FLR_RESULT symbologyCreateArc(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const float start_angle, const float end_angle, const uint32_t color);
FLR_RESULT symbologyCreateText(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const int8_t font, const int16_t size, const FLR_SYMBOLOGY_TEXT_ALIGNMENT_E alignment, const uint32_t color, const uint8_t text[]);
FLR_RESULT symbologyMoveSprite(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y);
FLR_RESULT symbologyAddToGroup(const uint8_t ID, const uint8_t group_ID);
FLR_RESULT symbologyRemoveFromGroup(const uint8_t ID, const uint8_t group_ID);
FLR_RESULT symbologyUpdateAndShow(const uint8_t ID, const uint8_t visible);
FLR_RESULT symbologyUpdateAndShowGroup(const uint8_t group_ID, const uint8_t visible);
FLR_RESULT symbologyDelete(const uint8_t ID);
FLR_RESULT symbologyDeleteGroup(const uint8_t group_ID);
FLR_RESULT symbologyCreateFilledRectangle(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const uint32_t color);
FLR_RESULT symbologyCreateOutlinedRectangle(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const uint32_t color);
FLR_RESULT symbologyCreateBitmapFromPng(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t size);
FLR_RESULT symbologyCreateCompressedBitmap(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height);
FLR_RESULT symbologyCreateBitmapFromPngFile(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const uint8_t path[]);
FLR_RESULT symbologyCreateBitmapFromFile(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const uint8_t path[], const FLR_SYMBOLOGY_IMAGE_TYPE_E imageType);
FLR_RESULT symbologyResetWritePosition(const uint8_t ID);
FLR_RESULT symbologyMoveByOffset(const uint8_t ID, const int16_t off_X, const int16_t off_Y);
FLR_RESULT symbologyMoveGroupByOffset(const uint8_t ID, const int16_t off_X, const int16_t off_Y);
FLR_RESULT symbologyCreateFilledEllipse(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const uint32_t color);
FLR_RESULT symbologyCreateLine(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t pos_X2, const int16_t pos_Y2, const uint32_t color);
FLR_RESULT symbologySetZorder(const uint8_t ID, const uint8_t zorder);
FLR_RESULT symbologySaveConfiguration();
FLR_RESULT symbologyReloadConfiguration();
FLR_RESULT symbologyGetEnable(FLR_ENABLE_E *draw_symbols);
FLR_RESULT symbologySetClonesNumber(const uint8_t ID, const uint8_t numberOfClones);
FLR_RESULT symbologyMoveCloneByOffset(const uint8_t ID, const uint8_t cloneID, const int16_t pos_X, const int16_t pos_Y);
FLR_RESULT symbologyMoveCloneSprite(const uint8_t ID, const uint8_t cloneID, const int16_t pos_X, const int16_t pos_Y);
FLR_RESULT symbologySetTransformation(const FLR_SYMBOLOGY_TRANSFORMATION_E transformation);
FLR_RESULT symbologyUpdateAllVisible();
FLR_RESULT symbologySetSizeAndScalingMode(const uint8_t ID, const int16_t width, const int16_t height, const FLR_SYMBOLOGY_SCALING_MODE_E scalingMode);
FLR_RESULT symbologyCreateLineHVT(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t pos_X2, const int16_t pos_Y2, const uint32_t color1, const uint32_t color2, const uint16_t dashLen, const uint16_t thickness);
FLR_RESULT symbologyCreateTextHVT(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const int8_t font, const int16_t size, const FLR_SYMBOLOGY_TEXT_ALIGNMENT_E alignment, const uint32_t color1, const uint32_t color2, const uint8_t dashLen, const uint8_t text[]);
FLR_RESULT symbologyCreateTextBg(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const int8_t font, const int16_t size, const FLR_SYMBOLOGY_TEXT_ALIGNMENT_E alignment, const uint32_t color, const uint32_t bgColor, const uint8_t text[]);
FLR_RESULT symbologyCreateScaledBitmapFromFile(const uint8_t ID, const int16_t pos_X, const int16_t pos_Y, const int16_t width, const int16_t height, const FLR_SYMBOLOGY_SCALING_MODE_E scalingMode, const uint8_t path[], const FLR_SYMBOLOGY_IMAGE_TYPE_E imageType);
FLR_RESULT symbologyGetLocation(const uint8_t ID, int16_t *pos_X, int16_t *pos_Y);
FLR_RESULT symbologyGetSize(const uint8_t ID, int16_t *width, int16_t *height);
FLR_RESULT symbologyGetZorder(const uint8_t ID, uint8_t *zorder);
FLR_RESULT symbologyGetColor(const uint8_t ID, uint32_t *color);
FLR_RESULT symbologyGetType(const uint8_t ID, FLR_SYMBOLOGY_TYPE_E *type);
FLR_RESULT symbologyCopySymbol(const uint8_t source, const uint8_t destination);
FLR_RESULT symbologyGetTextFontSize(const uint8_t ID, int16_t *size);
FLR_RESULT sysctrlSetFreezeState(const FLR_ENABLE_E data);
FLR_RESULT sysctrlGetFreezeState(FLR_ENABLE_E *data);
FLR_RESULT sysctrlGetCameraFrameRate(uint32_t *frameRate);
FLR_RESULT sysctrlGetUptimeSecs(uint32_t *uptime);
FLR_RESULT sysctrlSetUsbVideoIR16Mode(const FLR_SYSCTRL_USBIR16_MODE_E data);
FLR_RESULT sysctrlGetUsbVideoIR16Mode(FLR_SYSCTRL_USBIR16_MODE_E *data);
FLR_RESULT sysctrlSetOperatingMode(const FLR_SYSCTRL_OPERATING_MODE_E data);
FLR_RESULT sysctrlGetOperatingMode(FLR_SYSCTRL_OPERATING_MODE_E *data);
FLR_RESULT sysctrlGetAvgFpaTempCounts(float *data);
FLR_RESULT sysctrlSetFpaTempFrames(const uint16_t data);
FLR_RESULT sysctrlGetFpaTempFrames(uint16_t *data);
FLR_RESULT sysinfoGetMonitorSoftwareRev(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT sysinfoGetMonitorBuildVariant(FLR_SYSINFO_MONITOR_BUILD_VARIANT_T *monitorBuildVariant);
FLR_RESULT sysinfoGetProductName(uint8_t *name);
FLR_RESULT sysinfoGetCameraSN(uint8_t *number);
FLR_RESULT sysinfoGetBootLocation(uint32_t *bootSwLocation);
FLR_RESULT sysinfoGetSwConfigID(FLR_SYSINFO_SW_CONFIG_ID_E *swConfigID);
FLR_RESULT sysinfoGetSwPermissions(FLR_SYSINFO_SW_PERMISSIONS_E *swPermissions);
FLR_RESULT sysinfoGetIs9HzBuild(uint32_t *is9HzBuild);
FLR_RESULT sysinfoGetProductVersion(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT sysinfoGetMonitorProductRev(uint32_t *major, uint32_t *minor, uint32_t *patch);
FLR_RESULT sysinfoGetOpticalRevision(uint16_t *revision);
FLR_RESULT sysinfoGetSensorRevision(uint16_t *revision);
FLR_RESULT sysinfoGetProbeTipSN(uint8_t *number);
FLR_RESULT sysinfoGetMechanicalRevision(uint16_t *revision);
FLR_RESULT sysinfoGetProbeTipType(FLR_SYSINFO_PROBE_TIP_TYPE *type);
FLR_RESULT systemSymbolsGetID(const FLR_SYSTEMSYMBOLS_SYMBOL_E symbol, uint8_t *id, FLR_SYSTEMSYMBOLS_ID_TYPE_E *id_type);
FLR_RESULT systemSymbolsSetID(const FLR_SYSTEMSYMBOLS_SYMBOL_E symbol, const uint8_t id, const FLR_SYSTEMSYMBOLS_ID_TYPE_E id_type);
FLR_RESULT systemSymbolsGetEnable(const FLR_SYSTEMSYMBOLS_SYMBOL_E symbol, FLR_ENABLE_E *enabled);
FLR_RESULT systemSymbolsSetEnable(const FLR_SYSTEMSYMBOLS_SYMBOL_E symbol, const FLR_ENABLE_E enabled);
FLR_RESULT systemSymbolsGetSpotConfig(FLR_SYSTEMSYMBOLS_SPOTCONFIG_T *config);
FLR_RESULT systemSymbolsSetSpotConfig(const FLR_SYSTEMSYMBOLS_SPOTCONFIG_T config);
FLR_RESULT systemSymbolsGetIsoConfig(FLR_SYSTEMSYMBOLS_ISOCONFIG_T *config);
FLR_RESULT systemSymbolsSetIsoConfig(const FLR_SYSTEMSYMBOLS_ISOCONFIG_T config);
FLR_RESULT systemSymbolsGetBarConfig(FLR_SYSTEMSYMBOLS_BARCONFIG_T *lowGainConfig, FLR_SYSTEMSYMBOLS_BARCONFIG_T *highGainConfig, FLR_TEMPERATURE_UNIT_E *unit);
FLR_RESULT systemSymbolsSetBarConfig(const FLR_SYSTEMSYMBOLS_BARCONFIG_T lowGainConfig, const FLR_SYSTEMSYMBOLS_BARCONFIG_T highGainConfig, const FLR_TEMPERATURE_UNIT_E unit);
FLR_RESULT systemSymbolsGetSpotConfigIds(FLR_SYSTEMSYMBOLS_SPOTCONFIG_ID_T *config);
FLR_RESULT systemSymbolsSetSpotConfigIds(const FLR_SYSTEMSYMBOLS_SPOTCONFIG_ID_T config);
FLR_RESULT systemSymbolsGetIsoConfigIds(FLR_SYSTEMSYMBOLS_ISOCONFIG_ID_T *config);
FLR_RESULT systemSymbolsSetIsoConfigIds(const FLR_SYSTEMSYMBOLS_ISOCONFIG_ID_T config);
FLR_RESULT telemetrySetState(const FLR_ENABLE_E data);
FLR_RESULT telemetryGetState(FLR_ENABLE_E *data);
FLR_RESULT telemetrySetLocation(const FLR_TELEMETRY_LOC_E data);
FLR_RESULT telemetryGetLocation(FLR_TELEMETRY_LOC_E *data);
FLR_RESULT telemetrySetPacking(const FLR_TELEMETRY_PACKING_E data);
FLR_RESULT telemetryGetPacking(FLR_TELEMETRY_PACKING_E *data);
FLR_RESULT telemetrySetOrder(const FLR_TELEMETRY_ORDER_E data);
FLR_RESULT telemetryGetOrder(FLR_TELEMETRY_ORDER_E *data);
FLR_RESULT telemetrySetPackingVC1(const FLR_TELEMETRY_PACKING_E data);
FLR_RESULT telemetryGetPackingVC1(FLR_TELEMETRY_PACKING_E *data);
FLR_RESULT telemetrySetMipiEmbeddedDataTag(const FLR_ENABLE_E data);
FLR_RESULT telemetryGetMipiEmbeddedDataTag(FLR_ENABLE_E *data);
FLR_RESULT testRampSetType(const uint8_t index, const FLR_TESTRAMP_TYPE_E data);
FLR_RESULT testRampGetType(const uint8_t index, FLR_TESTRAMP_TYPE_E *data);
FLR_RESULT testRampSetSettings(const uint8_t index, const FLR_TESTRAMP_SETTINGS_T data);
FLR_RESULT testRampGetSettings(const uint8_t index, FLR_TESTRAMP_SETTINGS_T *data);
FLR_RESULT testRampSetMotionState(const FLR_ENABLE_E data);
FLR_RESULT testRampGetMotionState(FLR_ENABLE_E *data);
FLR_RESULT testRampSetIndex(const uint8_t data);
FLR_RESULT testRampGetIndex(uint8_t *data);
FLR_RESULT testRampGetMaxIndex(uint8_t *data);
FLR_RESULT testRampSetPN9ContinuousMode(const FLR_ENABLE_E data);
FLR_RESULT testRampGetPN9ContinuousMode(FLR_ENABLE_E *data);
FLR_RESULT testRampSetAnimationSettings(const FLR_TESTRAMP_ANIMATION_SETTINGS_T settings);
FLR_RESULT testRampGetAnimationSettings(FLR_TESTRAMP_ANIMATION_SETTINGS_T *settings);
FLR_RESULT tfSetEnableState(const FLR_ENABLE_E data);
FLR_RESULT tfGetEnableState(FLR_ENABLE_E *data);
FLR_RESULT tfSetDelta_nf(const uint16_t data);
FLR_RESULT tfGetDelta_nf(uint16_t *data);
FLR_RESULT tfSetTHDeltaMotion(const uint16_t data);
FLR_RESULT tfGetTHDeltaMotion(uint16_t *data);
FLR_RESULT tfSetWLut(const FLR_TF_WLUT_T data);
FLR_RESULT tfGetWLut(FLR_TF_WLUT_T *data);
FLR_RESULT tfGetMotionCount(uint32_t *data);
FLR_RESULT tfSetMotionThreshold(const uint32_t data);
FLR_RESULT tfGetMotionThreshold(uint32_t *data);
FLR_RESULT tfGetDelta_nfApplied(uint16_t *data);
FLR_RESULT tfGetTHDeltaMotionApplied(uint16_t *data);
FLR_RESULT tfSetTempSignalCompFactorLut(const FLR_TF_TEMP_SIGNAL_COMP_FACTOR_LUT_T data);
FLR_RESULT tfGetTempSignalCompFactorLut(FLR_TF_TEMP_SIGNAL_COMP_FACTOR_LUT_T *data);
FLR_RESULT tfGetRnf(uint16_t *rnf);
FLR_RESULT uartSetStartupBaudRate(const FLR_UART_STARTUP_BAUDRATE_E data);
FLR_RESULT uartGetStartupBaudRate(FLR_UART_STARTUP_BAUDRATE_E *data);


#endif
